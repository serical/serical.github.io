<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[BLOB存储、查询图片]]></title>
      <url>/2017/08/21/BLOB%E5%AD%98%E5%82%A8%E3%80%81%E6%9F%A5%E8%AF%A2%E5%9B%BE%E7%89%87/</url>
      <content type="html"><![CDATA[<h3 id="Java后台"><a href="#Java后台" class="headerlink" title="Java后台"></a>Java后台</h3><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Controller</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@org</span><span class="token punctuation">.</span>junit<span class="token punctuation">.</span>Test
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">insert</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>
        InputStream is <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span><span class="token string">"D:\\photo\\1.jpg"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        String sql <span class="token operator">=</span> <span class="token string">"INSERT INTO BBB (ID, DATA) VALUES (#[ID], #[DATA])"</span><span class="token punctuation">;</span>
        SQLParams params <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SQLParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        params<span class="token punctuation">.</span><span class="token function">addSQLParam</span><span class="token punctuation">(</span><span class="token string">"ID"</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> SQLParams<span class="token punctuation">.</span>STRING<span class="token punctuation">)</span><span class="token punctuation">;</span>
        params<span class="token punctuation">.</span><span class="token function">addSQLParam</span><span class="token punctuation">(</span><span class="token string">"DATA"</span><span class="token punctuation">,</span> is<span class="token punctuation">,</span> SQLParams<span class="token punctuation">.</span>BLOBFILE<span class="token punctuation">)</span><span class="token punctuation">;</span>

        SQLExecutor<span class="token punctuation">.</span><span class="token function">insertBean</span><span class="token punctuation">(</span>sql<span class="token punctuation">,</span> params<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/getImage"</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">select</span><span class="token punctuation">(</span>HttpServletResponse response<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            String sql <span class="token operator">=</span> <span class="token string">"SELECT DATA FROM BBB WHERE ID = ?"</span><span class="token punctuation">;</span>
            HashMap map <span class="token operator">=</span> SQLExecutor<span class="token punctuation">.</span><span class="token function">queryObject</span><span class="token punctuation">(</span>HashMap<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> sql<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            BLOB blob <span class="token operator">=</span> <span class="token punctuation">(</span>BLOB<span class="token punctuation">)</span> map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"DATA"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            InputStream in <span class="token operator">=</span> blob<span class="token punctuation">.</span><span class="token function">getBinaryStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            OutputStream out <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> length <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
            <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> buffer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">byte</span><span class="token punctuation">[</span><span class="token number">1024</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>length <span class="token operator">=</span> in<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>buffer<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                out<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>buffer<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> length<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            out<span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            out<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            in<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre>
<h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${path}/getImage.do<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
</code></pre>
]]></content>
      
        <categories>
            
            <category> Java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
            <tag> blob </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[组织机构图]]></title>
      <url>/2017/08/10/%E7%BB%84%E7%BB%87%E6%9C%BA%E6%9E%84%E5%9B%BE/</url>
      <content type="html"><![CDATA[<h3 id="一、组件选择"><a href="#一、组件选择" class="headerlink" title="一、组件选择"></a>一、组件选择</h3><ol>
<li><a href="http://philogb.github.io/jit/demos.html" target="_blank" rel="external">JIT-SpaceTree</a>，<a href="http://philogb.github.io/jit/static/v20/Docs/files/Visualizations/Spacetree-js.html" target="_blank" rel="external">API</a></li>
<li><a href="https://d3js.org/" target="_blank" rel="external">d3.js</a></li>
</ol>
<h3 id="二、备用代码"><a href="#二、备用代码" class="headerlink" title="二、备用代码"></a>二、备用代码</h3><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>%@</span> <span class="token attr-name">page</span> <span class="token attr-name">contentType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/html;charset<span class="token punctuation">=</span>UTF-8<span class="token punctuation">"</span></span> <span class="token attr-name">language</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>java<span class="token punctuation">"</span></span> <span class="token attr-name">%</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${pageContext.request.contextPath}/js_lib/jit/Spacetree.css<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${pageContext.request.contextPath}/js_lib/jit/base.css<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${pageContext.request.contextPath}/js_lib/jit/jit-yc.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${pageContext.request.contextPath}/js/jquery-1.11.0.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>

        $(function () {
            init();
        });

        function init(){
            //init data
            var json = {
                id: "node0",
                name: "中国人民银行",
                children: [{
                    id: "node1",
                    name: "董事会",
                    children: [{
                        id: "node3",
                        name: "董事长",
                        children: [{
                            id: "node5",
                            name: "行长",
                            children: ${root}
                        }]
                    }]
                }, {
                    id: "node2",
                    name: "监事会",
                    data: {},
                    children: [{
                        id: "node4",
                        name: "监事长"
                    }]
                }]
            };
            //end
            //init Spacetree
            //Create a new ST instance
            var st = new $jit.ST({
                orientation: 'top', // 根节点在最上面模式
                constrained: false, // 配合levelsToShow，显示所有层级的节点
                levelsToShow: 10, // 注意div[infovis]的高度宽度
                offsetY: 200,
                //id of viz container element
                injectInto: 'infovis',
                //set duration for the animation
                //duration: 800,
                //set animation transition type
                transition: $jit.Trans.Quart.easeInOut,
                //set distance between node and its children
                levelDistance: 50,
                //enable panning
                Navigation: {
                  enable:true,
                  panning:true
                },
                //set node and edge styles
                //set overridable=true for styling individual
                //nodes or edges
                Node: {
                    height: 90,
                    width: 20,
                    type: 'rectangle',
                    color: '#aaa', // 动画框的颜色
                    overridable: true
                },

                Edge: {
                    type: 'bezier',
                    overridable: true
                },
                //This method is called on DOM label creation.
                //Use this method to add event handlers and styles to
                //your node.
                onCreateLabel: function(label, node){
                    label.id = node.id;
                    label.innerHTML = node.name;
                    //set label styles
                    var style = label.style;
                    style.width = 17 + 'px';
                    style.height = 90 + 'px';
                    style.cursor = 'pointer';
                    style.color = '#333'; // 字体颜色
                    style.fontSize = '0.8em';
                    style.textAlign= 'center';
                    style.paddingTop = '3px';

                    if(label.id == "node0") {
                        style.width = 150 + 'px'; // 根节点文字宽度
                        style.height = 20 + 'px'; // 根节点文字高度
                    }
                },

                //This method is called right before plotting
                //a node. It's useful for changing an individual node
                //style properties before plotting it.
                //The data properties prefixed with a dollar
                //sign will override the global node style properties.
                onBeforePlotNode: function(node){
                    //add some color to the nodes in the path between the
                    //root node and the selected node.
                    if (node.selected) {
                        node.data.$color = "#aaa"; // 根节点颜色
                        node.data.$width = 150; // 根节点动画宽度
                        node.data.$height = 20; // 根节点动画高度
                    }
                    else {
                        delete node.data.$color;
                        //if the node belongs to the last plotted level
                        if(!node.anySubnode("exist")) {
                            //count children number
                            var count = 0;
                            node.eachSubnode(function(n) { count++; });
                            //assign a node color based on
                            //how many children it has
                            node.data.$color = ['#aaa', '#baa', '#caa', '#daa', '#eaa', '#faa'][count];
                        }
                    }
                },

                //This method is called right before plotting
                //an edge. It's useful for changing an individual edge
                //style properties before plotting it.
                //Edge data proprties prefixed with a dollar sign will
                //override the Edge global style properties.
                onBeforePlotLine: function(adj){
                    if (adj.nodeFrom.selected &amp;&amp; adj.nodeTo.selected) {
                        adj.data.$color = "#eed";
                        adj.data.$lineWidth = 3;
                    }
                    else {
                        delete adj.data.$color;
                        delete adj.data.$lineWidth;
                    }
                }
            });
            //load json data
            st.loadJSON(json);
            //compute node positions and layout
            st.compute();
            //optional: make a translation of the tree
            st.geom.translate(new $jit.Complex(-200, 0), "current");
            //emulate a click on the root node.
            st.onClick(st.root);
        }

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>infovis<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span>
</code></pre>
]]></content>
      
        <categories>
            
            <category> 前端 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> javascript </tag>
            
            <tag> orgtree </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Java日期setLenient方法]]></title>
      <url>/2017/07/17/Java%E6%97%A5%E6%9C%9FsetLenient%E6%96%B9%E6%B3%95/</url>
      <content type="html"><![CDATA[<pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestDate</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> ParseException <span class="token punctuation">{</span>
        DateFormat format <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SimpleDateFormat</span><span class="token punctuation">(</span><span class="token string">"yyyy-MM-dd"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        format<span class="token punctuation">.</span><span class="token function">setLenient</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// Lenient，宽容，默认true为宽容(即2011-12-33自动转成2012-01-02)</span>
        Date date <span class="token operator">=</span> format<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">"2011-12-33"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>DateFormatUtils<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>date<span class="token punctuation">,</span> <span class="token string">"yyyy-MM-dd"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre>
]]></content>
      
        <categories>
            
            <category> Java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
            <tag> date </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[json格式化高亮]]></title>
      <url>/2017/07/06/json%E6%A0%BC%E5%BC%8F%E5%8C%96%E9%AB%98%E4%BA%AE/</url>
      <content type="html"><![CDATA[<h3 id="高亮插件"><a href="#高亮插件" class="headerlink" title="高亮插件"></a>高亮插件</h3><p><a href="https://highlightjs.org/" target="_blank" rel="external">highlight</a><br><br>引入<code>js</code>与对应主题的<code>css</code></p>
<h3 id="json格式高亮"><a href="#json格式高亮" class="headerlink" title="json格式高亮"></a>json格式高亮</h3><p>应用：读取<code>redis</code>缓存的<code>json</code>对象到页面显示</p>
<pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pre</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>code</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>value<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>code</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pre</span><span class="token punctuation">></span></span>
</code></pre>
<pre class=" language-js"><code class="language-js"><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#value"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span>JSON<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> undefined<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">// 加亮</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"pre code"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>i<span class="token punctuation">,</span> block<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    hljs<span class="token punctuation">.</span><span class="token function">highlightBlock</span><span class="token punctuation">(</span>block<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre>
<h3 id="xml格式高亮"><a href="#xml格式高亮" class="headerlink" title="xml格式高亮"></a>xml格式高亮</h3><p>应用：<code>activiti</code>工作流的流程定义<code>xml</code>文件</p>
<pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pre</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>code</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>defXml<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>code</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pre</span><span class="token punctuation">></span></span>
</code></pre>
<pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">// 替换&lt;>号</span>
data <span class="token operator">=</span> data<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex">/&lt;/g</span><span class="token punctuation">,</span> <span class="token string">"&amp;lt;"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex">/>/g</span><span class="token punctuation">,</span> <span class="token string">"&amp;gt;"</span><span class="token punctuation">)</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#defXml"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">// 加亮</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"pre code"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>i<span class="token punctuation">,</span> block<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    hljs<span class="token punctuation">.</span><span class="token function">highlightBlock</span><span class="token punctuation">(</span>block<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre>
]]></content>
      
        <categories>
            
            <category> 前端 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> javascript </tag>
            
            <tag> highlight </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Oracle Hint使用实例]]></title>
      <url>/2017/07/03/Oracle%20Hint%E4%BD%BF%E7%94%A8%E5%AE%9E%E4%BE%8B/</url>
      <content type="html"><![CDATA[<h3 id="一、背景"><a href="#一、背景" class="headerlink" title="一、背景"></a>一、背景</h3><p>表<code>table</code>有个日期字段<code>date_time</code>有索引，但是随着时间段不一样，<code>查询时间段记录数占总记录数比例不一样</code>,<br>有时候走全表扫描，有时候走索引，全表扫描很慢，需要<code>hint</code>来指定走索引</p>
<h3 id="二、全表扫描"><a href="#二、全表扫描" class="headerlink" title="二、全表扫描"></a>二、全表扫描</h3><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token operator">*</span>
  <span class="token keyword">FROM</span> <span class="token keyword">TABLE</span> T
 <span class="token keyword">WHERE</span> T<span class="token punctuation">.</span>DATE_TIME <span class="token operator">>=</span> TO_DATE<span class="token punctuation">(</span><span class="token string">'20170101'</span><span class="token punctuation">,</span> <span class="token string">'YYYYMMDD'</span><span class="token punctuation">)</span>
   <span class="token operator">AND</span> T<span class="token punctuation">.</span>DATE_TIME <span class="token operator">&lt;=</span> TO_DATE<span class="token punctuation">(</span><span class="token string">'20170331'</span><span class="token punctuation">,</span> <span class="token string">'YYYYMMDD'</span><span class="token punctuation">)</span>
</code></pre>
<p>全表扫描如下：<br><br><img src="/static/39.png" alt=""></p>
<h3 id="三、索引扫描"><a href="#三、索引扫描" class="headerlink" title="三、索引扫描"></a>三、索引扫描</h3><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token operator">*</span>
  <span class="token keyword">FROM</span> <span class="token keyword">TABLE</span> T
 <span class="token keyword">WHERE</span> T<span class="token punctuation">.</span>DATE_TIME <span class="token operator">>=</span> TO_DATE<span class="token punctuation">(</span><span class="token string">'20170101'</span><span class="token punctuation">,</span> <span class="token string">'YYYYMMDD'</span><span class="token punctuation">)</span>
   <span class="token operator">AND</span> T<span class="token punctuation">.</span>DATE_TIME <span class="token operator">&lt;=</span> TO_DATE<span class="token punctuation">(</span><span class="token string">'20170301'</span><span class="token punctuation">,</span> <span class="token string">'YYYYMMDD'</span><span class="token punctuation">)</span>
</code></pre>
<p>索引扫描如下：<br><br><img src="/static/40.png" alt=""></p>
<h3 id="四、Hint"><a href="#四、Hint" class="headerlink" title="四、Hint"></a>四、Hint</h3><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token comment" spellcheck="true">/*+INDEX(T INDEX_DATE_TIME)*/</span>
 <span class="token operator">*</span>
  <span class="token keyword">FROM</span> <span class="token keyword">TABLE</span> T
 <span class="token keyword">WHERE</span> T<span class="token punctuation">.</span>DATE_TIME <span class="token operator">>=</span> TO_DATE<span class="token punctuation">(</span><span class="token string">'20170101'</span><span class="token punctuation">,</span> <span class="token string">'YYYYMMDD'</span><span class="token punctuation">)</span>
   <span class="token operator">AND</span> T<span class="token punctuation">.</span>DATE_TIME <span class="token operator">&lt;=</span> TO_DATE<span class="token punctuation">(</span><span class="token string">'20170331'</span><span class="token punctuation">,</span> <span class="token string">'YYYYMMDD'</span><span class="token punctuation">)</span>
</code></pre>
<p>结果如下：<br><br><img src="/static/41.png" alt=""></p>
<h3 id="注意点"><a href="#注意点" class="headerlink" title="注意点"></a>注意点</h3><p><code>/*+INDEX(T INDEX_DATE_TIME)*/</code>中要使用表的别名（<code>T</code>），否则无效。</p>
]]></content>
      
        <categories>
            
            <category> Oracle </category>
            
        </categories>
        
        
        <tags>
            
            <tag> oracle </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[iframe子界面获取兄弟子界面元素]]></title>
      <url>/2017/06/29/iframe%E5%AD%90%E7%95%8C%E9%9D%A2%E8%8E%B7%E5%8F%96%E5%85%84%E5%BC%9F%E5%AD%90%E7%95%8C%E9%9D%A2%E5%85%83%E7%B4%A0/</url>
      <content type="html"><![CDATA[<pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">// 设置父界面input文件id</span>
<span class="token keyword">var</span> input <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span>parent<span class="token punctuation">.</span>document<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">"#"</span> <span class="token operator">+</span> input_id<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span><span class="token punctuation">(</span>input<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">$</span><span class="token punctuation">(</span>input<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span>rs<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">// 父界面不存在该元素则循环查询所有兄弟iframe</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
     parent<span class="token punctuation">.</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"iframe"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> o<span class="token punctuation">)</span><span class="token punctuation">{</span>
        input <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">contents</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">"#"</span> <span class="token operator">+</span> input_id<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>input<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">$</span><span class="token punctuation">(</span>input<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span>rs<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
     <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
]]></content>
      
        <categories>
            
            <category> 前端 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> javascript </tag>
            
            <tag> iframe </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[微信公众号迁移步骤]]></title>
      <url>/2017/06/20/%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E8%BF%81%E7%A7%BB%E6%AD%A5%E9%AA%A4/</url>
      <content type="html"><![CDATA[<h3 id="第一步-自定义菜单"><a href="#第一步-自定义菜单" class="headerlink" title="第一步 自定义菜单"></a>第一步 自定义菜单</h3><p>按要求添加菜单即可</p>
<h3 id="第二步-基本配置-服务器配置"><a href="#第二步-基本配置-服务器配置" class="headerlink" title="第二步 基本配置-服务器配置"></a>第二步 基本配置-服务器配置</h3><p><img src="/static/36.png" alt=""></p>
<h3 id="第三步-微信支付-授权目录"><a href="#第三步-微信支付-授权目录" class="headerlink" title="第三步 微信支付-授权目录"></a>第三步 微信支付-授权目录</h3><p><img src="/static/37.png" alt=""></p>
<h3 id="第四步-公众号设置-功能设置"><a href="#第四步-公众号设置-功能设置" class="headerlink" title="第四步 公众号设置-功能设置"></a>第四步 公众号设置-功能设置</h3><p><img src="/static/38.png" alt=""></p>
<h3 id="第五步-配置参数"><a href="#第五步-配置参数" class="headerlink" title="第五步 配置参数"></a>第五步 配置参数</h3><pre class=" language-ini"><code class="language-ini"># 服务器验证token
<span class="token constant">token</span><span class="token attr-value"><span class="token punctuation">=</span></span>

# 开发者ID
<span class="token constant">appid</span><span class="token attr-value"><span class="token punctuation">=</span></span>
# 开发者密码
<span class="token constant">secret</span><span class="token attr-value"><span class="token punctuation">=</span></span>
# 商户ID
<span class="token constant">mch_id</span><span class="token attr-value"><span class="token punctuation">=</span></span>
# 商户API秘钥
<span class="token constant">key</span><span class="token attr-value"><span class="token punctuation">=</span></span>

# 域名|IP地址
<span class="token constant">host</span><span class="token attr-value"><span class="token punctuation">=</span></span>
</code></pre>
<h3 id="第六步-迁移经验"><a href="#第六步-迁移经验" class="headerlink" title="第六步 迁移经验"></a>第六步 迁移经验</h3><p><strong>redirect_uri错误</strong><br></p>
<blockquote>
<p>1.<code>公众号设置-功能设置</code> 未设置安全域名<br><br>2.<code>微信支付-授权目录</code> <code>公众号设置-功能设置</code> 这两个地方的域名与获取<code>openid</code>的<code>redirect_uri</code>域名不一样</p>
</blockquote>
<p><strong>微信域名与服务器逻辑</strong><br></p>
<blockquote>
<p>1.所有请求都会往 <code>基本配置-服务器配置</code>中的<code>服务器地址</code>发送;<br><br>2.<code>微信支付-授权目录</code> <code>公众号设置-功能设置</code>这两个地方的域名可以与上面的服务器地址不匹配，但是必须要与获取<code>openid</code>的回调<code>redirect_uri</code>一样，<br>    换句话说域名就起到了验证<code>redirect_uri</code>的作用，与<code>IP</code>无关;</p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> WePay </category>
            
        </categories>
        
        
        <tags>
            
            <tag> wepay </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Windows对象名称的坑]]></title>
      <url>/2017/06/09/Windows%E5%AF%B9%E8%B1%A1%E5%90%8D%E7%A7%B0%E7%9A%84%E5%9D%91/</url>
      <content type="html"><![CDATA[<p><img src="/static/35.png" alt=""></p>
<pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        String ok <span class="token operator">=</span> <span class="token string">"D:\\pic.jpg"</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 正确路径，鼠标从右往左选到盘符前面，再用Shift+&lt;-选择盘符</span>
        String no <span class="token operator">=</span> <span class="token string">"‪D:\\pic.jpg"</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 错误路径</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">byte</span> b <span class="token operator">:</span> ok<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>b <span class="token operator">+</span> <span class="token string">","</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">byte</span> b <span class="token operator">:</span> no<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>b <span class="token operator">+</span> <span class="token string">","</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment" spellcheck="true">// 输出</span>
<span class="token number">68</span><span class="token punctuation">,</span><span class="token number">58</span><span class="token punctuation">,</span><span class="token number">92</span><span class="token punctuation">,</span><span class="token number">112</span><span class="token punctuation">,</span><span class="token number">105</span><span class="token punctuation">,</span><span class="token number">99</span><span class="token punctuation">,</span><span class="token number">46</span><span class="token punctuation">,</span><span class="token number">106</span><span class="token punctuation">,</span><span class="token number">112</span><span class="token punctuation">,</span><span class="token number">103</span><span class="token punctuation">,</span>
<span class="token operator">-</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">128</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">86</span><span class="token punctuation">,</span><span class="token number">68</span><span class="token punctuation">,</span><span class="token number">58</span><span class="token punctuation">,</span><span class="token number">92</span><span class="token punctuation">,</span><span class="token number">112</span><span class="token punctuation">,</span><span class="token number">105</span><span class="token punctuation">,</span><span class="token number">99</span><span class="token punctuation">,</span><span class="token number">46</span><span class="token punctuation">,</span><span class="token number">106</span><span class="token punctuation">,</span><span class="token number">112</span><span class="token punctuation">,</span><span class="token number">103</span><span class="token punctuation">,</span>
</code></pre>
]]></content>
      
        <categories>
            
            <category> Java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
            <tag> windows </tag>
            
            <tag> path </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Oracle误删datafile启动报错]]></title>
      <url>/2017/06/05/Oracle%E8%AF%AF%E5%88%A0datafile%E5%90%AF%E5%8A%A8%E6%8A%A5%E9%94%99/</url>
      <content type="html"><![CDATA[<h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><pre class=" language-sql"><code class="language-sql">SQL<span class="token operator">></span> <span class="token keyword">alter</span> <span class="token keyword">database</span> <span class="token keyword">open</span><span class="token punctuation">;</span>
<span class="token keyword">alter</span> <span class="token keyword">database</span> <span class="token keyword">open</span>
<span class="token operator">*</span>
第 <span class="token number">1</span> 行出现错误:
ORA<span class="token number">-01157</span>: 无法标识<span class="token operator">/</span>锁定数据文件 <span class="token number">36</span> <span class="token operator">-</span> 请参阅 DBWR 跟踪文件
ORA<span class="token number">-01110</span>: 数据文件 <span class="token number">36</span>:
<span class="token string">'E:\ORACLE\APP\ADMINISTRATOR\ORADATA\ORCL\ZHMYRP_2017.DBF'</span>
</code></pre>
<h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><pre class=" language-sql"><code class="language-sql">SQL<span class="token operator">></span> <span class="token keyword">alter</span> <span class="token keyword">database</span> datafile <span class="token string">'E:\ORACLE\APP\ADMINISTRATOR\ORADATA\ORCL\ZHMYRP_2017.DBF'</span> offline <span class="token keyword">drop</span><span class="token punctuation">;</span>
数据库已更改。
</code></pre>
<h3 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h3><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true"># 实例状态</span>
SQL<span class="token operator">></span> <span class="token keyword">select</span> <span class="token keyword">status</span> <span class="token keyword">from</span> v$instance<span class="token punctuation">;</span>
<span class="token keyword">STATUS</span>
<span class="token comment" spellcheck="true">------------</span>
MOUNTED

<span class="token comment" spellcheck="true"># open database</span>
SQL<span class="token operator">></span> <span class="token keyword">alter</span> <span class="token keyword">database</span> <span class="token keyword">open</span><span class="token punctuation">;</span>
数据库已更改。

<span class="token comment" spellcheck="true"># open后的状态</span>
SQL<span class="token operator">></span> <span class="token keyword">select</span> <span class="token keyword">status</span> <span class="token keyword">from</span> v$instance<span class="token punctuation">;</span>
<span class="token keyword">STATUS</span>
<span class="token comment" spellcheck="true">------------</span>
<span class="token keyword">OPEN</span>
</code></pre>
]]></content>
      
        <categories>
            
            <category> Oracle </category>
            
        </categories>
        
        
        <tags>
            
            <tag> oracle </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Oracle删除表空间]]></title>
      <url>/2017/06/05/Oracle%E5%88%A0%E9%99%A4%E8%A1%A8%E7%A9%BA%E9%97%B4/</url>
      <content type="html"><![CDATA[<h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><pre class=" language-sql"><code class="language-sql"><span class="token keyword">DROP</span> <span class="token keyword">TABLESPACE</span> ZHMYRP_2016  INCLUDING CONTENTS <span class="token operator">AND</span> DATAFILES <span class="token keyword">CASCADE</span> CONSTRAINTS<span class="token punctuation">;</span>
ORA<span class="token number">-14404</span>: 分区表包含不同表空间中的分区
</code></pre>
<h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true"># 查找分区对象</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> DBA_SEGMENTS T <span class="token keyword">WHERE</span> T<span class="token punctuation">.</span>TABLESPACE_NAME <span class="token operator">=</span> <span class="token string">'ZHMYRP_2016'</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true"># 删除分区表和分区索引，再执行上面sql即可删除</span>
<span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> LDSB<span class="token punctuation">.</span>TB_CRM_ZHMYRP
</code></pre>
]]></content>
      
        <categories>
            
            <category> Oracle </category>
            
        </categories>
        
        
        <tags>
            
            <tag> oracle </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[NodeClub搭建]]></title>
      <url>/2017/05/23/NodeClub%E6%90%AD%E5%BB%BA/</url>
      <content type="html"><![CDATA[<p><a href="https://github.com/cnodejs/nodeclub/" target="_blank" rel="external">Git地址</a></p>
<h3 id="安装教程"><a href="#安装教程" class="headerlink" title="安装教程"></a>安装教程</h3><pre class=" language-bash"><code class="language-bash">1. 安装 <span class="token variable"><span class="token variable">`</span>Node.js<span class="token punctuation">[</span>必须<span class="token punctuation">]</span><span class="token variable">`</span></span> <span class="token variable"><span class="token variable">`</span>MongoDB<span class="token punctuation">[</span>必须<span class="token punctuation">]</span><span class="token variable">`</span></span> <span class="token variable"><span class="token variable">`</span>Redis<span class="token punctuation">[</span>必须<span class="token punctuation">]</span><span class="token variable">`</span></span>
2. 启动 MongoDB 和 Redis
3. <span class="token variable"><span class="token variable">`</span>$ <span class="token function">make</span> <span class="token function">install</span><span class="token variable">`</span></span> 安装 Nodeclub 的依赖包
4. <span class="token variable"><span class="token variable">`</span><span class="token function">cp</span> config.default.js config.js<span class="token variable">`</span></span> 请根据需要修改配置文件
5. <span class="token variable"><span class="token variable">`</span>$ <span class="token function">make</span> <span class="token function">test</span><span class="token variable">`</span></span> 确保各项服务都正常
6. <span class="token variable"><span class="token variable">`</span>$ node app.js<span class="token variable">`</span></span>
7. visit <span class="token variable"><span class="token variable">`</span>http://localhost:3000<span class="token variable">`</span></span>
8. done<span class="token operator">!</span>
</code></pre>
<p><strong>注意不要在<code>windows</code>下<code>make install</code> 复制到<code>centos</code>上，不然<code>make build</code>出现权限问题</strong></p>
<h3 id="邮箱配置"><a href="#邮箱配置" class="headerlink" title="邮箱配置"></a>邮箱配置</h3><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># config.js</span>
    <span class="token punctuation">{</span>
        debug: <span class="token boolean">false</span> // 重点注意
    <span class="token punctuation">}</span>

// 邮箱配置
  mail_opts: <span class="token punctuation">{</span>
    host: <span class="token string">'smtp.qq.com'</span>,
    port: 465,
    secureConnection: true,
    auth: <span class="token punctuation">{</span>
      user: <span class="token string">'serical_net@qq.com'</span>,
      pass: <span class="token string">'xxx'</span> // 开启QQ邮箱SMTP时的授权码，不是QQ密码，更不是独立密码
    <span class="token punctuation">}</span>,
    ignoreTLS: <span class="token boolean">true</span>
  <span class="token punctuation">}</span>
</code></pre>
<h3 id="开机启动"><a href="#开机启动" class="headerlink" title="开机启动"></a>开机启动</h3><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 脚本</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># vim /etc/rc.local</span>
<span class="token function">export</span> PATH<span class="token operator">=</span>/usr/local/nodejs/bin
forever /root/source/nodeclub/app.js

<span class="token comment" spellcheck="true"># 增加执行权限</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ll /etc/rc.d/rc.local</span>
-rw-r--r--. 1 root root 512 5月  23 14:01 /etc/rc.d/rc.local
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># chmod +x /etc/rc.d/rc.local</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ll /etc/rc.d/rc.local</span>
-rwxr-xr-x. 1 root root 512 5月  23 14:01 /etc/rc.d/rc.local

<span class="token comment" spellcheck="true"># 错误排查</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># cat /var/log/boot.log</span>
<span class="token punctuation">[</span>FAILED<span class="token punctuation">]</span> Failed to start /etc/rc.d/rc.local Compatibility.
See <span class="token string">'systemctl status rc-local.service'</span> <span class="token keyword">for</span> details.
         Starting Terminate Plymouth Boot Screen<span class="token punctuation">..</span>.
         Starting Wait <span class="token keyword">for</span> Plymouth Boot Screen to Quit<span class="token punctuation">..</span>.

<span class="token comment" spellcheck="true"># 使用systemctl status rc-local.service</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># systemctl status rc-local.service</span>
● rc-local.service - /etc/rc.d/rc.local Compatibility
   Loaded: loaded <span class="token punctuation">(</span>/usr/lib/systemd/system/rc-local.service<span class="token punctuation">;</span> static<span class="token punctuation">;</span> vendor preset: disabled<span class="token punctuation">)</span>
   Active: failed <span class="token punctuation">(</span>Result: exit-code<span class="token punctuation">)</span> since 二 2017-05-23 14:12:06 CST<span class="token punctuation">;</span> 1min 1s ago
  Process: 1157 ExecStart<span class="token operator">=</span>/etc/rc.d/rc.local start <span class="token punctuation">(</span>code<span class="token operator">=</span>exited, status<span class="token operator">=</span>127<span class="token punctuation">)</span>

5月 23 14:12:06 localhost.localdomain systemd<span class="token punctuation">[</span>1<span class="token punctuation">]</span>: Starting /etc/rc.d/rc.local Compatibility<span class="token punctuation">..</span>.
5月 23 14:12:06 localhost.localdomain rc.local<span class="token punctuation">[</span>1157<span class="token punctuation">]</span>: /etc/rc.d/rc.local:行15: forever: 未找到命令
5月 23 14:12:06 localhost.localdomain systemd<span class="token punctuation">[</span>1<span class="token punctuation">]</span>: rc-local.service: control process exited, code<span class="token operator">=</span>exited status<span class="token operator">=</span>127
5月 23 14:12:06 localhost.localdomain systemd<span class="token punctuation">[</span>1<span class="token punctuation">]</span>: Failed to start /etc/rc.d/rc.local Compatibility.
5月 23 14:12:06 localhost.localdomain systemd<span class="token punctuation">[</span>1<span class="token punctuation">]</span>: Unit rc-local.service entered failed state.
5月 23 14:12:06 localhost.localdomain systemd<span class="token punctuation">[</span>1<span class="token punctuation">]</span>: rc-local.service failed.

<span class="token comment" spellcheck="true"># 增加forever环境变量export PATH=/usr/local/nodejs/bin，即启动成功</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># systemctl status rc-local.service</span>
● rc-local.service - /etc/rc.d/rc.local Compatibility
   Loaded: loaded <span class="token punctuation">(</span>/usr/lib/systemd/system/rc-local.service<span class="token punctuation">;</span> static<span class="token punctuation">;</span> vendor preset: disabled<span class="token punctuation">)</span>
   Active: activating <span class="token punctuation">(</span>start<span class="token punctuation">)</span> since 二 2017-05-23 14:23:36 CST<span class="token punctuation">;</span> 5min ago
  Control: 1162 <span class="token punctuation">(</span>rc.local<span class="token punctuation">)</span>
   CGroup: /system.slice/rc-local.service
           ├─1162 /bin/bash /etc/rc.d/rc.local start
           ├─1220 node /usr/local/nodejs/bin/forever /root/source/nodeclub/app.js
           └─2388 /usr/local/nodejs/bin/node /root/source/nodeclub/app.js

5月 23 14:23:36 localhost.localdomain systemd<span class="token punctuation">[</span>1<span class="token punctuation">]</span>: Starting /etc/rc.d/rc.local Compatibility<span class="token punctuation">..</span>.
5月 23 14:23:42 localhost.localdomain rc.local<span class="token punctuation">[</span>1162<span class="token punctuation">]</span>: warn:    --minUptime not set. Defaulting to: 1000ms
5月 23 14:23:42 localhost.localdomain rc.local<span class="token punctuation">[</span>1162<span class="token punctuation">]</span>: warn:    --spinSleepTime not set. Your script will <span class="token keyword">exit</span> <span class="token keyword">if</span> it does not stay up <span class="token keyword">for</span> at least 1000ms
5月 23 14:24:13 localhost.localdomain rc.local<span class="token punctuation">[</span>1162<span class="token punctuation">]</span>: log4js.fileAppender - Writing to <span class="token function">file</span> logs/cheese.log, error happened  <span class="token punctuation">{</span> <span class="token punctuation">[</span>Error: ENOENT: no such <span class="token function">file</span> or directory, open<span class="token punctuation">..</span>.heese.log<span class="token string">']
5月 23 14:24:13 localhost.localdomain rc.local[1162]: errno: -2,
5月 23 14:24:13 localhost.localdomain rc.local[1162]: code: '</span>ENOENT<span class="token string">',
5月 23 14:24:13 localhost.localdomain rc.local[1162]: syscall: '</span><span class="token function">open</span><span class="token string">',
5月 23 14:24:13 localhost.localdomain rc.local[1162]: path: '</span>logs/cheese.log' <span class="token punctuation">}</span>
Hint: Some lines were ellipsized, use -l to show <span class="token keyword">in</span> full.
</code></pre>
<h3 id="上面rc-local脚本有问题"><a href="#上面rc-local脚本有问题" class="headerlink" title="上面rc.local脚本有问题"></a>上面rc.local脚本有问题</h3><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 错误方式</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># forever ~/source/nodeclub/app.js</span>
warn:    --minUptime not set. Defaulting to: 1000ms
warn:    --spinSleepTime not set. Your script will <span class="token keyword">exit</span> <span class="token keyword">if</span> it does not stay up <span class="token keyword">for</span> at least 1000ms
log4js.fileAppender - Writing to <span class="token function">file</span> logs/cheese.log, error happened  <span class="token punctuation">{</span> <span class="token punctuation">[</span>Error: ENOENT: no such <span class="token function">file</span> or directory, <span class="token function">open</span> <span class="token string">'logs/cheese.log'</span><span class="token punctuation">]</span>
  errno: -2,
  code: <span class="token string">'ENOENT'</span>,
  syscall: <span class="token string">'open'</span>,
  path: <span class="token string">'logs/cheese.log'</span> <span class="token punctuation">}</span>
<span class="token comment" spellcheck="true"># 正确方式</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># cd /root/source/nodeclub/ &amp;&amp; forever start app.js</span>
warn:    --minUptime not set. Defaulting to: 1000ms
warn:    --spinSleepTime not set. Your script will <span class="token keyword">exit</span> <span class="token keyword">if</span> it does not stay up <span class="token keyword">for</span> at least 1000ms
info:    Forever processing file: app.js
</code></pre>
<h3 id="forever-start-上面少了start"><a href="#forever-start-上面少了start" class="headerlink" title="forever start 上面少了start"></a>forever start 上面少了start</h3><pre class=" language-bash"><code class="language-bash"><span class="token function">export</span> PATH<span class="token operator">=</span>/usr/local/nodejs/bin
<span class="token function">cd</span> /root/source/nodeclub/ <span class="token operator">&amp;&amp;</span> forever start app.js
<span class="token comment" spellcheck="true"># 两种都行</span>
forever start /root/source/nodeclub/app.js
</code></pre>
]]></content>
      
        <categories>
            
            <category> NodeClub </category>
            
        </categories>
        
        
        <tags>
            
            <tag> linux </tag>
            
            <tag> nodeclub </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[MongoDB安装]]></title>
      <url>/2017/05/22/MongoDB%E5%AE%89%E8%A3%85/</url>
      <content type="html"><![CDATA[<p><a href="https://docs.mongodb.com/master/tutorial/install-mongodb-on-red-hat/" target="_blank" rel="external">官方文档</a><br></p>
<h3 id="Configure-the-package-management-system-yum"><a href="#Configure-the-package-management-system-yum" class="headerlink" title="Configure the package management system (yum)."></a>Configure the package management system (yum).</h3><p>Create a <code>/etc/yum.repos.d/mongodb-org-3.4.repo</code> file so that you can install MongoDB directly, using <code>yum</code>.</p>
<pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>mongodb-org-3.4<span class="token punctuation">]</span>
name<span class="token operator">=</span>MongoDB Repository
baseurl<span class="token operator">=</span>https://repo.mongodb.org/yum/redhat/<span class="token variable">$releasever</span>/mongodb-org/3.4/x86_64/
gpgcheck<span class="token operator">=</span>1
enabled<span class="token operator">=</span>1
gpgkey<span class="token operator">=</span>https://www.mongodb.org/static/pgp/server-3.4.asc

<span class="token comment" spellcheck="true"># 国内</span>
<span class="token punctuation">[</span>mongodb-org<span class="token punctuation">]</span>
name<span class="token operator">=</span>MongoDB Repository
baseurl<span class="token operator">=</span>http://mirrors.aliyun.com/mongodb/yum/redhat/7Server/mongodb-org/3.4/x86_64/
gpgcheck<span class="token operator">=</span>0
enabled<span class="token operator">=</span>1
</code></pre>
<h3 id="Install-the-MongoDB-packages-and-associated-tools"><a href="#Install-the-MongoDB-packages-and-associated-tools" class="headerlink" title="Install the MongoDB packages and associated tools."></a>Install the MongoDB packages and associated tools.</h3><p>To install the latest stable version of MongoDB, issue the following command:</p>
<pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 安装</span>
<span class="token function">sudo</span> yum <span class="token function">install</span> -y mongodb-org
<span class="token comment" spellcheck="true"># 启动</span>
<span class="token function">sudo</span> <span class="token function">service</span> mongod start
<span class="token comment" spellcheck="true"># 开机自起</span>
<span class="token function">sudo</span> <span class="token function">chkconfig</span> mongod on
<span class="token comment" spellcheck="true"># 停止</span>
<span class="token function">sudo</span> <span class="token function">service</span> mongod stop
<span class="token comment" spellcheck="true"># 重启</span>
<span class="token function">sudo</span> <span class="token function">service</span> mongod restart
</code></pre>
<h3 id="Uninstall-MongoDB-Community-Edition"><a href="#Uninstall-MongoDB-Community-Edition" class="headerlink" title="Uninstall MongoDB Community Edition"></a>Uninstall MongoDB Community Edition</h3><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">service</span> mongod stop
<span class="token function">sudo</span> yum erase <span class="token variable"><span class="token variable">$(</span>rpm -qa <span class="token operator">|</span> <span class="token function">grep</span> mongodb-org<span class="token variable">)</span></span>
<span class="token function">sudo</span> <span class="token function">rm</span> -r /var/log/mongodb
<span class="token function">sudo</span> <span class="token function">rm</span> -r /var/lib/mongo
</code></pre>
]]></content>
      
        <categories>
            
            <category> MongoDB </category>
            
        </categories>
        
        
        <tags>
            
            <tag> linux </tag>
            
            <tag> mongodb </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Centos7安装ss客户端]]></title>
      <url>/2017/05/22/Centos7%E5%AE%89%E8%A3%85ss%E5%AE%A2%E6%88%B7%E7%AB%AF/</url>
      <content type="html"><![CDATA[<p><a href="https://www.linuxbabe.com/desktop-linux/how-to-install-and-use-shadowsocks-command-line-client" target="_blank" rel="external">参考文档</a></p>
<h3 id="Install-the-Command-Line-Client"><a href="#Install-the-Command-Line-Client" class="headerlink" title="Install the Command Line Client"></a>Install the Command Line Client</h3><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> yum <span class="token function">install</span> python-setuptools
<span class="token function">sudo</span> easy_install pip
<span class="token function">sudo</span> pip <span class="token function">install</span> shadowsocks
</code></pre>
<h3 id="Create-a-Configuration-File"><a href="#Create-a-Configuration-File" class="headerlink" title="Create a Configuration File"></a>Create a Configuration File</h3><p>we will create a configuration file under /etc/</p>
<pre class=" language-bash"><code class="language-bash"> <span class="token function">sudo</span> <span class="token function">vi</span> /etc/shadowsocks.json
</code></pre>
<p>Put the following text in the file. Replace <code>server-ip</code> with your actual IP and set a <code>password</code>.</p>
<pre class=" language-bash"><code class="language-bash"><span class="token punctuation">{</span>
<span class="token string">"server"</span><span class="token keyword">:</span><span class="token string">"server-ip"</span>,
<span class="token string">"server_port"</span>:8000,
<span class="token string">"local_address"</span><span class="token keyword">:</span> <span class="token string">"127.0.0.1"</span>,
<span class="token string">"local_port"</span>:1080,
<span class="token string">"password"</span><span class="token keyword">:</span><span class="token string">"your-password"</span>,
<span class="token string">"timeout"</span>:600,
<span class="token string">"method"</span><span class="token keyword">:</span><span class="token string">"aes-256-cfb"</span>
<span class="token punctuation">}</span>
</code></pre>
<p>Save and close the file. Next start the client using command line</p>
<pre class=" language-bash"><code class="language-bash">sslocal -c /etc/shadowsocks.json
</code></pre>
<h3 id="To-run-in-the-background"><a href="#To-run-in-the-background" class="headerlink" title="To run in the background"></a>To run in the background</h3><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> sslocal -c /etc/shadowsocks.json -d start
</code></pre>
<h3 id="Auto-Start-the-Client-on-System-Boot"><a href="#Auto-Start-the-Client-on-System-Boot" class="headerlink" title="Auto Start the Client on System Boot"></a>Auto Start the Client on System Boot</h3><p>Edit <code>/etc/rc.local</code> file</p>
<pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">vi</span> /etc/rc.local
`
</code></pre>
<p>Put the following line above the exit 0 line:</p>
<pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> sslocal -c /etc/shadowsocks.json -d start
</code></pre>
<p>Save and close the file. Next time you start your computer, shadowsocks client will automatically start and connect to your shadowsocks server.</p>
<h3 id="Check-if-It-Works"><a href="#Check-if-It-Works" class="headerlink" title="Check if It Works"></a>Check if It Works</h3><p>After you rebooted your computer, enter the following command in terminal:</p>
<pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> systemctl status rc-local.service
</code></pre>
<p>If your sslocal command works then you will get this ouput:</p>
<pre class=" language-bash"><code class="language-bash">● rc-local.service - /etc/rc.local Compatibility
Loaded: loaded <span class="token punctuation">(</span>/etc/systemd/system/rc-local.service<span class="token punctuation">;</span> enabled<span class="token punctuation">;</span> vendor preset: enabled<span class="token punctuation">)</span>
Active: active <span class="token punctuation">(</span>running<span class="token punctuation">)</span> since Fri 2015-11-27 03:19:25 CST<span class="token punctuation">;</span> 2min 39s ago
Process: 881 ExecStart<span class="token operator">=</span>/etc/rc.local start <span class="token punctuation">(</span>code<span class="token operator">=</span>exited, status<span class="token operator">=</span>0/SUCCESS<span class="token punctuation">)</span>
CGroup: /system.slice/rc-local.service
├─ 887 <span class="token function">watch</span> -n 60 <span class="token function">su</span> matrix -c ibam
└─1112 /usr/bin/python /usr/local/bin/sslocal -c /etc/shadowsocks<span class="token punctuation">..</span><span class="token punctuation">..</span>
</code></pre>
<p>As you can see from the last line, the sslocal command created a process whose pid is 1112 on my machine. It means shadowsocks client is running smoothly. And of course you can tell your browser to connect through your shadowsocks client to see if everything goes well.</p>
<p>If for some reason your <code>/etc/rc.local</code> script won’t run, then check the following post to find the solution.<br><a href="https://www.linuxbabe.com/linux-server/how-to-enable-etcrc-local-with-systemd" target="_blank" rel="external">How to enable /etc/rc.local with Systemd</a></p>
]]></content>
      
        <categories>
            
            <category> Linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> linux </tag>
            
            <tag> ss </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Redis安装]]></title>
      <url>/2017/05/21/Redis%E5%AE%89%E8%A3%85/</url>
      <content type="html"><![CDATA[<pre class=" language-bash"><code class="language-bash">yum <span class="token function">install</span> -y epel-release
yum <span class="token function">install</span> -y redis
systemctl <span class="token function">enable</span> redis
systemctl start redis
</code></pre>
]]></content>
      
        <categories>
            
            <category> Redis </category>
            
        </categories>
        
        
        <tags>
            
            <tag> linux </tag>
            
            <tag> redis </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[WeCenter安装]]></title>
      <url>/2017/05/20/WeCenter%E5%AE%89%E8%A3%85/</url>
      <content type="html"><![CDATA[<h3 id="准备文件"><a href="#准备文件" class="headerlink" title="准备文件"></a>准备文件</h3><p><a href="https://github.com/wecenter/wecenter/archive/3.1.9.tar.gz" target="_blank" rel="external">WeCenter</a><br><br><a href="https://www.apachefriends.org/xampp-files/5.6.30/xampp-linux-x64-5.6.30-1-installer.run" target="_blank" rel="external">xampp</a></p>
<h3 id="安装XAMPP"><a href="#安装XAMPP" class="headerlink" title="安装XAMPP"></a>安装XAMPP</h3><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 增加执行权限</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># chmod +x xampp-linux-x64-5.6.30-1-installer.run</span>
<span class="token comment" spellcheck="true"># 安装xampp，选项都输入Y回车</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ./xampp-linux-x64-5.6.30-1-installer.run</span>

<span class="token comment" spellcheck="true"># 进入xampp目录</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># cd /opt/lampp/</span>
<span class="token comment" spellcheck="true"># 查看默认状态</span>
<span class="token punctuation">[</span>root@localhost lampp<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ./xampp status</span>
Version: XAMPP <span class="token keyword">for</span> Linux 5.6.30-1
Apache is running.
MySQL is not running.
ProFTPD is not running.
<span class="token comment" spellcheck="true"># 启动 xampp start</span>
<span class="token punctuation">[</span>root@localhost lampp<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ./xampp start</span>
Starting XAMPP <span class="token keyword">for</span> Linux 5.6.30-1<span class="token punctuation">..</span>.
XAMPP: Starting Apache<span class="token punctuation">..</span>.already running.
XAMPP: Starting MySQL<span class="token punctuation">..</span>.ok.
XAMPP: Starting ProFTPD<span class="token punctuation">..</span>.ok.
<span class="token comment" spellcheck="true"># 查看状态</span>
<span class="token punctuation">[</span>root@localhost lampp<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ./xampp status</span>
Version: XAMPP <span class="token keyword">for</span> Linux 5.6.30-1
Apache is running.
MySQL is running.
ProFTPD is running.
</code></pre>
<h3 id="部署WeCenter"><a href="#部署WeCenter" class="headerlink" title="部署WeCenter"></a>部署WeCenter</h3><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 删除htdocs其他文件</span>
<span class="token punctuation">[</span>root@localhost htdocs<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># rm -rf *</span>
<span class="token comment" spellcheck="true"># 解压wecenter移到htdocs目录下</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># tar -zxf wecenter-3.1.9.tar.gz</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># mv wecenter-3.1.9 wecenter</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># cd wecenter</span>
<span class="token punctuation">[</span>root@localhost wecenter<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># mv * /opt/lampp/htdocs/</span>

<span class="token comment" spellcheck="true"># ./ ./system ./system/config 含子目录读写权限</span>
<span class="token punctuation">[</span>root@localhost lampp<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># chmod 777 htdocs/</span>
<span class="token punctuation">[</span>root@localhost htdocs<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># chmod 777 system/</span>
<span class="token punctuation">[</span>root@localhost htdocs<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># chmod 777 -R system/config</span>
</code></pre>
<h3 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h3><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 进入bin目录</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># cd /opt/lampp/bin/</span>
<span class="token comment" spellcheck="true"># 进入mysql</span>
<span class="token punctuation">[</span>root@localhost bin<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ./mysql -uroot -p</span>
Enter password:
Welcome to the MariaDB monitor.  Commands end with <span class="token punctuation">;</span> or \g.
Your MariaDB connection <span class="token function">id</span> is 3
Server version: 10.1.21-MariaDB Source distribution
Copyright <span class="token punctuation">(</span>c<span class="token punctuation">)</span> 2000, 2016, Oracle, MariaDB Corporation Ab and others.
Type <span class="token string">'help;'</span> or <span class="token string">'\h'</span> <span class="token keyword">for</span> help. Type <span class="token string">'\c'</span> to <span class="token function">clear</span> the current input statement.
MariaDB <span class="token punctuation">[</span><span class="token punctuation">(</span>none<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">></span>
<span class="token comment" spellcheck="true"># 创建数据库</span>
MariaDB <span class="token punctuation">[</span><span class="token punctuation">(</span>none<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">></span> create database wecenter<span class="token punctuation">;</span>
Query OK, 1 row affected <span class="token punctuation">(</span>0.00 sec<span class="token punctuation">)</span>
</code></pre>
<h3 id="安装WeCenter"><a href="#安装WeCenter" class="headerlink" title="安装WeCenter"></a>安装WeCenter</h3><p>访问当前主机IP，进入检测界面，一般没问题，点下一步，配置数据库信息如下图：<br><br><img src="/static/34.png" alt=""><br><br>点击<code>开始安装</code>即完成安装。</p>
<blockquote>
<p>您的程序已经安装, 要重新安装请删除 <code>system/config/install.lock.php</code><br><br>然后删除 安装文件<code>/install/index.php</code></p>
</blockquote>
<h3 id="Centos7以前开机启动"><a href="#Centos7以前开机启动" class="headerlink" title="Centos7以前开机启动"></a>Centos7以前开机启动</h3><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 老的方式在Centos7无效</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ln -s /opt/lampp/xampp /etc/init.d/xampp</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># chkconfig --add xampp</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># chkconfig xampp on</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># chkconfig --list xampp</span>
注意：该输出结果只显示 SysV 服务，并不包含原生 systemd 服务。SysV 配置数据可能被原生 systemd 配置覆盖。
      如果您想列出 systemd 服务,请执行 <span class="token string">'systemctl list-unit-files'</span>。
      欲查看对特定 target 启用的服务请执行
      <span class="token string">'systemctl list-dependencies [target]'</span>。
xampp              0:关    1:关    2:开    3:开    4:开    5:开    6:关
</code></pre>
<h3 id="Centos7开机启动"><a href="#Centos7开机启动" class="headerlink" title="Centos7开机启动"></a>Centos7开机启动</h3><p><code>/usr/lib/systemd/</code> (user)登录才能运行<br><br><code>/lib/systemd/system/</code> (system)不需要登录就能运行</p>
<pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># cd /lib/systemd/system</span>
<span class="token punctuation">[</span>root@localhost system<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># vim xampp.service</span>
</code></pre>
<pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>Unit<span class="token punctuation">]</span>
Description<span class="token operator">=</span>xampp
After<span class="token operator">=</span>network.target

<span class="token punctuation">[</span>Service<span class="token punctuation">]</span>
Type<span class="token operator">=</span>forking
ExecStart<span class="token operator">=</span>/opt/lampp/xampp start
ExecReload<span class="token operator">=</span>/opt/lampp/xampp restart
ExecStop<span class="token operator">=</span>/opt/lampp/xampp stop
PrivateTmp<span class="token operator">=</span>true

<span class="token punctuation">[</span>Install<span class="token punctuation">]</span>
WantedBy<span class="token operator">=</span>multi-user.target
</code></pre>
<pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 使用下面脚本管理</span>
<span class="token punctuation">[</span>root@localhost system<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># systemctl status xampp</span>
<span class="token punctuation">[</span>root@localhost system<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># systemctl start xampp</span>
<span class="token punctuation">[</span>root@localhost system<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># systemctl stop xampp</span>
<span class="token punctuation">[</span>root@localhost system<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># systemctl enable xampp</span>
<span class="token punctuation">[</span>root@localhost system<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># systemctl disable xampp</span>
</code></pre>
]]></content>
      
        <categories>
            
            <category> WeCenter </category>
            
        </categories>
        
        
        <tags>
            
            <tag> linux </tag>
            
            <tag> wecenter </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Gitlab安装]]></title>
      <url>/2017/05/20/Gitlab%E5%AE%89%E8%A3%85/</url>
      <content type="html"><![CDATA[<h3 id="1-Install-and-configure-the-necessary-dependencies"><a href="#1-Install-and-configure-the-necessary-dependencies" class="headerlink" title="1. Install and configure the necessary dependencies"></a>1. Install and configure the necessary dependencies</h3><p><a href="https://about.gitlab.com/downloads/#centos7" target="_blank" rel="external"> Download GitLab Community Edition (CE) | GitLab </a><br><br>If you install Postfix to send email please select ‘Internet Site’ during setup. Instead of using Postfix you can also use Sendmail or <a href="https://gitlab.com/gitlab-org/omnibus-gitlab/blob/master/doc/settings/smtp.md" target="_blank" rel="external">configure a custom SMTP server</a> and <a href="https://gitlab.com/gitlab-org/omnibus-gitlab/blob/master/doc/settings/smtp.md#smtp-on-localhost" target="_blank" rel="external">configure it as an SMTP server</a>.</p>
<p>On CentOS, the commands below will also open HTTP and SSH access in the system firewall.</p>
<pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> yum <span class="token function">install</span> curl policycoreutils openssh-server openssh-clients
<span class="token function">sudo</span> systemctl <span class="token function">enable</span> sshd
<span class="token function">sudo</span> systemctl start sshd
<span class="token function">sudo</span> yum <span class="token function">install</span> postfix
<span class="token function">sudo</span> systemctl <span class="token function">enable</span> postfix
<span class="token function">sudo</span> systemctl start postfix
<span class="token function">sudo</span> firewall-cmd --permanent --add-service<span class="token operator">=</span>http
<span class="token function">sudo</span> systemctl reload firewalld
</code></pre>
<h3 id="2-Add-the-GitLab-package-server-and-install-the-package"><a href="#2-Add-the-GitLab-package-server-and-install-the-package" class="headerlink" title="2. Add the GitLab package server and install the package"></a>2. Add the GitLab package server and install the package</h3><pre class=" language-bash"><code class="language-bash">curl -sS https://packages.gitlab.com/install/repositories/gitlab/gitlab-ce/script.rpm.sh <span class="token operator">|</span> <span class="token function">sudo</span> <span class="token function">bash</span>
<span class="token function">sudo</span> yum <span class="token function">install</span> gitlab-ce
</code></pre>
<p>If you are not comfortable installing the repository through a piped script, you can find the <a href="https://packages.gitlab.com/gitlab/gitlab-ce/install" target="_blank" rel="external">entire script here</a> and <a href="https://packages.gitlab.com/gitlab/gitlab-ce" target="_blank" rel="external">select and download the package manually</a> and install using</p>
<pre class=" language-bash"><code class="language-bash">curl -LJO https://packages.gitlab.com/gitlab/gitlab-ce/packages/el/7/gitlab-ce-XXX.rpm/download
rpm -i gitlab-ce-XXX.rpm
</code></pre>
<p>手动下载<code>rpm</code>包，根据上面的地址和版本地址如下，如果下载慢可以用国外VPS下载再复制回来。<br><br><a href="https://packages.gitlab.com/gitlab/gitlab-ce/packages/el/7/gitlab-ce-9.1.4-ce.0.el7.x86_64.rpm/download" target="_blank" rel="external">https://packages.gitlab.com/gitlab/gitlab-ce/packages/el/7/gitlab-ce-9.1.4-ce.0.el7.x86_64.rpm/download</a></p>
<h3 id="3-Configure-and-start-GitLab"><a href="#3-Configure-and-start-GitLab" class="headerlink" title="3. Configure and start GitLab"></a>3. Configure and start GitLab</h3><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> gitlab-ctl reconfigure
</code></pre>
<h3 id="4-Browse-to-the-hostname-and-login"><a href="#4-Browse-to-the-hostname-and-login" class="headerlink" title="4. Browse to the hostname and login"></a>4. Browse to the hostname and login</h3><p>On your first visit, you’ll be redirected to a password reset screen to provide the password for the initial administrator account. Enter your desired password and you’ll be redirected back to the login screen.<br>The default account’s username is <code>root</code>. Provide the password you created earlier and login. After login you can change the username if you wish.</p>
<p> For configuration and troubleshooting options please see the <a href="http://doc.gitlab.com/omnibus/" target="_blank" rel="external">Omnibus GitLab documentation</a><br><br> If you are located in China, try using <a href="https://mirror.tuna.tsinghua.edu.cn/help/gitlab-ce/" target="_blank" rel="external">https://mirror.tuna.tsinghua.edu.cn/help/gitlab-ce/</a></p>
<h3 id="5-Gitlab-uninstall"><a href="#5-Gitlab-uninstall" class="headerlink" title="5. Gitlab uninstall"></a>5. Gitlab uninstall</h3><pre class=" language-bash"><code class="language-bash"> <span class="token comment" spellcheck="true"># 删除gitlab</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># gitlab-ctl uninstall</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># rpm -e gitlab-ce</span>

<span class="token comment" spellcheck="true"># 重装需要删除如下目录</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># find / -name gitlab</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># find / -name gitlab|xargs rm -rf</span>

<span class="token comment" spellcheck="true"># ruby_block[supervise_redis_sleep] action run卡住</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># systemctl restart gitlab-runsvdir</span>
<span class="token comment" spellcheck="true"># 再次执行</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># gitlab-ctl reconfigure</span>
</code></pre>
]]></content>
      
        <categories>
            
            <category> Git </category>
            
        </categories>
        
        
        <tags>
            
            <tag> git </tag>
            
            <tag> gitlab </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Linux常用命令]]></title>
      <url>/2017/05/20/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
      <content type="html"><![CDATA[<h3 id="修改IP"><a href="#修改IP" class="headerlink" title="修改IP"></a>修改IP</h3><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># vim /etc/sysconfig/network-scripts/ifcfg-eno16777736</span>
TYPE<span class="token operator">=</span>Ethernet
IPADDR<span class="token operator">=</span>192.168.1.67
NETMASK<span class="token operator">=</span>255.255.255.0
GATEWAY<span class="token operator">=</span>192.168.1.1
DNS1<span class="token operator">=</span>8.8.8.8
</code></pre>
<h3 id="查找directory"><a href="#查找directory" class="headerlink" title="查找directory"></a>查找directory</h3><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># find / -type d -name gitlab</span>
/etc/gitlab
/var/log/gitlab
/var/opt/gitlab

<span class="token comment" spellcheck="true"># 同上面一样</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># find / -name gitlab</span>
/etc/gitlab
/var/log/gitlab
/var/opt/gitlab

<span class="token comment" spellcheck="true"># 查找文件</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># find / -name *gitlab*</span>
/root/gitlab-ce-9.1.4-ce.0.el7.x86_64.rpm

<span class="token comment" spellcheck="true"># 删除find结果</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># find / -name gitlab|xargs rm -rf</span>
</code></pre>
<h3 id="软连接和硬连接"><a href="#软连接和硬连接" class="headerlink" title="软连接和硬连接"></a>软连接和硬连接</h3><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@localhost test<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># touch a &amp;&amp; echo this is a txt file > a</span>
<span class="token punctuation">[</span>root@localhost test<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># cat a</span>
this is a txt <span class="token function">file</span>
<span class="token comment" spellcheck="true"># 创建硬链接</span>
<span class="token punctuation">[</span>root@localhost test<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ln a b</span>
<span class="token comment" spellcheck="true"># 创建软连接</span>
<span class="token punctuation">[</span>root@localhost test<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ln -s a c</span>

<span class="token comment" spellcheck="true"># 查看</span>
<span class="token punctuation">[</span>root@localhost test<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ll -li</span>
总用量 8
607569 -rw-r--r--. 2 root root 19 5月  20 11:46 a
607569 -rw-r--r--. 2 root root 19 5月  20 11:46 b
607570 lrwxrwxrwx. 1 root root  1 5月  20 11:46 c -<span class="token operator">></span> a

<span class="token comment" spellcheck="true"># vim b c都能对a修改，主要区别在于删除上</span>
<span class="token punctuation">[</span>root@localhost test<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># rm -f a</span>
<span class="token punctuation">[</span>root@localhost test<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ls -li</span>
总用量 4
607569 -rw-r--r--. 1 root root 19 5月  20 11:46 b
607570 lrwxrwxrwx. 1 root root  1 5月  20 11:46 c -<span class="token operator">></span> a
<span class="token punctuation">[</span>root@localhost test<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># cat a</span>
cat: a: 没有那个文件或目录
<span class="token punctuation">[</span>root@localhost test<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># cat b</span>
this is a txt <span class="token function">file</span>
<span class="token punctuation">[</span>root@localhost test<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># cat c</span>
cat: c: 没有那个文件或目录

<span class="token comment" spellcheck="true"># 再去创建a或者c文件都能重新生成a文件，但是b和a已经不是硬链接的关系了</span>
<span class="token punctuation">[</span>root@localhost test<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># echo another > c</span>
<span class="token punctuation">[</span>root@localhost test<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># cat a</span>
another
<span class="token punctuation">[</span>root@localhost test<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># cat b</span>
this is a txt <span class="token function">file</span>
<span class="token punctuation">[</span>root@localhost test<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># cat c</span>
another
</code></pre>
]]></content>
      
        <categories>
            
            <category> Linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> linux </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[html两边留白]]></title>
      <url>/2017/05/19/html%E4%B8%A4%E8%BE%B9%E7%95%99%E7%99%BD/</url>
      <content type="html"><![CDATA[<h3 id="定宽-然后margin-0-auto"><a href="#定宽-然后margin-0-auto" class="headerlink" title="定宽 然后margin:0 auto;"></a>定宽 然后<code>margin:0 auto;</code></h3><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.container</span></span><span class="token punctuation">{</span>
    <span class="token property">max-width</span><span class="token punctuation">:</span> <span class="token number">1000</span>px<span class="token punctuation">;</span>
    <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span> auto<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
]]></content>
      
        <categories>
            
            <category> 前端 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> css </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Java循环输出每个月最后一天]]></title>
      <url>/2017/05/10/Java%E5%BE%AA%E7%8E%AF%E8%BE%93%E5%87%BA%E6%AF%8F%E4%B8%AA%E6%9C%88%E6%9C%80%E5%90%8E%E4%B8%80%E5%A4%A9/</url>
      <content type="html"><![CDATA[<pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">;</span>

<span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Calendar<span class="token punctuation">;</span>
<span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>time<span class="token punctuation">.</span>DateFormatUtils<span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment" spellcheck="true">// 循环每月最后一天</span>
        Calendar calendar <span class="token operator">=</span> Calendar<span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span><span class="token number">12</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            calendar<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>Calendar<span class="token punctuation">.</span>MONTH<span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>calendar<span class="token punctuation">.</span><span class="token function">getActualMaximum</span><span class="token punctuation">(</span>Calendar<span class="token punctuation">.</span>DAY_OF_MONTH<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            calendar<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>Calendar<span class="token punctuation">.</span>DAY_OF_MONTH<span class="token punctuation">,</span> calendar<span class="token punctuation">.</span><span class="token function">getActualMaximum</span><span class="token punctuation">(</span>Calendar<span class="token punctuation">.</span>DAY_OF_MONTH<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>DateFormatUtils<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>calendar<span class="token punctuation">,</span> <span class="token string">"yyyy-MM-dd"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment" spellcheck="true">// 这句很关键</span>
            calendar<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>Calendar<span class="token punctuation">.</span>DAY_OF_MONTH<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre>
<pre class=" language-bash"><code class="language-bash">31
2017-01-31
28
2017-02-28
31
2017-03-31
30
2017-04-30
31
2017-05-31
30
2017-06-30
31
2017-07-31
31
2017-08-31
30
2017-09-30
31
2017-10-31
30
2017-11-30
31
2017-12-31
</code></pre>
]]></content>
      
        <categories>
            
            <category> Java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
            <tag> date </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Oracle Connect生成序列]]></title>
      <url>/2017/05/10/Oracle%20Connect%E7%94%9F%E6%88%90%E5%BA%8F%E5%88%97/</url>
      <content type="html"><![CDATA[<pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span> TO_CHAR<span class="token punctuation">(</span>ADD_MONTHS<span class="token punctuation">(</span>TO_DATE<span class="token punctuation">(</span><span class="token string">'2015-12'</span><span class="token punctuation">,</span> <span class="token string">'YYYY-MM'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> LEVEL<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'YYYYMM'</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> MYDATE
  <span class="token keyword">FROM</span> DUAL
<span class="token keyword">CONNECT</span> <span class="token keyword">BY</span> LEVEL <span class="token operator">&lt;</span> <span class="token number">17</span><span class="token punctuation">;</span>
</code></pre>
<pre class=" language-bash"><code class="language-bash">MYDATE
------
201601
201602
201603
201604
201605
201606
201607
201608
201609
201610
201611
201612
201701
201702
201703
201704
16 rows selected
</code></pre>
]]></content>
      
        <categories>
            
            <category> Oracle </category>
            
        </categories>
        
        
        <tags>
            
            <tag> oracle </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Oracle EXP&IMP参数详解]]></title>
      <url>/2017/04/25/Oracle%20EXP&amp;IMP%E5%8F%82%E6%95%B0%E8%AF%A6%E8%A7%A3/</url>
      <content type="html"><![CDATA[<h3 id="Oracle-EXP-amp-IMP参数详解"><a href="#Oracle-EXP-amp-IMP参数详解" class="headerlink" title="Oracle EXP&amp;IMP参数详解"></a>Oracle EXP&amp;IMP参数详解</h3><p>exp&amp;imp是Oracle自带的导入导出命令，运用它，即使不需要那结UI工具也能轻易的完成数据导出导入工作，下面是它们的参数：</p>
<h3 id="EXP参数详解"><a href="#EXP参数详解" class="headerlink" title="EXP参数详解"></a>EXP参数详解</h3><p>使用的格式是：EXP KEYWORD=value 或 KEYWORD=(value1,value2,…,valueN)<br>其中USERID是必须的且为第一个参数</p>
<p><strong>关键字 备注</strong></p>
<ul>
<li>USERID 用户名and口令</li>
<li>FULL 导出整个文件 (N)</li>
<li>BUFFER 数据缓冲区的大小</li>
<li>OWNER 所有者用户名列表</li>
<li>FILE 输出文件 (EXPDAT.DMP)</li>
<li>TABLES 表名列表</li>
<li>COMPRESS 导入一个范围 (Y)</li>
<li>RECORDLENGTH IO 记录的长度</li>
<li>GRANTS 导出权限 (Y)</li>
<li>INCTYPE 增量导出类型</li>
<li>INDEXES 导出索引 (Y)</li>
<li>RECORD 跟踪增量导出 (Y)</li>
<li>ROWS 导出数据行 (Y)</li>
<li>PARFILE 参数文件名</li>
<li>CONSTRAINTS 导出限制 (Y)</li>
<li>CONSISTENT 交叉表一致性</li>
<li>LOG 屏幕输出的日志文件</li>
<li>STATISTICS 分析对象 (ESTIMATE)</li>
<li>DIRECT 直接路径 (N)</li>
<li>TRIGGERS 导出触发器 (Y)</li>
<li>FEEDBACK 显示每 x 行 (0) 的进度</li>
<li>FILESIZE 各转储文件的最大尺寸</li>
<li>QUERY 选定导出表子集的子句</li>
<li><strong>下列关键字仅用于可传输的表空间</strong></li>
<li>TRANSPORT_TABLESPACE 导出可传输的表空间元数据 (N)</li>
<li>TABLESPACES 将传输的表空间列表</li>
</ul>
<h3 id="IMP参数详解"><a href="#IMP参数详解" class="headerlink" title="IMP参数详解"></a>IMP参数详解</h3><p>使用的格式是：IMP KEYWORD=value 或 KEYWORD=(value1,value2,…,valueN)<br>其中USERID是必须的且为第一个参数</p>
<p><strong>关键字 备注</strong></p>
<ul>
<li>USERID 用户名and口令</li>
<li>FULL 导入整个文件(N)</li>
<li>BUFFER 数据缓冲区大小</li>
<li>FROMUSER 所有者用户名列表</li>
<li>TOUSER 用户名列表</li>
<li>FILE 输入文件 (EXPDAT.DMP)</li>
<li>SHOW 只列出文件内容(N)</li>
<li>TABLES 表名列表</li>
<li>IGNORE 忽略创建错误 (N)</li>
<li>RECORDLENGTH IO 记录的长度</li>
<li>GRANTS 导入权限 (Y)</li>
<li>INCTYPE 增量导入类型</li>
<li>INDEXES 导入索引 (Y)</li>
<li>COMMIT 提交数组插入 (N)</li>
<li>ROWS 导入数据行 (Y)</li>
<li>PARFILE 参数文件名</li>
<li>LOG 屏幕输出的日志文件</li>
<li>CONSTRAINTS 导入限制 (Y)</li>
<li>DESTROY 覆盖表空间数据文件 (N)</li>
<li>INDEXFILE 将表and索引信息写入指定的文件</li>
<li>SKIP_UNUSABLE_INDEXES 跳过不可用索引的维护 (N)</li>
<li>FEEDBACK 每 x 行显示进度 (0)</li>
<li>TOID_NOVALIDATE 跳过指定类型 ID 的验证</li>
<li>FILESIZE 每个转储文件的最大大小</li>
<li>STATISTICS 始终导入预计算的统计信息</li>
<li>RESUMABLE 在遇到有关空间的错误时挂起 (N)</li>
<li>RESUMABLE_NAME 用来标识可恢复语句的文本字符串</li>
<li>RESUMABLE_TIMEOUT RESUMABLE 的等待时间</li>
<li>COMPILE 编译过程, 程序包和函数 (Y)</li>
<li>STREAMS_CONFIGURATION 导入流的一般元数据 (Y)</li>
<li>STREAMS_INSTANTIATION 导入流实例化元数据 (N)</li>
<li><strong>下列关键字仅用于可传输的表空间</strong></li>
<li>TRANSPORT_TABLESPACE 导入可传输的表空间元数据 (N)</li>
<li>TABLESPACES 将要传输到数据库的表空间</li>
<li>DATAFILES 将要传输到数据库的数据文件</li>
<li>TTS_OWNERS 拥有可传输表空间集中数据的用户</li>
</ul>
]]></content>
      
        <categories>
            
            <category> Oracle </category>
            
        </categories>
        
        
        <tags>
            
            <tag> oracle </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Oracle DROP闪回]]></title>
      <url>/2017/04/24/Oracle%20DROP%E9%97%AA%E5%9B%9E/</url>
      <content type="html"><![CDATA[<p>Oracle的<code>Flashback Drop</code>闪回删除功能给出我们一种误DROP删除表的便捷恢复方式，实现这种功能的原理是Oracle的“回收站”（<code>RecycleBin</code>）功能。<br>注意，如果被删除的表原先是存放在<code>SYSTEM</code>系统表空间上，则不支持此功能。</p>
<h3 id="1-Flashback-Drop功能"><a href="#1-Flashback-Drop功能" class="headerlink" title="1.Flashback Drop功能"></a>1.Flashback Drop功能</h3><p>恢复被错误<code>drop</code>掉的表。当一张表被删除后，依然可以查看被drop表的内容，是通过查看回收站中的内容实现的。</p>
<h3 id="2-实现原理"><a href="#2-实现原理" class="headerlink" title="2.实现原理"></a>2.实现原理</h3><p>被删除的表将被存在一个叫<code>recyclebin</code>回收站的地方，当<code>drop</code>掉表后，实际上就是将改表改了个名字。</p>
<h3 id="3-与回收站有关的视图"><a href="#3-与回收站有关的视图" class="headerlink" title="3.与回收站有关的视图"></a>3.与回收站有关的视图</h3><pre class=" language-sql"><code class="language-sql">DBA_RECYCLEBIN
USER_RECYCLEBIN
RECYCLEBIN
</code></pre>
<h3 id="4-显示当前用户曾经被drop掉的表简短信息"><a href="#4-显示当前用户曾经被drop掉的表简短信息" class="headerlink" title="4.显示当前用户曾经被drop掉的表简短信息"></a>4.显示当前用户曾经被drop掉的表简短信息</h3><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 闪回功能是否开启由RECYCLEBIN决定，默认ON</span>
SQL<span class="token operator">></span> <span class="token keyword">SHOW</span> PARAMETER RECYCLEBIN
NAME                                 <span class="token keyword">TYPE</span>        <span class="token keyword">VALUE</span>
<span class="token comment" spellcheck="true">------------------------------------ ----------- ------------------------------</span>
recyclebin                           string      <span class="token keyword">on</span>
SQL<span class="token operator">></span> <span class="token keyword">show</span> recyclebin
ORIGINAL NAME    RECYCLEBIN NAME                OBJECT <span class="token keyword">TYPE</span>  <span class="token keyword">DROP</span> TIME
<span class="token comment" spellcheck="true">---------------- ------------------------------ ------------ -------------------</span>
AA               BIN$dR7wTMsMQmOrRuxyPMkUMQ<span class="token operator">=</span><span class="token operator">=</span>$<span class="token number">0</span> <span class="token keyword">TABLE</span>        <span class="token number">2015</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">31</span>:<span class="token number">12</span>:<span class="token number">22</span>:<span class="token number">03</span>
AA               BIN$C2SUbE0zQdyQ8kKVUIXzGw<span class="token operator">=</span><span class="token operator">=</span>$<span class="token number">0</span> <span class="token keyword">TABLE</span>        <span class="token number">2015</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">31</span>:<span class="token number">11</span>:<span class="token number">57</span>:<span class="token number">15</span>
CTEST            BIN$iTZrphk7Raec1IuAGxPHAA<span class="token operator">=</span><span class="token operator">=</span>$<span class="token number">0</span> <span class="token keyword">TABLE</span>        <span class="token number">2015</span><span class="token operator">-</span><span class="token number">08</span><span class="token operator">-</span><span class="token number">21</span>:<span class="token number">12</span>:<span class="token number">29</span>:<span class="token number">59</span>
</code></pre>
<h3 id="5-清除回收站内容的条件"><a href="#5-清除回收站内容的条件" class="headerlink" title="5.清除回收站内容的条件"></a>5.清除回收站内容的条件</h3><ul>
<li>1）表空间不足 </li>
<li>2）用户的空间配额不足 </li>
<li>3）<code>purge</code>命令 </li>
<li>4）使用<code>flashback</code>命令恢复表后，与之对应的回收站中的那条记录内容被清除。</li>
</ul>
<h3 id="6-Flashback-Drop语法"><a href="#6-Flashback-Drop语法" class="headerlink" title="6.Flashback Drop语法"></a>6.Flashback Drop语法</h3><pre class=" language-sql"><code class="language-sql">SQL<span class="token operator">></span> FLASHBACK <span class="token keyword">TABLE</span> AA <span class="token keyword">TO</span> BEFORE <span class="token keyword">DROP</span><span class="token punctuation">;</span>
SQL<span class="token operator">></span> FLASHBACK <span class="token keyword">TABLE</span> <span class="token string">"BIN$iTZrphk7Raec1IuAGxPHAA==$0"</span> <span class="token keyword">TO</span> BEFORE <span class="token keyword">DROP</span><span class="token punctuation">;</span>
</code></pre>
<p>上面两种方法都可以实现找回被删除表的功能。<br><strong>第一种方法是恢复到最后一次被删除的状态；</strong><br><strong>第二种方法则可以对回收站中具体的一个对象进行闪回，用于一张表被多次删除后的恢复场景。</strong></p>
<h3 id="7-Flashback-Drop闪回删除功能实践"><a href="#7-Flashback-Drop闪回删除功能实践" class="headerlink" title="7.Flashback Drop闪回删除功能实践"></a>7.Flashback Drop闪回删除功能实践</h3><pre class=" language-sql"><code class="language-sql"><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>创建测试表AA
SQL<span class="token operator">></span> <span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> AA <span class="token keyword">AS</span> <span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> ALL_OBJECTS<span class="token punctuation">;</span>
表已创建。
SQL<span class="token operator">></span> <span class="token keyword">SELECT</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> AA<span class="token punctuation">;</span>
  <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span>
<span class="token comment" spellcheck="true">----------</span>
     <span class="token number">72355</span>

<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span>模拟<span class="token keyword">drop</span>掉AA表
SQL<span class="token operator">></span> <span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> AA<span class="token punctuation">;</span>
表已删除。

<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">.</span>查看回收站，这里看到ft_1表已经在回收站中了
SQL<span class="token operator">></span> <span class="token keyword">SHOW</span> RECYCLEBIN<span class="token punctuation">;</span>
ORIGINAL NAME    RECYCLEBIN NAME                OBJECT <span class="token keyword">TYPE</span>  <span class="token keyword">DROP</span> TIME
<span class="token comment" spellcheck="true">---------------- ------------------------------ ------------ -------------------</span>
AA               BIN$lZpcw9AdRrafbW2nsd5r9Q<span class="token operator">=</span><span class="token operator">=</span>$<span class="token number">0</span> <span class="token keyword">TABLE</span>        <span class="token number">2015</span><span class="token operator">-</span><span class="token number">08</span><span class="token operator">-</span><span class="token number">21</span>:<span class="token number">21</span>:<span class="token number">56</span>:<span class="token number">20</span>
AA               BIN$dR7wTMsMQmOrRuxyPMkUMQ<span class="token operator">=</span><span class="token operator">=</span>$<span class="token number">0</span> <span class="token keyword">TABLE</span>        <span class="token number">2015</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">31</span>:<span class="token number">12</span>:<span class="token number">22</span>:<span class="token number">03</span>
AA               BIN$C2SUbE0zQdyQ8kKVUIXzGw<span class="token operator">=</span><span class="token operator">=</span>$<span class="token number">0</span> <span class="token keyword">TABLE</span>        <span class="token number">2015</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">31</span>:<span class="token number">11</span>:<span class="token number">57</span>:<span class="token number">15</span>
CTEST            BIN$iTZrphk7Raec1IuAGxPHAA<span class="token operator">=</span><span class="token operator">=</span>$<span class="token number">0</span> <span class="token keyword">TABLE</span>        <span class="token number">2015</span><span class="token operator">-</span><span class="token number">08</span><span class="token operator">-</span><span class="token number">21</span>:<span class="token number">12</span>:<span class="token number">29</span>:<span class="token number">59</span>

<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">.</span>演示一下查询功能
SQL<span class="token operator">></span> <span class="token keyword">SELECT</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> <span class="token string">"BIN$lZpcw9AdRrafbW2nsd5r9Q==$0"</span><span class="token punctuation">;</span>
  <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span>
<span class="token comment" spellcheck="true">----------</span>
     <span class="token number">72355</span>

<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">.</span>闪回被<span class="token keyword">drop</span>掉的表
SQL<span class="token operator">></span> FLASHBACK <span class="token keyword">TABLE</span> AA <span class="token keyword">TO</span> BEFORE <span class="token keyword">DROP</span><span class="token punctuation">;</span>
闪回完成。
SQL<span class="token operator">></span> <span class="token keyword">SELECT</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> AA<span class="token punctuation">;</span>

  <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span>
<span class="token comment" spellcheck="true">----------</span>
     <span class="token number">72355</span>

（<span class="token number">6</span>）<span class="token punctuation">.</span>存在多个表时恢复到某个具体的表，也可以使用下面的命令进行恢复。
SQL<span class="token operator">></span> <span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> AA<span class="token punctuation">;</span>
表已删除。

SQL<span class="token operator">></span> <span class="token keyword">SHOW</span> RECYCLEBIN<span class="token punctuation">;</span>
ORIGINAL NAME    RECYCLEBIN NAME                OBJECT <span class="token keyword">TYPE</span>  <span class="token keyword">DROP</span> TIME
<span class="token comment" spellcheck="true">---------------- ------------------------------ ------------ -------------------</span>

AA               BIN$P8v6E<span class="token operator">+</span>YiQgWL7bFsiKiE9A<span class="token operator">=</span><span class="token operator">=</span>$<span class="token number">0</span> <span class="token keyword">TABLE</span>        <span class="token number">2015</span><span class="token operator">-</span><span class="token number">08</span><span class="token operator">-</span><span class="token number">21</span>:<span class="token number">22</span>:<span class="token number">02</span>:<span class="token number">47</span>

AA               BIN$dR7wTMsMQmOrRuxyPMkUMQ<span class="token operator">=</span><span class="token operator">=</span>$<span class="token number">0</span> <span class="token keyword">TABLE</span>        <span class="token number">2015</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">31</span>:<span class="token number">12</span>:<span class="token number">22</span>:<span class="token number">03</span>

AA               BIN$C2SUbE0zQdyQ8kKVUIXzGw<span class="token operator">=</span><span class="token operator">=</span>$<span class="token number">0</span> <span class="token keyword">TABLE</span>        <span class="token number">2015</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">31</span>:<span class="token number">11</span>:<span class="token number">57</span>:<span class="token number">15</span>

CTEST            BIN$iTZrphk7Raec1IuAGxPHAA<span class="token operator">=</span><span class="token operator">=</span>$<span class="token number">0</span> <span class="token keyword">TABLE</span>        <span class="token number">2015</span><span class="token operator">-</span><span class="token number">08</span><span class="token operator">-</span><span class="token number">21</span>:<span class="token number">12</span>:<span class="token number">29</span>:<span class="token number">59</span>

SQL<span class="token operator">></span> FLASHBACK <span class="token keyword">TABLE</span> <span class="token string">"BIN$P8v6E+YiQgWL7bFsiKiE9A==$0"</span> <span class="token keyword">TO</span> BEFORE <span class="token keyword">DROP</span><span class="token punctuation">;</span>
闪回完成。
SQL<span class="token operator">></span> <span class="token keyword">SELECT</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> AA<span class="token punctuation">;</span>
  <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span>
<span class="token comment" spellcheck="true">----------</span>
     <span class="token number">72355</span>
OK，到这里，被删除的表便被顺利的恢复回来。
</code></pre>
<h3 id="8-清除回收站内容的方法"><a href="#8-清除回收站内容的方法" class="headerlink" title="8.清除回收站内容的方法"></a>8.清除回收站内容的方法</h3><p>如果您确定、一定以及肯定不想恢复这些表的时候，可以使用以下方法对回收站进行清理。 </p>
<pre class=" language-sql"><code class="language-sql"><span class="token number">1</span>）清除当前用户的回收站
SQL<span class="token operator">></span> <span class="token keyword">purge</span> recyclebin<span class="token punctuation">;</span>
SQL<span class="token operator">></span> <span class="token keyword">purge</span> user_recyclebin<span class="token punctuation">;</span>

<span class="token number">2</span>）清除指定表空间tbs_sec_d的回收站
SQL<span class="token operator">></span> <span class="token keyword">purge</span> <span class="token keyword">tablespace</span> tbs_secooler_d<span class="token punctuation">;</span>

<span class="token number">3</span>）清除指定表空间tbs_sec_d，同时指定用户sec的回收站
SQL<span class="token operator">></span> <span class="token keyword">purge</span> <span class="token keyword">tablespace</span> tbs_sec_d <span class="token keyword">user</span> sec<span class="token punctuation">;</span>

<span class="token number">4</span>）清除回收站中所有的内容（sys用户）
SQL<span class="token operator">></span> <span class="token keyword">purge</span> dba_recyclebin
</code></pre>
<h3 id="9-不产生回收站数据的同时drop表方法"><a href="#9-不产生回收站数据的同时drop表方法" class="headerlink" title="9.不产生回收站数据的同时drop表方法"></a>9.不产生回收站数据的同时drop表方法</h3><p>这种方法是彻底删除表的方法，使用前要考虑清楚。</p>
<pre class=" language-sql"><code class="language-sql">SQL<span class="token operator">></span> <span class="token keyword">drop</span> <span class="token keyword">table</span> ft_1 <span class="token keyword">purge</span><span class="token punctuation">;</span>
</code></pre>
<h3 id="10-小结"><a href="#10-小结" class="headerlink" title="10.小结"></a>10.小结</h3><p>在使用<code>Flashback Drop</code>闪回删除功能之前要充分了解此项功能的实现原理，以及使用此项功能的条件和它的限制条件。<br>闪回删除功能为我们提供了表被误<code>DROP</code>后的便捷恢复手段。</p>
]]></content>
      
        <categories>
            
            <category> Oracle </category>
            
        </categories>
        
        
        <tags>
            
            <tag> oracle </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Maven本地仓库添加jar]]></title>
      <url>/2017/04/21/Maven%E6%9C%AC%E5%9C%B0%E4%BB%93%E5%BA%93%E6%B7%BB%E5%8A%A0jar/</url>
      <content type="html"><![CDATA[<h3 id="添加"><a href="#添加" class="headerlink" title="添加"></a>添加</h3><pre class=" language-bash"><code class="language-bash">mvn install:install-file -Dfile<span class="token operator">=</span>ojdbc6.jar -DgroupId<span class="token operator">=</span>com.oracle -DartifactId<span class="token operator">=</span>ojdbc6 
-Dversion<span class="token operator">=</span>11.2.0 -Dpackaging<span class="token operator">=</span>jar -DgeneratePom<span class="token operator">=</span>true
</code></pre>
<h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><pre class=" language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.oracle<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>ojdbc6<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>11.2.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>
</code></pre>
]]></content>
      
        <categories>
            
            <category> Maven </category>
            
        </categories>
        
        
        <tags>
            
            <tag> maven </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[MySQL压缩版安装]]></title>
      <url>/2017/04/21/MySQL%E5%8E%8B%E7%BC%A9%E7%89%88%E5%AE%89%E8%A3%85/</url>
      <content type="html"><![CDATA[<h3 id="一、下载相关文件"><a href="#一、下载相关文件" class="headerlink" title="一、下载相关文件"></a>一、下载相关文件</h3><p><a href="http://cdn.mysql.com//Downloads/MySQL-5.7/mysql-5.7.16-winx64.zip" target="_blank" rel="external">MySQL压缩包</a></p>
<p><a href="http://dev.mysql.com/doc/refman/5.7/en/windows-install-archive.html" target="_blank" rel="external">压缩版安装文档</a></p>
<h3 id="二、配置环境"><a href="#二、配置环境" class="headerlink" title="二、配置环境"></a>二、配置环境</h3><ol>
<li>添加环境变量，将上面压缩包解压到<code>D:\Program Files\Mysql</code>，然后将<code>D:\Program Files\Mysql\bin</code>添加到环境变量PATH中； </li>
<li>复制解压目录下的<code>my-default.ini</code>文件，重命名为<code>my.ini</code>； </li>
<li>添加如下配置：</li>
</ol>
<pre class=" language-bash"><code class="language-bash">basedir <span class="token operator">=</span> D:/Program Files/Mysql
datadir <span class="token operator">=</span> D:/Program Files/Mysql/data
port <span class="token operator">=</span> 3306
collation_server<span class="token operator">=</span>utf8_general_ci
character_set_server<span class="token operator">=</span>utf8
</code></pre>
<h3 id="三、初始化数据库"><a href="#三、初始化数据库" class="headerlink" title="三、初始化数据库"></a>三、初始化数据库</h3><p>命令如下：</p>
<pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#mysqld --initialize --user=mysql --console</span>
D:\Program Files\Mysql\bin<span class="token operator">></span>mysqld.exe --initialize --user<span class="token operator">=</span>mysql --console
2016-11-14T01:44:54.364486Z 0 <span class="token punctuation">[</span>Warning<span class="token punctuation">]</span> TIMESTAMP with implicit DEFAULT value is deprecated. Please use --explicit_defaults_for_timestamp server option <span class="token punctuation">(</span>see documentation <span class="token keyword">for</span> <span class="token function">more</span> details<span class="token punctuation">)</span>.
2016-11-14T01:44:54.364486Z 0 <span class="token punctuation">[</span>Warning<span class="token punctuation">]</span> <span class="token string">'NO_ZERO_DATE'</span>, <span class="token string">'NO_ZERO_IN_DATE'</span> and <span class="token string">'ERROR_FOR_DIVISION_BY_ZERO'</span> sql modes should be used with strict mode. They will be merged with strict mode <span class="token keyword">in</span> a future release.
2016-11-14T01:44:54.364486Z 0 <span class="token punctuation">[</span>Warning<span class="token punctuation">]</span> <span class="token string">'NO_AUTO_CREATE_USER'</span> sql mode was not set.
2016-11-14T01:44:56.083163Z 0 <span class="token punctuation">[</span>Warning<span class="token punctuation">]</span> InnoDB: New log files created, LSN<span class="token operator">=</span>45790
2016-11-14T01:44:56.591605Z 0 <span class="token punctuation">[</span>Warning<span class="token punctuation">]</span> InnoDB: Creating foreign key constraint system tables.
2016-11-14T01:44:56.770716Z 0 <span class="token punctuation">[</span>Warning<span class="token punctuation">]</span> No existing UUID has been found, so we assume that this is the first <span class="token function">time</span> that this server has been started. Generating a new UUID: f24a83ec-aa0b-11e6-85ea-d017c2a9c3f4.
2016-11-14T01:44:56.801987Z 0 <span class="token punctuation">[</span>Warning<span class="token punctuation">]</span> Gtid table is not ready to be used. Table <span class="token string">'mysql.gtid_executed'</span> cannot be opened.
2016-11-14T01:44:56.813028Z 1 <span class="token punctuation">[</span>Note<span class="token punctuation">]</span> A temporary password is generated <span class="token keyword">for</span> root@localhost: _<span class="token punctuation">;</span>9<span class="token comment" spellcheck="true">#8N_VzmxV</span>
</code></pre>
<p><strong>在控制台消息尾部会出现随机生成的初始密码，记下来</strong></p>
<h3 id="四、添加为系统服务"><a href="#四、添加为系统服务" class="headerlink" title="四、添加为系统服务"></a>四、添加为系统服务</h3><pre class=" language-bash"><code class="language-bash">D:\Program Files\Mysql\bin<span class="token operator">></span>mysqld --install MySQL
Service successfully installed.

<span class="token comment" spellcheck="true"># 移除服务</span>
D:\Program Files\Mysql\bin<span class="token operator">></span>mysqld.exe --remove
Service successfully removed.
</code></pre>
<h3 id="五、登录并修改密码"><a href="#五、登录并修改密码" class="headerlink" title="五、登录并修改密码"></a>五、登录并修改密码</h3><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#回车执行后，输入刚才记录的随机密码</span>
mysql -u root -p 

<span class="token comment" spellcheck="true">#执行成功后，控制台显示 mysql>，则表示进入mysql，修改密码</span>
mysql<span class="token operator">></span> <span class="token keyword">set</span> password <span class="token keyword">for</span> root@localhost <span class="token operator">=</span> password<span class="token punctuation">(</span><span class="token string">'123456'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Query OK, 0 rows affected, 1 warning <span class="token punctuation">(</span>0.00 sec<span class="token punctuation">)</span>
</code></pre>
]]></content>
      
        <categories>
            
            <category> MySQL </category>
            
        </categories>
        
        
        <tags>
            
            <tag> windows </tag>
            
            <tag> mysql </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[PSFTP上传文件]]></title>
      <url>/2017/04/21/PSFTP%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6/</url>
      <content type="html"><![CDATA[<h3 id="PSFTP上传文件"><a href="#PSFTP上传文件" class="headerlink" title="PSFTP上传文件"></a>PSFTP上传文件</h3><pre class=" language-bash"><code class="language-bash">D:\Program Files\putty<span class="token operator">></span>psftp
psftp: no <span class="token function">hostname</span> specified<span class="token punctuation">;</span> use <span class="token string">"open host.name"</span> to connect
psftp<span class="token operator">></span> <span class="token function">open</span> root@192.168.8.88
Using username <span class="token string">"root"</span><span class="token keyword">.</span>
root@192.168.8.88's password:
Remote working directory is /root
psftp<span class="token operator">></span> put E:\Software\JDK\jdk-7u67-linux-x64.gz
local:E:\Software\JDK\jdk-7u67-linux-x64.gz <span class="token operator">=</span><span class="token operator">></span> remote:/root/jdk-7u67-linux-x64.g
z
psftp<span class="token operator">></span> quit
</code></pre>
<h3 id="linux解压"><a href="#linux解压" class="headerlink" title="linux解压"></a>linux解压</h3><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#-C指定解压位置</span>
<span class="token punctuation">[</span>root@serical01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># tar -zxvf jdk-7u67-linux-x64.gz -C /usr/java</span>
</code></pre>
<h3 id="安装JDK"><a href="#安装JDK" class="headerlink" title="安装JDK"></a>安装JDK</h3><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#查询centos自带的JDK</span>
<span class="token punctuation">[</span>root@serical01 bin<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># rpm -qa|grep java</span>
tzdata-java-2014g-1.el6.noarch
java-1.7.0-openjdk-1.7.0.65-2.5.1.2.el6_5.x86_64
java-1.6.0-openjdk-1.6.0.0-11.1.13.4.el6.x86_64
<span class="token comment" spellcheck="true">#卸载自带JDK</span>
<span class="token punctuation">[</span>root@serical01 bin<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># rpm -e --nodeps tzdata-java-2014g-1.el6.noarch java-1.7.0-openjdk-1.7.0.65-2.5.1.2.el6_5.x86_64 java-1.6.0-openjdk-1.6.0.0-11.1.13.4.el6.x86_64</span>
<span class="token comment" spellcheck="true">#添加环境变量</span>
<span class="token punctuation">[</span>root@serical01 jdk1.7.0_67<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># vim /etc/profile</span>
<span class="token comment" spellcheck="true">#G(文件结尾),o(换行插入),添加下面3行</span>
<span class="token function">export</span> JAVA_HOME<span class="token operator">=</span>/usr/java/jdk1.7.0_67
<span class="token function">export</span> PATH<span class="token operator">=</span><span class="token variable">$PATH</span><span class="token keyword">:</span><span class="token variable">$JAVA_HOME</span>/bin
<span class="token function">export</span> CLASSPATH<span class="token operator">=</span>.:<span class="token variable">$JAVA_HOME</span>/lib
<span class="token comment" spellcheck="true">#更新配置文件</span>
<span class="token punctuation">[</span>root@serical01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># srouce /etc/profile</span>
</code></pre>
]]></content>
      
        <categories>
            
            <category> Linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> linux </tag>
            
            <tag> psftp </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Java技能图谱]]></title>
      <url>/2017/04/21/Java%E6%8A%80%E8%83%BD%E5%9B%BE%E8%B0%B1/</url>
      <content type="html"><![CDATA[<h3 id="技能图谱"><a href="#技能图谱" class="headerlink" title="技能图谱"></a>技能图谱</h3><p><img src="/static/32.jpg" alt=""></p>
<h3 id="阶段"><a href="#阶段" class="headerlink" title="阶段"></a>阶段</h3><p><img src="/static/33.jpg" alt=""></p>
]]></content>
      
        <categories>
            
            <category> Java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Oracle更改表的表空间]]></title>
      <url>/2017/04/19/Oracle%E6%9B%B4%E6%94%B9%E8%A1%A8%E7%9A%84%E8%A1%A8%E7%A9%BA%E9%97%B4/</url>
      <content type="html"><![CDATA[<h3 id="一、当前表空间"><a href="#一、当前表空间" class="headerlink" title="一、当前表空间"></a>一、当前表空间</h3><pre class=" language-sql"><code class="language-sql">SQL<span class="token operator">></span> <span class="token keyword">select</span> t<span class="token punctuation">.</span>TABLESPACE_NAME <span class="token keyword">from</span> user_tables t <span class="token keyword">where</span> t <span class="token punctuation">.</span>TABLE_NAME <span class="token operator">=</span> <span class="token string">'AA'</span><span class="token punctuation">;</span>
TABLESPACE_NAME
<span class="token comment" spellcheck="true">------------------------------</span>
USERS
</code></pre>
<h3 id="二、更改表空间"><a href="#二、更改表空间" class="headerlink" title="二、更改表空间"></a>二、更改表空间</h3><pre class=" language-sql"><code class="language-sql">SQL<span class="token operator">></span> <span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> AA MOVE <span class="token keyword">TABLESPACE</span> PERSONAL_DATA<span class="token punctuation">;</span>
<span class="token keyword">Table</span> altered
</code></pre>
<h3 id="三、查看表空间"><a href="#三、查看表空间" class="headerlink" title="三、查看表空间"></a>三、查看表空间</h3><pre class=" language-sql"><code class="language-sql">SQL<span class="token operator">></span> <span class="token keyword">select</span> t<span class="token punctuation">.</span>TABLESPACE_NAME <span class="token keyword">from</span> user_tables t <span class="token keyword">where</span> t <span class="token punctuation">.</span>TABLE_NAME <span class="token operator">=</span> <span class="token string">'AA'</span><span class="token punctuation">;</span>
TABLESPACE_NAME
<span class="token comment" spellcheck="true">------------------------------</span>
PERSONAL_DATA
</code></pre>
]]></content>
      
        <categories>
            
            <category> Oracle </category>
            
        </categories>
        
        
        <tags>
            
            <tag> oracle </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Datagrid自适应问题]]></title>
      <url>/2017/04/19/Datagrid%E8%87%AA%E9%80%82%E5%BA%94%E9%97%AE%E9%A2%98/</url>
      <content type="html"><![CDATA[<p><code>datagrid</code>设置<code>fitColumns</code>为<code>true</code>，<code>width</code>为<code>10</code>到<code>15</code>，按百分比来分，结果没有占全屏。<br>猜测为<code>width</code>太小了，改为基长改为<code>100</code>后即可。</p>
<p>自适应高度</p>
<pre class=" language-js"><code class="language-js"><span class="token operator">&lt;</span><span class="token operator">!</span>DOCTYPE html<span class="token operator">></span>
<span class="token operator">&lt;</span>html<span class="token operator">></span>
<span class="token operator">&lt;</span>head<span class="token operator">></span>
    <span class="token operator">&lt;</span>meta charset<span class="token operator">=</span><span class="token string">"UTF-8"</span><span class="token operator">></span>
    <span class="token operator">&lt;</span>title<span class="token operator">></span>Auto Height <span class="token keyword">for</span> Layout <span class="token operator">-</span> jQuery EasyUI Demo<span class="token operator">&lt;</span><span class="token operator">/</span>title<span class="token operator">></span>
    <span class="token operator">&lt;</span>link rel<span class="token operator">=</span><span class="token string">"stylesheet"</span> type<span class="token operator">=</span><span class="token string">"text/css"</span> href<span class="token operator">=</span><span class="token string">"../../themes/default/easyui.css"</span><span class="token operator">></span>
    <span class="token operator">&lt;</span>link rel<span class="token operator">=</span><span class="token string">"stylesheet"</span> type<span class="token operator">=</span><span class="token string">"text/css"</span> href<span class="token operator">=</span><span class="token string">"../../themes/icon.css"</span><span class="token operator">></span>
    <span class="token operator">&lt;</span>link rel<span class="token operator">=</span><span class="token string">"stylesheet"</span> type<span class="token operator">=</span><span class="token string">"text/css"</span> href<span class="token operator">=</span><span class="token string">"../demo.css"</span><span class="token operator">></span>
    <span class="token operator">&lt;</span>script type<span class="token operator">=</span><span class="token string">"text/javascript"</span> src<span class="token operator">=</span><span class="token string">"../../jquery.min.js"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span>
    <span class="token operator">&lt;</span>script type<span class="token operator">=</span><span class="token string">"text/javascript"</span> src<span class="token operator">=</span><span class="token string">"../../jquery.easyui.min.js"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span>
<span class="token operator">&lt;</span><span class="token operator">/</span>head<span class="token operator">></span>
<span class="token operator">&lt;</span>body<span class="token operator">></span>
    <span class="token operator">&lt;</span>h2<span class="token operator">></span>Auto Height <span class="token keyword">for</span> Layout<span class="token operator">&lt;</span><span class="token operator">/</span>h2<span class="token operator">></span>
    <span class="token operator">&lt;</span>p<span class="token operator">></span>This example shows how to auto adjust layout height after dynamically adding items<span class="token punctuation">.</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>
    <span class="token operator">&lt;</span>div style<span class="token operator">=</span><span class="token string">"margin:20px 0;"</span><span class="token operator">></span>
        <span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"javascript:void(0)"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"easyui-linkbutton"</span> onclick<span class="token operator">=</span><span class="token string">"addItem()"</span><span class="token operator">></span>Add Item<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span>
        <span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"javascript:void(0)"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"easyui-linkbutton"</span> onclick<span class="token operator">=</span><span class="token string">"removeItem()"</span><span class="token operator">></span>Remove Item<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>
    <span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"cc"</span> style<span class="token operator">=</span><span class="token string">"width:700px;height:350px;"</span><span class="token operator">></span>
        <span class="token operator">&lt;</span>div data<span class="token operator">-</span>options<span class="token operator">=</span><span class="token string">"region:'north'"</span> style<span class="token operator">=</span><span class="token string">"height:50px"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>
        <span class="token operator">&lt;</span>div data<span class="token operator">-</span>options<span class="token operator">=</span><span class="token string">"region:'south'"</span> style<span class="token operator">=</span><span class="token string">"height:50px;"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>
        <span class="token operator">&lt;</span>div data<span class="token operator">-</span>options<span class="token operator">=</span><span class="token string">"region:'west'"</span> style<span class="token operator">=</span><span class="token string">"width:150px;"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>
        <span class="token operator">&lt;</span>div data<span class="token operator">-</span>options<span class="token operator">=</span><span class="token string">"region:'center'"</span> style<span class="token operator">=</span><span class="token string">"padding:20px"</span><span class="token operator">></span>
            <span class="token operator">&lt;</span>p<span class="token operator">></span>Panel Content<span class="token punctuation">.</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>
            <span class="token operator">&lt;</span>p<span class="token operator">></span>Panel Content<span class="token punctuation">.</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>
            <span class="token operator">&lt;</span>p<span class="token operator">></span>Panel Content<span class="token punctuation">.</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>
            <span class="token operator">&lt;</span>p<span class="token operator">></span>Panel Content<span class="token punctuation">.</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>
            <span class="token operator">&lt;</span>p<span class="token operator">></span>Panel Content<span class="token punctuation">.</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>
    <span class="token operator">&lt;</span>script type<span class="token operator">=</span><span class="token string">"text/javascript"</span><span class="token operator">></span>
        <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#cc'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">layout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">setHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">function</span> <span class="token function">addItem</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#cc'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">layout</span><span class="token punctuation">(</span><span class="token string">'panel'</span><span class="token punctuation">,</span><span class="token string">'center'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">'&lt;p>More Panel Content.&lt;/p>'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">setHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">function</span> <span class="token function">removeItem</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#cc'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">layout</span><span class="token punctuation">(</span><span class="token string">'panel'</span><span class="token punctuation">,</span><span class="token string">'center'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">'p:last'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">setHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">function</span> <span class="token function">setHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">var</span> c <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#cc'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">var</span> p <span class="token operator">=</span> c<span class="token punctuation">.</span><span class="token function">layout</span><span class="token punctuation">(</span><span class="token string">'panel'</span><span class="token punctuation">,</span><span class="token string">'center'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// get the center panel</span>
            <span class="token keyword">var</span> oldHeight <span class="token operator">=</span> p<span class="token punctuation">.</span><span class="token function">panel</span><span class="token punctuation">(</span><span class="token string">'panel'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">outerHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            p<span class="token punctuation">.</span><span class="token function">panel</span><span class="token punctuation">(</span><span class="token string">'resize'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>height<span class="token punctuation">:</span><span class="token string">'auto'</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">var</span> newHeight <span class="token operator">=</span> p<span class="token punctuation">.</span><span class="token function">panel</span><span class="token punctuation">(</span><span class="token string">'panel'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">outerHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            c<span class="token punctuation">.</span><span class="token function">layout</span><span class="token punctuation">(</span><span class="token string">'resize'</span><span class="token punctuation">,</span><span class="token punctuation">{</span>
                height<span class="token punctuation">:</span> <span class="token punctuation">(</span>c<span class="token punctuation">.</span><span class="token function">height</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> newHeight <span class="token operator">-</span> oldHeight<span class="token punctuation">)</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span>
<span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">></span>
<span class="token operator">&lt;</span><span class="token operator">/</span>html<span class="token operator">></span>
</code></pre>
]]></content>
      
        <categories>
            
            <category> 前端 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> easyui </tag>
            
            <tag> datagrid </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Accordion展开所有]]></title>
      <url>/2017/04/19/Accordion%E5%B1%95%E5%BC%80%E6%89%80%E6%9C%89/</url>
      <content type="html"><![CDATA[<h3 id="一、关键点"><a href="#一、关键点" class="headerlink" title="一、关键点"></a>一、关键点</h3><p><strong>accordion:</strong> <code>data-options=&quot;multiple:true&quot;</code><br><br><strong>div</strong>: <code>data-options=&quot;collapsed:false&quot;</code></p>
<pre class=" language-html"><code class="language-html"> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>easyui-accordion<span class="token punctuation">"</span></span> <span class="token attr-name">data-options</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>multiple:true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>%--客户信息--%</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>客户信息<span class="token punctuation">"</span></span> <span class="token attr-name">data-options</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>collapsed:false<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
</code></pre>
]]></content>
      
        <categories>
            
            <category> 前端 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> easyui </tag>
            
            <tag> accordion </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[MYSQL迁移记录]]></title>
      <url>/2017/04/19/MYSQL%E8%BF%81%E7%A7%BB%E8%AE%B0%E5%BD%95/</url>
      <content type="html"><![CDATA[<h3 id="一、原因"><a href="#一、原因" class="headerlink" title="一、原因"></a>一、原因</h3><p>由于ACE产品即将下架，配套MYSQL服务也即将关闭，导致必须要把数据库迁移到云服务器上。</p>
<h3 id="二、迁移过程"><a href="#二、迁移过程" class="headerlink" title="二、迁移过程"></a>二、迁移过程</h3><p><strong>Before You Begin</strong><br><br>Ensure that you have followed the Getting Started and Securing Your Server guides, and the Linode’s hostname is set.<br>To check your hostname run:</p>
<pre class=" language-bash"><code class="language-bash"><span class="token function">hostname</span>
<span class="token function">hostname</span> -f
</code></pre>
<p>The first command should show your short hostname, and the second should show your fully qualified domain name (FQDN).<br>Update your system:</p>
<pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> yum update
</code></pre>
<p><strong>Install MySQL</strong><br><br>MySQL must be installed from the community repository.<br>Download and add the repository, then update.</p>
<pre class=" language-bash"><code class="language-bash"><span class="token function">wget</span> http://repo.mysql.com/mysql-community-release-el7-5.noarch.rpm
<span class="token function">sudo</span> rpm -ivh mysql-community-release-el7-5.noarch.rpm
yum update
</code></pre>
<p>Install MySQL as usual and start the service. During installation, you will be asked if you want to accept the results from<br>the .rpm file’s GPG verification. If no error or mismatch occurs, enter y.</p>
<pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> yum <span class="token function">install</span> mysql-server
<span class="token function">sudo</span> systemctl start mysqld
<span class="token function">sudo</span> systemctl <span class="token function">enable</span> mysqld
</code></pre>
<p>MySQL will bind to localhost (127.0.0.1) by default. Please reference our MySQL remote access guide for information on<br>connecting to your databases using SSH.</p>
<p>Allowing unrestricted access to MySQL on a public IP not advised but you may change the address it listens on by modifying the<br>bind-address parameter in /etc/my.cnf. If you decide to bind MySQL to your public IP, you should implement firewall rules<br>that only allow connections from specific IP addresses.</p>
<p><strong>Harden MySQL Server</strong><br><br>Run the <code>mysql_secure_installation</code> script to address several security concerns in a default MySQL installation.</p>
<pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> mysql_secure_installation
</code></pre>
<p>You will be given the choice to change the MySQL root password, remove anonymous user accounts, disable root logins<br>outside of localhost, and remove test databases. It is recommended that you answer yes to these options.<br>You can read more about the script in in the MySQL Reference Manual.</p>
<p><strong>Using MySQL</strong><br><br>The standard tool for interacting with MySQL is the mysql client which installs with the mysql-server package.<br>The MySQL client is used through a terminal.</p>
<p>Root Login<br>To log in to MySQL as the root user:</p>
<pre class=" language-bash"><code class="language-bash">mysql -u root -p
</code></pre>
<p>When prompted, enter the root password you assigned when the mysql_secure_installation script was run.</p>
<p>You’ll then be presented with a welcome header and the MySQL prompt as shown below:</p>
<pre class=" language-bash"><code class="language-bash">mysql<span class="token operator">></span>
</code></pre>
<p><strong>Create a New MySQL User and Database</strong><br><br>In the example below, testdb is the name of the database, testuser is the user, and password is the user’s password.</p>
<pre class=" language-bash"><code class="language-bash">create database testdb<span class="token punctuation">;</span>
create user <span class="token string">'testuser'</span>@<span class="token string">'localhost'</span> identified by <span class="token string">'password'</span><span class="token punctuation">;</span>
grant all on testdb.* to <span class="token string">'testuser'</span> identified by <span class="token string">'password'</span><span class="token punctuation">;</span>
</code></pre>
<p>You can shorten this process by creating the user while assigning database permissions:</p>
<pre class=" language-bash"><code class="language-bash">create database testdb<span class="token punctuation">;</span>
grant all on testdb.* to <span class="token string">'testuser'</span> identified by <span class="token string">'password'</span><span class="token punctuation">;</span>
</code></pre>
<p>if you want to internet access mysql</p>
<pre class=" language-bash"><code class="language-bash">update user <span class="token keyword">set</span> host<span class="token operator">=</span><span class="token string">'%'</span> where user<span class="token operator">=</span><span class="token string">'testuser'</span><span class="token punctuation">;</span>
systemctl restart mysqld<span class="token punctuation">;</span>
</code></pre>
<h3 id="乱码"><a href="#乱码" class="headerlink" title="乱码"></a>乱码</h3><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#创建数据库时指定编码</span>
CREATE DATABASE mydb
  DEFAULT CHARACTER SET utf8
  DEFAULT COLLATE utf8_general_ci<span class="token punctuation">;</span>
<span class="token punctuation">[</span>mysqld<span class="token punctuation">]</span>
collation_server<span class="token operator">=</span>utf8_general_ci
character_set_server<span class="token operator">=</span>utf8
</code></pre>
<h3 id="mysql导出导入"><a href="#mysql导出导入" class="headerlink" title="mysql导出导入"></a>mysql导出导入</h3><pre class=" language-bash"><code class="language-bash">// 导出
mysqldump -uroot -ppasswd dbname <span class="token operator">></span> p.sql
// 导入
mysql -uroot -ppasswd dbname <span class="token operator">&lt;</span> d:/p.sql
</code></pre>
<h3 id="sublime换行"><a href="#sublime换行" class="headerlink" title="sublime换行"></a>sublime换行</h3><pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">// Preferences->Setting-User:</span>
<span class="token punctuation">{</span>
    <span class="token string">"color_scheme"</span><span class="token punctuation">:</span> <span class="token string">"Packages/User/SublimeLinter/Monokai (SL).tmTheme"</span><span class="token punctuation">,</span>
    <span class="token string">"font_size"</span><span class="token punctuation">:</span> <span class="token number">16</span><span class="token punctuation">,</span>
    <span class="token string">"ignored_packages"</span><span class="token punctuation">:</span>
    <span class="token punctuation">[</span>
        <span class="token string">"Vintage"</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token string">"word_wrap"</span><span class="token punctuation">:</span><span class="token boolean">true</span>
<span class="token punctuation">}</span>
</code></pre>
]]></content>
      
        <categories>
            
            <category> MySQL </category>
            
        </categories>
        
        
        <tags>
            
            <tag> linux </tag>
            
            <tag> mysql </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[微信支付踩过的坑]]></title>
      <url>/2017/04/10/%E5%BE%AE%E4%BF%A1%E6%94%AF%E4%BB%98%E8%B8%A9%E8%BF%87%E7%9A%84%E5%9D%91/</url>
      <content type="html"><![CDATA[<h3 id="一、确认支付父界面跳转"><a href="#一、确认支付父界面跳转" class="headerlink" title="一、确认支付父界面跳转"></a>一、确认支付父界面跳转</h3><p>这么做是为了获取用户openid，详情文档：<br><a href="https://mp.weixin.qq.com/wiki/4/9ac2e7b1f1d22e9e57260f6553822520.html" target="_blank" rel="external">网页授权获取用户基本信息 - 微信公众平台开发者文档</a></p>
<pre class=" language-js"><code class="language-js">window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>href <span class="token operator">=</span> <span class="token string">"/Wechat/pay/toPayInfo.do?money="</span><span class="token operator">+</span>money<span class="token operator">+</span><span class="token string">"&amp;type="</span><span class="token operator">+</span>type<span class="token punctuation">;</span>
</code></pre>
<h3 id="二、微信支付文档"><a href="#二、微信支付文档" class="headerlink" title="二、微信支付文档"></a>二、微信支付文档</h3><p><a href="https://mp.weixin.qq.com/wiki/11/74ad127cc054f6b80759c40f77ec03db.html" target="_blank" rel="external">微信JSSDK说明文档 - 微信公众平台开发者文档</a><br><br>主要使用：<br><br><strong>通过config接口注入权限验证配置</strong></p>
<pre class=" language-js"><code class="language-js">wx<span class="token punctuation">.</span><span class="token function">config</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    debug<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 开启调试模式,调用的所有api的返回值会在客户端alert出来，若要查看传入的参数，可以在pc端打开，参数信息会通过log打出，仅在pc端时才会打印。</span>
    appId<span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 必填，公众号的唯一标识</span>
    timestamp<span class="token punctuation">:</span> <span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 必填，生成签名的时间戳</span>
    nonceStr<span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 必填，生成签名的随机串</span>
    signature<span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">,</span><span class="token comment" spellcheck="true">// 必填，签名，见附录1</span>
    jsApiList<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token comment" spellcheck="true">// 必填，需要使用的JS接口列表，所有JS接口列表见附录2</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre>
<p><strong>发起一个微信支付请求</strong></p>
<pre class=" language-js"><code class="language-js">wx<span class="token punctuation">.</span><span class="token function">chooseWXPay</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    timestamp<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 支付签名时间戳，注意微信jssdk中的所有使用timestamp字段均为小写。但最新版的支付后台生成签名使用的timeStamp字段名需大写其中的S字符</span>
    nonceStr<span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 支付签名随机串，不长于 32 位</span>
    <span class="token keyword">package</span><span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 统一支付接口返回的prepay_id参数值，提交格式如：prepay_id=***）</span>
    signType<span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 签名方式，默认为'SHA1'，使用新版支付需传入'MD5'</span>
    paySign<span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 支付签名</span>
    success<span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment" spellcheck="true">// 支付成功后的回调函数</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre>
<ol>
<li>备注：prepay_id 通过微信支付统一下单接口拿到，paySign 采用统一的微信支付 Sign 签名生成方法，<br>注意这里 appId 也要参与签名，appId 与 config 中传入的 appId 一致，<br>即最后参与签名的参数有appId, timeStamp, nonceStr, package, signType, <code>key</code>。</li>
<li><code>最坑的就是这里，paySign签名需要key的参加</code><h3 id="key设置路径：微信商户平台-pay-weixin-qq-com-–-gt-账户设置–-gt-API安全–-gt-密钥设置"><a href="#key设置路径：微信商户平台-pay-weixin-qq-com-–-gt-账户设置–-gt-API安全–-gt-密钥设置" class="headerlink" title="key设置路径：微信商户平台(pay.weixin.qq.com)–&gt;账户设置–&gt;API安全–&gt;密钥设置"></a>key设置路径：微信商户平台(pay.weixin.qq.com)–&gt;账户设置–&gt;API安全–&gt;密钥设置</h3></li>
<li>请注意该接口只能在你配置的支付目录下调用，同时需确保支付目录在JS接口安全域名下。</li>
<li>微信支付开发文档：<a href="https://pay.weixin.qq.com/wiki/doc/api/index.html" target="_blank" rel="external">https://pay.weixin.qq.com/wiki/doc/api/index.html</a></li>
</ol>
<h3 id="三、3个签名"><a href="#三、3个签名" class="headerlink" title="三、3个签名"></a>三、3个签名</h3><p><strong>config的signature签名：</strong><br><br>签名算法：<a href="https://mp.weixin.qq.com/wiki/11/74ad127cc054f6b80759c40f77ec03db.html#.E9.99.84.E5.BD.951-JS-SDK.E4.BD.BF.E7.94.A8.E6.9D.83.E9.99.90.E7.AD.BE.E5.90.8D.E7.AE.97.E6.B3.95" target="_blank" rel="external">附录1-JS-SDK使用权限签名算法</a></p>
<pre class=" language-java"><code class="language-java">Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> String<span class="token operator">></span> signMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
signMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"jsapi_ticket"</span><span class="token punctuation">,</span> jsapi_ticket<span class="token punctuation">)</span><span class="token punctuation">;</span>
signMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"noncestr"</span><span class="token punctuation">,</span> nonceStr<span class="token punctuation">)</span><span class="token punctuation">;</span>
signMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"timestamp"</span><span class="token punctuation">,</span> timeStamp<span class="token punctuation">)</span><span class="token punctuation">;</span>
signMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"url"</span><span class="token punctuation">,</span> url<span class="token punctuation">)</span><span class="token punctuation">;</span>
String stringA <span class="token operator">=</span> SortUtils<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>signMap<span class="token punctuation">)</span><span class="token punctuation">;</span>
String signature <span class="token operator">=</span> EncryptUtils<span class="token punctuation">.</span><span class="token function">getSha1</span><span class="token punctuation">(</span>stringA<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre>
<p><strong>prepay_id的sign签名：</strong><br><br>签名算法：<a href="https://pay.weixin.qq.com/wiki/doc/api/jsapi.php?chapter=4_3" target="_blank" rel="external">【微信支付】公众号支付开发者文档</a><br></p>
<pre class=" language-java"><code class="language-java">Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> String<span class="token operator">></span> preMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
preMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"appid"</span><span class="token punctuation">,</span> appid<span class="token punctuation">)</span><span class="token punctuation">;</span>
preMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"body"</span><span class="token punctuation">,</span> body<span class="token punctuation">)</span><span class="token punctuation">;</span>
preMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"mch_id"</span><span class="token punctuation">,</span> mch_id<span class="token punctuation">)</span><span class="token punctuation">;</span>
preMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"nonce_str"</span><span class="token punctuation">,</span> nonceStr<span class="token punctuation">)</span><span class="token punctuation">;</span>
preMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"notify_url"</span><span class="token punctuation">,</span> notify_url<span class="token punctuation">)</span><span class="token punctuation">;</span>
preMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"openid"</span><span class="token punctuation">,</span> open_id<span class="token punctuation">)</span><span class="token punctuation">;</span>
preMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"out_trade_no"</span><span class="token punctuation">,</span> outTradeNo<span class="token punctuation">)</span><span class="token punctuation">;</span>
preMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"spbill_create_ip"</span><span class="token punctuation">,</span> spBillCreateIP<span class="token punctuation">)</span><span class="token punctuation">;</span>
preMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"total_fee"</span><span class="token punctuation">,</span> total <span class="token operator">+</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
preMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"trade_type"</span><span class="token punctuation">,</span> <span class="token string">"JSAPI"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
String preStringA <span class="token operator">=</span> SortUtils<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>preMap<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"&amp;key="</span> <span class="token operator">+</span> key<span class="token punctuation">;</span>
String sign <span class="token operator">=</span> EncryptUtils<span class="token punctuation">.</span><span class="token function">getMD5</span><span class="token punctuation">(</span>preStringA<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre>
<p><strong>chooseWXPay的paySign签名：</strong><br><br>签名算法同上</p>
<pre class=" language-java"><code class="language-java">Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> String<span class="token operator">></span> payMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
payMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"appId"</span><span class="token punctuation">,</span> appid<span class="token punctuation">)</span><span class="token punctuation">;</span>
payMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"nonceStr"</span><span class="token punctuation">,</span> nonceStr<span class="token punctuation">)</span><span class="token punctuation">;</span>
payMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"package"</span><span class="token punctuation">,</span> prepay_id<span class="token punctuation">)</span><span class="token punctuation">;</span>
payMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"signType"</span><span class="token punctuation">,</span> <span class="token string">"MD5"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
payMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"timeStamp"</span><span class="token punctuation">,</span> timeStamp<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">// GTMD的腾讯，文档这么写的：</span>
<span class="token comment" spellcheck="true">// 备注：prepay_id 通过微信支付统一下单接口拿到，paySign 采用统一的微信支付 Sign 签名生成方法，注意这里 appId 也要参与签名，appId 与 config 中传入的 appId 一致，</span>
<span class="token comment" spellcheck="true">// 即最后参与签名的参数有appId, timeStamp, nonceStr, package, signType。</span>
<span class="token comment" spellcheck="true">// 微信支付开发文档：https://pay.weixin.qq.com/wiki/doc/api/index.html</span>
<span class="token comment" spellcheck="true">// 没说有 + "&amp;key=" + key</span>
String payStringA <span class="token operator">=</span> SortUtils<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>payMap<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"&amp;key="</span> <span class="token operator">+</span> key<span class="token punctuation">;</span>
String paySign <span class="token operator">=</span> EncryptUtils<span class="token punctuation">.</span><span class="token function">getMD5</span><span class="token punctuation">(</span>payStringA<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre>
<h3 id="四、PayAction-java"><a href="#四、PayAction-java" class="headerlink" title="四、PayAction.java"></a>四、PayAction.java</h3><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Controller</span>
<span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/pay"</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">PayAction</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/toPayInfo"</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> ModelAndView <span class="token function">toPayInfo</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        ModelAndView view <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ModelAndView</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            String money <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getParameter</span><span class="token punctuation">(</span><span class="token string">"money"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            String type <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getParameter</span><span class="token punctuation">(</span><span class="token string">"type"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            String appid <span class="token operator">=</span> <span class="token string">"xxx"</span><span class="token punctuation">;</span>
            <span class="token comment" spellcheck="true">// 这里直接写回调地址，不能写动态地址，否则redirect_uri参数错误</span>
            String redirect_uri <span class="token operator">=</span> <span class="token string">"http://xxx.xxx/Wechat/pay/payment.jsp"</span>
                    <span class="token operator">+</span> <span class="token string">"?money="</span> <span class="token operator">+</span> money <span class="token operator">+</span> <span class="token string">"&amp;type="</span> <span class="token operator">+</span> type<span class="token punctuation">;</span>
            <span class="token comment" spellcheck="true">// 关键（传递中文参数，否则重定向到下一个请求中文参数为null）</span>
            redirect_uri <span class="token operator">=</span> URLEncoder<span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span>redirect_uri<span class="token punctuation">,</span> <span class="token string">"UTF-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            String url <span class="token operator">=</span> <span class="token string">"https://open.weixin.qq.com/connect/oauth2/authorize?appid="</span>
                    <span class="token operator">+</span> appid
                    <span class="token operator">+</span> <span class="token string">"&amp;redirect_uri="</span>
                    <span class="token operator">+</span> redirect_uri
                    <span class="token operator">+</span> <span class="token string">"&amp;response_type=code"</span>
                    <span class="token operator">+</span> <span class="token string">"&amp;scope=snsapi_base"</span>
                    <span class="token operator">+</span> <span class="token string">"&amp;state=123#wechat_redirect"</span><span class="token punctuation">;</span>

            view<span class="token punctuation">.</span><span class="token function">setViewName</span><span class="token punctuation">(</span><span class="token string">"redirect:"</span> <span class="token operator">+</span> url<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> view<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@ResponseBody</span>
    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/getPayInfo"</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> Object <span class="token function">getPayInfo</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token comment" spellcheck="true">// 初始化参数</span>
            String nonceStr <span class="token operator">=</span> StringUtil<span class="token punctuation">.</span><span class="token function">generateRandomString</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            String timeStamp <span class="token operator">=</span> DateUtils<span class="token punctuation">.</span><span class="token function">getCurrentTimestamp</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">""</span><span class="token punctuation">;</span>
            String outTradeNo <span class="token operator">=</span> <span class="token string">"NO"</span> <span class="token operator">+</span> System<span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">1000</span>
                    <span class="token operator">+</span> StringUtil<span class="token punctuation">.</span><span class="token function">generateRandomString</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            String body <span class="token operator">=</span> <span class="token string">"缴费"</span><span class="token punctuation">;</span>
            String spBillCreateIP <span class="token operator">=</span> ReqUtils<span class="token punctuation">.</span><span class="token function">getRealIp</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment" spellcheck="true">// request参数</span>
            String money <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getParameter</span><span class="token punctuation">(</span><span class="token string">"money"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            String type <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getParameter</span><span class="token punctuation">(</span><span class="token string">"type"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            String code <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getParameter</span><span class="token punctuation">(</span><span class="token string">"code"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment" spellcheck="true">// 应用参数</span>
            <span class="token keyword">int</span> total <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>Float<span class="token punctuation">.</span><span class="token function">parseFloat</span><span class="token punctuation">(</span>money<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            String appid <span class="token operator">=</span> <span class="token string">"xxx"</span><span class="token punctuation">;</span>
            String secret <span class="token operator">=</span> <span class="token string">"xxx"</span><span class="token punctuation">;</span>
            String mch_id <span class="token operator">=</span> <span class="token string">"xxx"</span><span class="token punctuation">;</span>
            String key <span class="token operator">=</span> <span class="token string">"xxx"</span><span class="token punctuation">;</span>

            <span class="token comment" spellcheck="true">// 获取openid</span>
            String open_url <span class="token operator">=</span> <span class="token string">"https://api.weixin.qq.com/sns/oauth2/access_token?appid="</span>
                    <span class="token operator">+</span> appid
                    <span class="token operator">+</span> <span class="token string">"&amp;secret="</span>
                    <span class="token operator">+</span> secret
                    <span class="token operator">+</span> <span class="token string">"&amp;code="</span>
                    <span class="token operator">+</span> code
                    <span class="token operator">+</span> <span class="token string">"&amp;grant_type=authorization_code"</span><span class="token punctuation">;</span>
            JSONObject open_json <span class="token operator">=</span> JSONObject<span class="token punctuation">.</span><span class="token function">fromObject</span><span class="token punctuation">(</span><span class="token function">execute</span><span class="token punctuation">(</span>open_url<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            String open_id <span class="token operator">=</span> open_json<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">"openid"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment" spellcheck="true">// 获取access_token</span>
            String acct_url <span class="token operator">=</span> <span class="token string">"https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&amp;appid="</span>
                    <span class="token operator">+</span> appid <span class="token operator">+</span> <span class="token string">"&amp;secret="</span> <span class="token operator">+</span> secret<span class="token punctuation">;</span>
            JSONObject json <span class="token operator">=</span> JSONObject<span class="token punctuation">.</span><span class="token function">fromObject</span><span class="token punctuation">(</span><span class="token function">execute</span><span class="token punctuation">(</span>acct_url<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            String access_token <span class="token operator">=</span> json<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">"access_token"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment" spellcheck="true">// 获取jsapi_ticket</span>
            String jsapi_url <span class="token operator">=</span> <span class="token string">"https://api.weixin.qq.com/cgi-bin/ticket/getticket?access_token="</span>
                    <span class="token operator">+</span> access_token <span class="token operator">+</span> <span class="token string">"&amp;type=jsapi"</span><span class="token punctuation">;</span>
            JSONObject jsapi_json <span class="token operator">=</span> JSONObject<span class="token punctuation">.</span><span class="token function">fromObject</span><span class="token punctuation">(</span><span class="token function">execute</span><span class="token punctuation">(</span>jsapi_url<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            String jsapi_ticket <span class="token operator">=</span> jsapi_json<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">"ticket"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment" spellcheck="true">// config签名，url需要动态，否则签名失败</span>
            String url <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getScheme</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"://"</span> <span class="token operator">+</span> request<span class="token punctuation">.</span><span class="token function">getServerName</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                    <span class="token operator">+</span> request<span class="token punctuation">.</span><span class="token function">getRequestURI</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"?money="</span> <span class="token operator">+</span> money <span class="token operator">+</span> <span class="token string">"&amp;type="</span>
                    <span class="token operator">+</span> type<span class="token punctuation">;</span>
            Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> String<span class="token operator">></span> signMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            signMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"jsapi_ticket"</span><span class="token punctuation">,</span> jsapi_ticket<span class="token punctuation">)</span><span class="token punctuation">;</span>
            signMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"noncestr"</span><span class="token punctuation">,</span> nonceStr<span class="token punctuation">)</span><span class="token punctuation">;</span>
            signMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"timestamp"</span><span class="token punctuation">,</span> timeStamp<span class="token punctuation">)</span><span class="token punctuation">;</span>
            signMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"url"</span><span class="token punctuation">,</span> url<span class="token punctuation">)</span><span class="token punctuation">;</span>
            String stringA <span class="token operator">=</span> SortUtils<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>signMap<span class="token punctuation">)</span><span class="token punctuation">;</span>
            String signature <span class="token operator">=</span> EncryptUtils<span class="token punctuation">.</span><span class="token function">getSha1</span><span class="token punctuation">(</span>stringA<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment" spellcheck="true">// 获取prepay_id</span>
            String prepay_url <span class="token operator">=</span> <span class="token string">"https://api.mch.weixin.qq.com/pay/unifiedorder"</span><span class="token punctuation">;</span>
            String notify_url <span class="token operator">=</span> <span class="token string">"http://xxx.xxx/Wechat/pay/notify.do"</span><span class="token punctuation">;</span>
            <span class="token comment" spellcheck="true">// 计算sign</span>
            Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> String<span class="token operator">></span> preMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            preMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"appid"</span><span class="token punctuation">,</span> appid<span class="token punctuation">)</span><span class="token punctuation">;</span>
            preMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"body"</span><span class="token punctuation">,</span> body<span class="token punctuation">)</span><span class="token punctuation">;</span>
            preMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"mch_id"</span><span class="token punctuation">,</span> mch_id<span class="token punctuation">)</span><span class="token punctuation">;</span>
            preMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"nonce_str"</span><span class="token punctuation">,</span> nonceStr<span class="token punctuation">)</span><span class="token punctuation">;</span>
            preMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"notify_url"</span><span class="token punctuation">,</span> notify_url<span class="token punctuation">)</span><span class="token punctuation">;</span>
            preMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"openid"</span><span class="token punctuation">,</span> open_id<span class="token punctuation">)</span><span class="token punctuation">;</span>
            preMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"out_trade_no"</span><span class="token punctuation">,</span> outTradeNo<span class="token punctuation">)</span><span class="token punctuation">;</span>
            preMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"spbill_create_ip"</span><span class="token punctuation">,</span> spBillCreateIP<span class="token punctuation">)</span><span class="token punctuation">;</span>
            preMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"total_fee"</span><span class="token punctuation">,</span> total <span class="token operator">+</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            preMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"trade_type"</span><span class="token punctuation">,</span> <span class="token string">"JSAPI"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            String preStringA <span class="token operator">=</span> SortUtils<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>preMap<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"&amp;key="</span> <span class="token operator">+</span> key<span class="token punctuation">;</span>
            <span class="token comment" spellcheck="true">// 需要转为大写</span>
            String sign <span class="token operator">=</span> EncryptUtils<span class="token punctuation">.</span><span class="token function">getMD5</span><span class="token punctuation">(</span>preStringA<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment" spellcheck="true">// 组装prepay参数</span>
            StringBuffer params <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            params<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"&lt;xml>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            params<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"&lt;appid>"</span> <span class="token operator">+</span> appid <span class="token operator">+</span> <span class="token string">"&lt;/appid>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            params<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"&lt;mch_id>"</span> <span class="token operator">+</span> mch_id <span class="token operator">+</span> <span class="token string">"&lt;/mch_id>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            params<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"&lt;body>"</span> <span class="token operator">+</span> body <span class="token operator">+</span> <span class="token string">"&lt;/body>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            params<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"&lt;nonce_str>"</span> <span class="token operator">+</span> nonceStr <span class="token operator">+</span> <span class="token string">"&lt;/nonce_str>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            params<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"&lt;sign>"</span> <span class="token operator">+</span> sign <span class="token operator">+</span> <span class="token string">"&lt;/sign>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            params<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"&lt;notify_url>"</span> <span class="token operator">+</span> notify_url <span class="token operator">+</span> <span class="token string">"&lt;/notify_url>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            params<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"&lt;out_trade_no>"</span> <span class="token operator">+</span> outTradeNo <span class="token operator">+</span> <span class="token string">"&lt;/out_trade_no>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            params<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"&lt;spbill_create_ip>"</span> <span class="token operator">+</span> spBillCreateIP
                    <span class="token operator">+</span> <span class="token string">"&lt;/spbill_create_ip>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            params<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"&lt;total_fee>"</span> <span class="token operator">+</span> total <span class="token operator">+</span> <span class="token string">"&lt;/total_fee>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            params<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"&lt;trade_type>JSAPI&lt;/trade_type>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            params<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"&lt;openid>"</span> <span class="token operator">+</span> open_id <span class="token operator">+</span> <span class="token string">"&lt;/openid>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            params<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"&lt;/xml>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment" spellcheck="true">// 请求prepay_id</span>
            String result_str <span class="token operator">=</span> <span class="token function">execute</span><span class="token punctuation">(</span>prepay_url<span class="token punctuation">,</span> params<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> String<span class="token operator">></span> result <span class="token operator">=</span> MobiMessage
                    <span class="token punctuation">.</span><span class="token function">readStringXmlOut</span><span class="token punctuation">(</span>result_str<span class="token punctuation">)</span><span class="token punctuation">;</span>
            String prepay_id <span class="token operator">=</span> <span class="token string">"prepay_id="</span> <span class="token operator">+</span> result<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"prepay_id"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>prepay_id<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment" spellcheck="true">// 计算paySign "appId nonceStr package signType timeStamp"</span>
            Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> String<span class="token operator">></span> payMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            payMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"appId"</span><span class="token punctuation">,</span> appid<span class="token punctuation">)</span><span class="token punctuation">;</span>
            payMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"nonceStr"</span><span class="token punctuation">,</span> nonceStr<span class="token punctuation">)</span><span class="token punctuation">;</span>
            payMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"package"</span><span class="token punctuation">,</span> prepay_id<span class="token punctuation">)</span><span class="token punctuation">;</span>
            payMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"signType"</span><span class="token punctuation">,</span> <span class="token string">"MD5"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            payMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"timeStamp"</span><span class="token punctuation">,</span> timeStamp<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment" spellcheck="true">// GTMD的腾讯，文档这么写的：</span>
            <span class="token comment" spellcheck="true">// 备注：prepay_id 通过微信支付统一下单接口拿到，paySign 采用统一的微信支付 Sign 签名生成方法，注意这里 appId 也要参与签名，appId 与 config 中传入的 appId 一致，</span>
            <span class="token comment" spellcheck="true">// 即最后参与签名的参数有appId, timeStamp, nonceStr, package, signType。</span>
            <span class="token comment" spellcheck="true">// 微信支付开发文档：https://pay.weixin.qq.com/wiki/doc/api/index.html</span>
            <span class="token comment" spellcheck="true">// 没说有 + "&amp;key=" + key</span>
            String payStringA <span class="token operator">=</span> SortUtils<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>payMap<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"&amp;key="</span> <span class="token operator">+</span> key<span class="token punctuation">;</span>
            <span class="token comment" spellcheck="true">// 需要转为大写</span>
            String paySign <span class="token operator">=</span> EncryptUtils<span class="token punctuation">.</span><span class="token function">getMD5</span><span class="token punctuation">(</span>payStringA<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"appId"</span><span class="token punctuation">,</span> appid<span class="token punctuation">)</span><span class="token punctuation">;</span>
            map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"timeStamp"</span><span class="token punctuation">,</span> timeStamp<span class="token punctuation">)</span><span class="token punctuation">;</span>
            map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"nonceStr"</span><span class="token punctuation">,</span> nonceStr<span class="token punctuation">)</span><span class="token punctuation">;</span>
            map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"signature"</span><span class="token punctuation">,</span> signature<span class="token punctuation">)</span><span class="token punctuation">;</span>
            map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"prepay_id"</span><span class="token punctuation">,</span> prepay_id<span class="token punctuation">)</span><span class="token punctuation">;</span>
            map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"signType"</span><span class="token punctuation">,</span> <span class="token string">"MD5"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"paySign"</span><span class="token punctuation">,</span> paySign<span class="token punctuation">)</span><span class="token punctuation">;</span>
            map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"money"</span><span class="token punctuation">,</span> money<span class="token punctuation">)</span><span class="token punctuation">;</span>
            map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"type"</span><span class="token punctuation">,</span> type<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> map<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@ResponseBody</span>
    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/notify"</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> Object <span class="token function">notify</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> map <span class="token operator">=</span> RequestParamUtil<span class="token punctuation">.</span><span class="token function">handleParamToMap</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span>
        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"notify:"</span> <span class="token operator">+</span> map<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> map<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment" spellcheck="true">// 执行HTTP请求</span>
    <span class="token keyword">public</span> String <span class="token function">execute</span><span class="token punctuation">(</span>String url<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>
        CloseableHttpClient client <span class="token operator">=</span> HttpClientBuilder<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        HttpPost httpPost <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HttpPost</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment" spellcheck="true">// 执行</span>
        HttpResponse response <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span>httpPost<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> EntityUtils<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span><span class="token function">getEntity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> String <span class="token function">execute</span><span class="token punctuation">(</span>String url<span class="token punctuation">,</span> String params<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>
        CloseableHttpClient client <span class="token operator">=</span> HttpClientBuilder<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        HttpPost httpPost <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HttpPost</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>
        httpPost<span class="token punctuation">.</span><span class="token function">setEntity</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">StringEntity</span><span class="token punctuation">(</span>params<span class="token punctuation">,</span> <span class="token string">"UTF-8"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment" spellcheck="true">// 执行</span>
        HttpResponse response <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span>httpPost<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> EntityUtils<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span><span class="token function">getEntity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"UTF-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre>
<h3 id="四、payment-jsp"><a href="#四、payment-jsp" class="headerlink" title="四、payment.jsp"></a>四、payment.jsp</h3><p>引入<code>&lt;script type=&quot;text/javascript&quot; src=&quot;http://res.wx.qq.com/open/js/jweixin-1.0.0.js&quot;&gt;&lt;/script&gt;</code></p>
<pre class=" language-js"><code class="language-js"><span class="token keyword">var</span> appId<span class="token punctuation">,</span> timestamp<span class="token punctuation">,</span> nonceStr<span class="token punctuation">,</span> prepay_id<span class="token punctuation">,</span> signType<span class="token punctuation">,</span> paySign<span class="token punctuation">;</span>
$<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    url<span class="token punctuation">:</span> <span class="token string">"/Wechat/pay/getPayInfo.do"</span><span class="token punctuation">,</span>
    data<span class="token punctuation">:</span> <span class="token punctuation">{</span>type<span class="token punctuation">:</span> <span class="token string">'&lt;%=type%>'</span><span class="token punctuation">,</span> money<span class="token punctuation">:</span> <span class="token string">'&lt;%=money%>'</span><span class="token punctuation">,</span> code<span class="token punctuation">:</span> <span class="token string">'&lt;%=code%>'</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    type<span class="token punctuation">:</span> <span class="token string">"post"</span><span class="token punctuation">,</span>
    dataType<span class="token punctuation">:</span> <span class="token string">"json"</span><span class="token punctuation">,</span>
    success<span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment" spellcheck="true">//console.info(data);</span>
        wx<span class="token punctuation">.</span><span class="token function">config</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
            debug<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 开启调试模式,调用的所有api的返回值会在客户端alert出来，若要查看传入的参数，可以在pc端打开，参数信息会通过log打出，仅在pc端时才会打印。</span>
            appId<span class="token punctuation">:</span> data<span class="token punctuation">.</span>appId<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 必填，公众号的唯一标识</span>
            timestamp<span class="token punctuation">:</span> data<span class="token punctuation">.</span>timeStamp<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 必填，生成签名的时间戳</span>
            nonceStr<span class="token punctuation">:</span> data<span class="token punctuation">.</span>nonceStr<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 必填，生成签名的随机串</span>
            signature<span class="token punctuation">:</span> data<span class="token punctuation">.</span>signature<span class="token punctuation">,</span><span class="token comment" spellcheck="true">// 必填，签名，见附录1</span>
            jsApiList<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'chooseWXPay'</span><span class="token punctuation">]</span> <span class="token comment" spellcheck="true">// 必填，需要使用的JS接口列表，所有JS接口列表见附录2</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        appId <span class="token operator">=</span> data<span class="token punctuation">.</span>appId<span class="token punctuation">;</span>
        timestamp <span class="token operator">=</span> data<span class="token punctuation">.</span>timeStamp<span class="token punctuation">;</span>
        nonceStr <span class="token operator">=</span> data<span class="token punctuation">.</span>nonceStr<span class="token punctuation">;</span>
        prepay_id <span class="token operator">=</span> data<span class="token punctuation">.</span>prepay_id<span class="token punctuation">;</span>
        signType <span class="token operator">=</span> data<span class="token punctuation">.</span>signType<span class="token punctuation">;</span>
        paySign <span class="token operator">=</span> data<span class="token punctuation">.</span>paySign<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> pay <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    wx<span class="token punctuation">.</span><span class="token function">chooseWXPay</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        timestamp<span class="token punctuation">:</span> timestamp<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 支付签名时间戳，注意微信jssdk中的所有使用timestamp字段均为小写。但最新版的支付后台生成签名使用的timeStamp字段名需大写其中的S字符</span>
        nonceStr<span class="token punctuation">:</span> nonceStr<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 支付签名随机串，不长于 32 位</span>
        <span class="token keyword">package</span><span class="token punctuation">:</span> prepay_id<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 统一支付接口返回的prepay_id参数值，提交格式如：prepay_id=***）</span>
        signType<span class="token punctuation">:</span> signType<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 签名方式，默认为'SHA1'，使用新版支付需传入'MD5'</span>
        paySign<span class="token punctuation">:</span> paySign<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 支付签名</span>
        success<span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment" spellcheck="true">// 支付成功后的回调函数</span>
            <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"success:"</span> <span class="token operator">+</span> res<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre>
<h3 id="五、SortUtils-java"><a href="#五、SortUtils-java" class="headerlink" title="五、SortUtils.java"></a>五、SortUtils.java</h3><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SortUtils</span> <span class="token punctuation">{</span>

    <span class="token comment" spellcheck="true">/**
     * key排序连接返回
     *
     * @param map
     * @return
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> String <span class="token function">sort</span><span class="token punctuation">(</span>Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> String<span class="token operator">></span> map<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        StringBuffer sb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>null <span class="token operator">!=</span> map <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>map<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            String<span class="token punctuation">[</span><span class="token punctuation">]</span> keys <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
            keys <span class="token operator">=</span> map<span class="token punctuation">.</span><span class="token function">keySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toArray</span><span class="token punctuation">(</span>keys<span class="token punctuation">)</span><span class="token punctuation">;</span>
            Arrays<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>keys<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> keys<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>keys<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">"="</span> <span class="token operator">+</span> map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>keys<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"&amp;"</span> <span class="token operator">+</span> keys<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">"="</span> <span class="token operator">+</span> map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>keys<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> sb<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> String<span class="token operator">></span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"appId"</span><span class="token punctuation">,</span> <span class="token string">"1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"nonceStr"</span><span class="token punctuation">,</span> <span class="token string">"2"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"package"</span><span class="token punctuation">,</span> <span class="token string">"3"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"signType"</span><span class="token punctuation">,</span> <span class="token string">"4"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"timeStamp"</span><span class="token punctuation">,</span> <span class="token string">"5"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token function">sort</span><span class="token punctuation">(</span>map<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre>
<h3 id="六、EncryptUtils-java"><a href="#六、EncryptUtils-java" class="headerlink" title="六、EncryptUtils.java"></a>六、EncryptUtils.java</h3><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">EncryptUtils</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> String <span class="token function">getSha1</span><span class="token punctuation">(</span>String str<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            StringBuffer sb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            MessageDigest digest <span class="token operator">=</span> MessageDigest<span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token string">"SHA1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            digest<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token string">"UTF-8"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> md <span class="token operator">=</span> digest<span class="token punctuation">.</span><span class="token function">digest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> md<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                String sha <span class="token operator">=</span> Integer<span class="token punctuation">.</span><span class="token function">toHexString</span><span class="token punctuation">(</span>md<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&amp;</span> <span class="token number">0xFF</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>sha<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"0"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>sha<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">return</span> sb<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token string">""</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> String <span class="token function">getMD5</span><span class="token punctuation">(</span>String str<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            StringBuffer sb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            MessageDigest digest <span class="token operator">=</span> MessageDigest<span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token string">"MD5"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            digest<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token string">"UTF-8"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> md <span class="token operator">=</span> digest<span class="token punctuation">.</span><span class="token function">digest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> md<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                String sha <span class="token operator">=</span> Integer<span class="token punctuation">.</span><span class="token function">toHexString</span><span class="token punctuation">(</span>md<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&amp;</span> <span class="token number">0xFF</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>sha<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"0"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>sha<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">return</span> sb<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token string">""</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre>
<h3 id="七、效果"><a href="#七、效果" class="headerlink" title="七、效果"></a>七、效果</h3><p><img src="/static/31.png" alt=""></p>
]]></content>
      
        <categories>
            
            <category> WePay </category>
            
        </categories>
        
        
        <tags>
            
            <tag> wepay </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[POI导出excel性能解决]]></title>
      <url>/2017/04/05/POI%E5%AF%BC%E5%87%BAexcel%E6%80%A7%E8%83%BD%E8%A7%A3%E5%86%B3/</url>
      <content type="html"><![CDATA[<pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">transformer</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> titleList<span class="token punctuation">,</span> String<span class="token punctuation">[</span><span class="token punctuation">]</span> fieldList<span class="token punctuation">,</span>
            String destFileName<span class="token punctuation">,</span> <span class="token keyword">int</span> sheetNum<span class="token punctuation">,</span> List<span class="token operator">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">Object</span><span class="token operator">></span> beanList<span class="token punctuation">)</span>
            <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>
        SXSSFWorkbook wb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SXSSFWorkbook</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> count <span class="token operator">=</span> beanList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">/</span> sheetNum<span class="token punctuation">;</span>
        <span class="token keyword">int</span> more <span class="token operator">=</span> beanList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">%</span> sheetNum<span class="token punctuation">;</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> count<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            Sheet sheet <span class="token operator">=</span> wb<span class="token punctuation">.</span><span class="token function">createSheet</span><span class="token punctuation">(</span><span class="token string">"第"</span> <span class="token operator">+</span> <span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"页"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment" spellcheck="true">// 表头</span>
            Row title <span class="token operator">=</span> sheet<span class="token punctuation">.</span><span class="token function">createRow</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> k <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> k <span class="token operator">&lt;</span> titleList<span class="token punctuation">.</span>length<span class="token punctuation">;</span> k<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                Cell cell <span class="token operator">=</span> title<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">;</span>
                cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>titleList<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                sheet<span class="token punctuation">.</span><span class="token function">setColumnWidth</span><span class="token punctuation">(</span>k<span class="token punctuation">,</span>
                        titleList<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length <span class="token operator">*</span> <span class="token number">2</span> <span class="token operator">*</span> <span class="token number">256</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> count<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                sheetNum <span class="token operator">=</span> more<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> sheetNum<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                Row row <span class="token operator">=</span> sheet<span class="token punctuation">.</span><span class="token function">createRow</span><span class="token punctuation">(</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> k <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> k <span class="token operator">&lt;</span> fieldList<span class="token punctuation">.</span>length<span class="token punctuation">;</span> k<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    Cell cell <span class="token operator">=</span> row<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>BeanUtils<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span>
                            beanList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i <span class="token operator">*</span> sheetNum <span class="token operator">+</span> j<span class="token punctuation">)</span><span class="token punctuation">,</span> fieldList<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        OutputStream os <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileOutputStream</span><span class="token punctuation">(</span>destFileName<span class="token punctuation">)</span><span class="token punctuation">;</span>
        wb<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>os<span class="token punctuation">)</span><span class="token punctuation">;</span>
        os<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre>
<h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="http://blog.csdn.net/fullstack/article/details/38321467" target="_blank" rel="external">大数据导出POI之SXSSFWorkbook</a><br><br><a href="http://xtadg.iteye.com/blog/1703572" target="_blank" rel="external">POI3.8解决导出大数据量excel文件时内存溢出的问题</a><br><br><a href="http://yjck.iteye.com/blog/1609232" target="_blank" rel="external">POI 实现合并单元格以及列自适应宽度</a></p>
]]></content>
      
        <categories>
            
            <category> Java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
            <tag> excel </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Textbox组件回显换行]]></title>
      <url>/2017/04/01/Textbox%E7%BB%84%E4%BB%B6%E5%9B%9E%E6%98%BE%E6%8D%A2%E8%A1%8C/</url>
      <content type="html"><![CDATA[<p>使用<code>textbox</code>组件换行保存后，修改的时候还原内容就会失去换行符，看着比较怪异</p>
<p><img src="/static/19.png" alt=""></p>
<p>保存后修改回显如下：</p>
<p><img src="/static/20.png" alt=""></p>
<h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><h3 id="方法一、添加一个隐藏的textarea，然后在js中赋值"><a href="#方法一、添加一个隐藏的textarea，然后在js中赋值" class="headerlink" title="方法一、添加一个隐藏的textarea，然后在js中赋值"></a>方法一、添加一个隐藏的textarea，然后在js中赋值</h3><pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">// 组件初始化</span>
<span class="token operator">&lt;</span>input id<span class="token operator">=</span><span class="token string">"LOG_CONTENT"</span> name<span class="token operator">=</span><span class="token string">"LOG_CONTENT"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"easyui-textbox"</span> data<span class="token operator">-</span>
options<span class="token operator">=</span><span class="token string">"required:true, multiline:true"</span> style<span class="token operator">=</span><span class="token string">"width:100%;height: 200px;"</span><span class="token operator">></span>  
<span class="token comment" spellcheck="true">// 隐藏的textarea</span>
<span class="token operator">&lt;</span>textarea style<span class="token operator">=</span><span class="token string">"display: none;"</span> id<span class="token operator">=</span><span class="token string">"LOG_CONTENT_VALUE"</span><span class="token operator">></span>$<span class="token punctuation">{</span>edit<span class="token punctuation">.</span>LOG_CONTENT <span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>textarea<span class="token operator">></span>  
<span class="token comment" spellcheck="true">//js中赋值</span>
<span class="token keyword">var</span> LOG_CONTENT_VALUE <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#LOG_CONTENT_VALUE"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#LOG_CONTENT"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">textbox</span><span class="token punctuation">(</span><span class="token string">"setValue"</span><span class="token punctuation">,</span> LOG_CONTENT_VALUE<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre>
<h3 id="方法二、直接声明为一个textarea"><a href="#方法二、直接声明为一个textarea" class="headerlink" title="方法二、直接声明为一个textarea"></a>方法二、直接声明为一个textarea</h3><pre class=" language-js"><code class="language-js"><span class="token operator">&lt;</span>textarea id<span class="token operator">=</span><span class="token string">"LOG_CONTENT"</span> name<span class="token operator">=</span><span class="token string">"LOG_CONTENT"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"easyui-textbox"</span> data<span class="token operator">-</span>
options<span class="token operator">=</span><span class="token string">"required:true, multiline:true"</span> style<span class="token operator">=</span>"width<span class="token punctuation">:</span><span class="token number">100</span><span class="token operator">%</span><span class="token punctuation">;</span>height<span class="token punctuation">:</span> 
200px<span class="token punctuation">;</span>"<span class="token operator">></span>$<span class="token punctuation">{</span>edit<span class="token punctuation">.</span>LOG_CONTENT <span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>textarea<span class="token operator">></span>
</code></pre>
]]></content>
      
        <categories>
            
            <category> 前端 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> easyui </tag>
            
            <tag> textbox </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[FreeMarker导出Word]]></title>
      <url>/2017/04/01/FreeMarker%E5%AF%BC%E5%87%BAWord/</url>
      <content type="html"><![CDATA[<h3 id="一、背景"><a href="#一、背景" class="headerlink" title="一、背景"></a>一、背景</h3><p>工作中需要导出word功能，google了一番都推荐freemarker导出word，可以事先在word中定制好模板，另存为模板xml，然后在需要动态的地方使用freemarker语言动态输出。</p>
<h3 id="二、实现"><a href="#二、实现" class="headerlink" title="二、实现"></a>二、实现</h3><p>1、编辑模板<br><br><img src="/static/9.png" alt=""></p>
<p>2、保存模板<br><br><img src="/static/10.png" alt=""></p>
<p>3、动态部分使用freemarker输出<br>这里的模板不能换行，换行后生成的word会报错，虽然也能打开，但是体验不好，复制一份在myeclipse中格式化修改需要动态生成的部分，然后在原模板中做相同的操作，由于xml比较长就不一一显示了。</p>
<p>4、FreeMarker<br><br><a href="http://www.apache.org/dyn/closer.cgi/incubator/freemarker/engine/2.3.24-incubating/binaries/apache-freemarker-2.3.24-incubating-bin.tar.gz" target="_blank" rel="external">jar下载地址</a><br><a href="http://freemarker.org/docs/index.html" target="_blank" rel="external">英文文档</a><br><a href="https://sourceforge.net/projects/freemarker/files/chinese-manual/" target="_blank" rel="external">中文文档</a><br>了解API然后就开始下手了</p>
<pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>File<span class="token punctuation">;</span>
<span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>FileOutputStream<span class="token punctuation">;</span>
<span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>IOException<span class="token punctuation">;</span>
<span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>OutputStreamWriter<span class="token punctuation">;</span>
<span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>ArrayList<span class="token punctuation">;</span>
<span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>HashMap<span class="token punctuation">;</span>
<span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span>
<span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Map<span class="token punctuation">;</span>

<span class="token keyword">import</span> freemarker<span class="token punctuation">.</span>template<span class="token punctuation">.</span>Configuration<span class="token punctuation">;</span>
<span class="token keyword">import</span> freemarker<span class="token punctuation">.</span>template<span class="token punctuation">.</span>Template<span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WordTest</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment" spellcheck="true">// 模板根目录</span>
        String path <span class="token operator">=</span> WordTest<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getResource</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">;</span>
        FileOutputStream fos <span class="token operator">=</span> null<span class="token punctuation">;</span>
        OutputStreamWriter writer <span class="token operator">=</span> null<span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token comment" spellcheck="true">// 导出doc路径</span>
            fos <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileOutputStream</span><span class="token punctuation">(</span><span class="token string">"d:"</span> <span class="token operator">+</span> File<span class="token punctuation">.</span>separator <span class="token operator">+</span> <span class="token string">"test.doc"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            writer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">OutputStreamWriter</span><span class="token punctuation">(</span>fos<span class="token punctuation">,</span> <span class="token string">"UTF-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            Configuration config <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Configuration</span><span class="token punctuation">(</span>
                    Configuration<span class="token punctuation">.</span>VERSION_2_3_24<span class="token punctuation">)</span><span class="token punctuation">;</span>
            config<span class="token punctuation">.</span><span class="token function">setDefaultEncoding</span><span class="token punctuation">(</span><span class="token string">"UTF-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            config<span class="token punctuation">.</span><span class="token function">setDirectoryForTemplateLoading</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            Template template <span class="token operator">=</span> config<span class="token punctuation">.</span><span class="token function">getTemplate</span><span class="token punctuation">(</span><span class="token string">"test.xml"</span><span class="token punctuation">,</span> <span class="token string">"UTF-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment" spellcheck="true">// 构造数据</span>
            Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            List<span class="token operator">&lt;</span>Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">>></span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span>Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">>></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">5</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> m <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                m<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"title"</span><span class="token punctuation">,</span> <span class="token string">"大标题"</span> <span class="token operator">+</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
                List<span class="token operator">&lt;</span>Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">>></span> child <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span>Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">>></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> m1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    m1<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"title"</span><span class="token punctuation">,</span> <span class="token string">"小标题"</span> <span class="token operator">+</span> j<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    m1<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"content"</span><span class="token punctuation">,</span> <span class="token string">"内容"</span> <span class="token operator">+</span> j<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    child<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>m1<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                m<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"child"</span><span class="token punctuation">,</span> child<span class="token punctuation">)</span><span class="token punctuation">;</span>
                list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"datas"</span><span class="token punctuation">,</span> list<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment" spellcheck="true">// 导出</span>
            template<span class="token punctuation">.</span><span class="token function">process</span><span class="token punctuation">(</span>map<span class="token punctuation">,</span> writer<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                writer<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre>
<p>5、结果<br><br><img src="/static/11.png" alt=""></p>
]]></content>
      
        <categories>
            
            <category> Java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
            <tag> freemarker </tag>
            
            <tag> word </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Datagrid获取当前列信息]]></title>
      <url>/2017/04/01/Easyui-Tabs-Iframe%E5%8A%A0%E8%BD%BD%E9%97%AE%E9%A2%98/</url>
      <content type="html"><![CDATA[<p>代码：</p>
<p><img src="/static/21.png" alt=""></p>
<p>问题：会多次加载页面</p>
<p><img src="/static/22.png" alt=""></p>
<p>解决方法：先设置iframe高度</p>
<p><img src="/static/23.png" alt=""></p>
<p>等页面解析完毕再去加载iframe</p>
<p><img src="/static/24.png" alt=""></p>
<p>结果：都只加载一次</p>
<p><img src="/static/25.png" alt=""></p>
]]></content>
      
        <categories>
            
            <category> 前端 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> easyui </tag>
            
            <tag> tabs </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Datebox增加清空按钮]]></title>
      <url>/2017/04/01/Datebox%E5%A2%9E%E5%8A%A0%E6%B8%85%E7%A9%BA%E6%8C%89%E9%92%AE/</url>
      <content type="html"><![CDATA[<h3 id="一、修改jquery-easyui-min-js"><a href="#一、修改jquery-easyui-min-js" class="headerlink" title="一、修改jquery.easyui.min.js"></a>一、修改<code>jquery.easyui.min.js</code></h3><p>在<code>js</code>中查询<code>currentText</code>，修改如下</p>
<pre class=" language-js"><code class="language-js">currentText <span class="token punctuation">:</span> <span class="token string">"Today"</span><span class="token punctuation">,</span>
        cleanText <span class="token punctuation">:</span> <span class="token string">"Clear"</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 英文Text</span>
        closeText <span class="token punctuation">:</span> <span class="token string">"Close"</span><span class="token punctuation">,</span>
        okText <span class="token punctuation">:</span> <span class="token string">"Ok"</span><span class="token punctuation">,</span>
        buttons <span class="token punctuation">:</span> <span class="token punctuation">[</span>
                <span class="token punctuation">{</span>
                    text <span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span>_abb<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token keyword">return</span> <span class="token function">$</span><span class="token punctuation">(</span>_abb<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">datebox</span><span class="token punctuation">(</span><span class="token string">"options"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>currentText<span class="token punctuation">;</span>
                    <span class="token punctuation">}</span><span class="token punctuation">,</span>
                    handler <span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span>_abc<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token keyword">var</span> now <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token function">$</span><span class="token punctuation">(</span>_abc<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">datebox</span><span class="token punctuation">(</span><span class="token string">"calendar"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">calendar</span><span class="token punctuation">(</span>
                                <span class="token punctuation">{</span>
                                    year <span class="token punctuation">:</span> now<span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                                    month <span class="token punctuation">:</span> now<span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span>
                                    current <span class="token punctuation">:</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>now<span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> now
                                            <span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> now<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token function">_aa9</span><span class="token punctuation">(</span>_abc<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
                    text <span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span>_abd<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token keyword">return</span> <span class="token function">$</span><span class="token punctuation">(</span>_abd<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">datebox</span><span class="token punctuation">(</span><span class="token string">"options"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>closeText<span class="token punctuation">;</span>
                    <span class="token punctuation">}</span><span class="token punctuation">,</span>
                    handler <span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span>_abe<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">closest</span><span class="token punctuation">(</span><span class="token string">"div.combo-panel"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">panel</span><span class="token punctuation">(</span><span class="token string">"close"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token comment" spellcheck="true">// 这里开始，整个对象</span>
                    text <span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span>_abf<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token keyword">return</span> <span class="token function">$</span><span class="token punctuation">(</span>_abf<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">datebox</span><span class="token punctuation">(</span><span class="token string">"options"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>cleanText<span class="token punctuation">;</span>
                    <span class="token punctuation">}</span><span class="token punctuation">,</span>
                    handler <span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span>_abg<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                         <span class="token comment" spellcheck="true">// 清空日期</span>
                        <span class="token function">$</span><span class="token punctuation">(</span>_abg<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">combo</span><span class="token punctuation">(</span><span class="token string">"setText"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">combo</span><span class="token punctuation">(</span><span class="token string">"setValue"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                         <span class="token comment" spellcheck="true">// 关闭面板</span>
                        <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">closest</span><span class="token punctuation">(</span><span class="token string">"div.combo-panel"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">panel</span><span class="token punctuation">(</span><span class="token string">"close"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span> <span class="token punctuation">]</span><span class="token punctuation">,</span>
</code></pre>
<h3 id="二、修改easyui-lang-zh-CN-js"><a href="#二、修改easyui-lang-zh-CN-js" class="headerlink" title="二、修改easyui-lang-zh_CN.js"></a>二、修改<code>easyui-lang-zh_CN.js</code></h3><p>在<code>js</code>中查询<code>currentText</code>，修改如下</p>
<pre class=" language-js"><code class="language-js"><span class="token keyword">if</span> <span class="token punctuation">(</span>$<span class="token punctuation">.</span>fn<span class="token punctuation">.</span>datebox<span class="token punctuation">)</span><span class="token punctuation">{</span>
    $<span class="token punctuation">.</span>fn<span class="token punctuation">.</span>datebox<span class="token punctuation">.</span>defaults<span class="token punctuation">.</span>currentText <span class="token operator">=</span> <span class="token string">'今天'</span><span class="token punctuation">;</span>
    $<span class="token punctuation">.</span>fn<span class="token punctuation">.</span>datebox<span class="token punctuation">.</span>defaults<span class="token punctuation">.</span>closeText <span class="token operator">=</span> <span class="token string">'关闭'</span><span class="token punctuation">;</span>
    $<span class="token punctuation">.</span>fn<span class="token punctuation">.</span>datebox<span class="token punctuation">.</span>defaults<span class="token punctuation">.</span>okText <span class="token operator">=</span> <span class="token string">'确定'</span><span class="token punctuation">;</span>
    $<span class="token punctuation">.</span>fn<span class="token punctuation">.</span>datebox<span class="token punctuation">.</span>defaults<span class="token punctuation">.</span>cleanText <span class="token operator">=</span> <span class="token string">'清空'</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 中文Text</span>
    $<span class="token punctuation">.</span>fn<span class="token punctuation">.</span>datebox<span class="token punctuation">.</span>defaults<span class="token punctuation">.</span>formatter <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>date<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">var</span> y <span class="token operator">=</span> date<span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">var</span> m <span class="token operator">=</span> date<span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">var</span> d <span class="token operator">=</span> date<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> y<span class="token operator">+</span><span class="token string">'-'</span><span class="token operator">+</span><span class="token punctuation">(</span>m<span class="token operator">&lt;</span><span class="token number">10</span><span class="token operator">?</span><span class="token punctuation">(</span><span class="token string">'0'</span><span class="token operator">+</span>m<span class="token punctuation">)</span><span class="token punctuation">:</span>m<span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">'-'</span><span class="token operator">+</span><span class="token punctuation">(</span>d<span class="token operator">&lt;</span><span class="token number">10</span><span class="token operator">?</span><span class="token punctuation">(</span><span class="token string">'0'</span><span class="token operator">+</span>d<span class="token punctuation">)</span><span class="token punctuation">:</span>d<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    $<span class="token punctuation">.</span>fn<span class="token punctuation">.</span>datebox<span class="token punctuation">.</span>defaults<span class="token punctuation">.</span>parser <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>s<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">var</span> ss <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">'-'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">var</span> y <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>ss<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">var</span> m <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>ss<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">var</span> d <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>ss<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isNaN</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token function">isNaN</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token function">isNaN</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>y<span class="token punctuation">,</span>m<span class="token number">-1</span><span class="token punctuation">,</span>d<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>$<span class="token punctuation">.</span>fn<span class="token punctuation">.</span>datetimebox <span class="token operator">&amp;&amp;</span> $<span class="token punctuation">.</span>fn<span class="token punctuation">.</span>datebox<span class="token punctuation">)</span><span class="token punctuation">{</span>
    $<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span>$<span class="token punctuation">.</span>fn<span class="token punctuation">.</span>datetimebox<span class="token punctuation">.</span>defaults<span class="token punctuation">,</span><span class="token punctuation">{</span>
        currentText<span class="token punctuation">:</span> $<span class="token punctuation">.</span>fn<span class="token punctuation">.</span>datebox<span class="token punctuation">.</span>defaults<span class="token punctuation">.</span>currentText<span class="token punctuation">,</span>
        closeText<span class="token punctuation">:</span> $<span class="token punctuation">.</span>fn<span class="token punctuation">.</span>datebox<span class="token punctuation">.</span>defaults<span class="token punctuation">.</span>closeText<span class="token punctuation">,</span>
        okText<span class="token punctuation">:</span> $<span class="token punctuation">.</span>fn<span class="token punctuation">.</span>datebox<span class="token punctuation">.</span>defaults<span class="token punctuation">.</span>okText<span class="token punctuation">,</span>
        cleanText<span class="token punctuation">:</span> $<span class="token punctuation">.</span>fn<span class="token punctuation">.</span>datebox<span class="token punctuation">.</span>defaults<span class="token punctuation">.</span>cleanText <span class="token comment" spellcheck="true">// 注册</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
<h3 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h3><ul>
<li>修改前：</li>
</ul>
<p><img src="/static/12.png" alt=""></p>
<ul>
<li>修改后：</li>
</ul>
<p><img src="/static/13.png" alt=""></p>
]]></content>
      
        <categories>
            
            <category> 前端 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> easyui </tag>
            
            <tag> datebox </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Idea整合spring，springmvc，mybatis，tomcat遇到的问题]]></title>
      <url>/2017/04/01/Idea%E6%95%B4%E5%90%88spring%EF%BC%8Cspringmvc%EF%BC%8Cmybatis%EF%BC%8Ctomcat%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/</url>
      <content type="html"><![CDATA[<h3 id="1、版本问题，错误如下："><a href="#1、版本问题，错误如下：" class="headerlink" title="1、版本问题，错误如下："></a>1、版本问题，错误如下：</h3><pre class=" language-java"><code class="language-java">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>BeanDefinitionStoreException<span class="token operator">:</span> Failed to read 
candidatecomponent <span class="token keyword">class</span><span class="token operator">:</span> URL <span class="token punctuation">[</span>jar<span class="token operator">:</span>file<span class="token operator">:</span><span class="token operator">/</span>D<span class="token operator">:</span><span class="token operator">/</span>workspace<span class="token operator">/</span>JavaSE<span class="token operator">/</span>tms<span class="token operator">/</span>target<span class="token operator">/</span>tms<span class="token operator">/</span>WEB<span class="token operator">-</span>
INF<span class="token operator">/</span>lib<span class="token operator">/</span>mysql<span class="token operator">-</span>connector<span class="token operator">-</span>java<span class="token operator">-</span><span class="token number">5.1</span><span class="token punctuation">.</span><span class="token number">38</span><span class="token punctuation">.</span>jar<span class="token operator">!</span><span class="token operator">/</span>com<span class="token operator">/</span>mysql<span class="token operator">/</span>jdbc<span class="token operator">/</span>JDBC42CallableStatement<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">]</span><span class="token punctuation">;</span> 
nested exception is org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>core<span class="token punctuation">.</span>NestedIOException<span class="token operator">:</span> ASM ClassReader failed 
to parse <span class="token keyword">class</span> <span class="token class-name">file</span> <span class="token operator">-</span> probably due to a <span class="token keyword">new</span> <span class="token class-name">Java</span> <span class="token keyword">class</span> <span class="token class-name">file</span> version that isn't supported 
yet<span class="token operator">:</span> URL <span class="token punctuation">[</span>jar<span class="token operator">:</span>file<span class="token operator">:</span><span class="token operator">/</span>D<span class="token operator">:</span><span class="token operator">/</span>workspace<span class="token operator">/</span>JavaSE<span class="token operator">/</span>tms<span class="token operator">/</span>target<span class="token operator">/</span>tms<span class="token operator">/</span>WEB<span class="token operator">-</span>INF<span class="token operator">/</span>lib<span class="token operator">/</span>mysql<span class="token operator">-</span>connector<span class="token operator">-</span>java<span class="token operator">-</span>
<span class="token number">5.1</span><span class="token punctuation">.</span><span class="token number">38</span><span class="token punctuation">.</span>jar<span class="token operator">!</span><span class="token operator">/</span>com<span class="token operator">/</span>mysql<span class="token operator">/</span>jdbc<span class="token operator">/</span>JDBC42CallableStatement<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">]</span><span class="token punctuation">;</span> nested exception is 
java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>IllegalArgumentException
</code></pre>
<p><strong>这个是mysql驱动版本太高了</strong></p>
<pre class=" language-java"><code class="language-java">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>BeanDefinitionStoreException<span class="token operator">:</span> Failed to read candidate 
component <span class="token keyword">class</span><span class="token operator">:</span> file <span class="token punctuation">[</span>D<span class="token operator">:</span>\workspace\JavaSE\tms\target\tms\WEB<span class="token operator">-</span>
INF\classes\com\admin\action\LoginAction<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">]</span><span class="token punctuation">;</span> nested exception is 
org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>core<span class="token punctuation">.</span>NestedIOException<span class="token operator">:</span> ASM ClassReader failed to parse <span class="token keyword">class</span> <span class="token class-name">file</span> <span class="token operator">-</span> 
probably due to a <span class="token keyword">new</span> <span class="token class-name">Java</span> <span class="token keyword">class</span> <span class="token class-name">file</span> version that isn't supported yet<span class="token operator">:</span> file 
<span class="token punctuation">[</span>D<span class="token operator">:</span>\workspace\JavaSE\tms\target\tms\WEB<span class="token operator">-</span>INF\classes\com\admin\action\LoginAction<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">]</span><span class="token punctuation">;</span> 
nested exception is java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>IllegalArgumentException
</code></pre>
<p><strong>这个是<code>Idea jdk</code>环境太高<code>spring 3.x</code>在<code>jdk1.8</code> 上运行不了，配置如图</strong></p>
<p>编译级别：</p>
<p><img src="/static/15.png" alt=""></p>
<p>源代码级别：</p>
<p><img src="/static/16.png" alt=""></p>
<p><strong>两个都必须是1.7才能运行！！！</strong></p>
<h3 id="2、两个log冲突的问题："><a href="#2、两个log冲突的问题：" class="headerlink" title="2、两个log冲突的问题："></a>2、两个log冲突的问题：</h3><pre class=" language-java"><code class="language-java">Annotation<span class="token operator">-</span>specified bean name <span class="token string">'log'</span> <span class="token keyword">for</span> bean <span class="token keyword">class</span> <span class="token punctuation">[</span>com<span class="token punctuation">.</span>mysql<span class="token punctuation">.</span>jdbc<span class="token punctuation">.</span>log<span class="token punctuation">.</span>Log<span class="token punctuation">]</span> conflicts 
with existing<span class="token punctuation">,</span> non<span class="token operator">-</span>compatible bean definition of same name and <span class="token keyword">class</span> 
<span class="token punctuation">[</span>com<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>druid<span class="token punctuation">.</span>support<span class="token punctuation">.</span>logging<span class="token punctuation">.</span>Log<span class="token punctuation">]</span>
</code></pre>
<p>错误的配置：</p>
<p><img src="/static/17.png" alt=""></p>
<p>正确的配置：</p>
<p><img src="/static/18.png" alt=""></p>
]]></content>
      
        <categories>
            
            <category> Java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
            <tag> idea </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[JB本地License Server搭建]]></title>
      <url>/2017/04/01/JB%E6%9C%AC%E5%9C%B0License%20Server%E6%90%AD%E5%BB%BA/</url>
      <content type="html"><![CDATA[<h3 id="一、相关软件"><a href="#一、相关软件" class="headerlink" title="一、相关软件"></a>一、相关软件</h3><p>下载<a href="/static/idea_license_server.zip">idea_license_server.zip</a><br><br><a href="http://nssm.cc/download" target="_blank" rel="external">nssm.exe</a><br><br><a href="http://blog.lanyus.com/archives/231.html" target="_blank" rel="external">IntelliJIDEALicenseServer_windows_amd64.exe</a></p>
<h3 id="二、配置服务"><a href="#二、配置服务" class="headerlink" title="二、配置服务"></a>二、配置服务</h3><p>解压后，使用<code>命令提示符（管理员）</code>进入解压后的目录，执行：</p>
<pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 安装服务</span>
nssm.exe <span class="token function">install</span> idea_license_server
<span class="token comment" spellcheck="true"># 移除服务</span>
nssm.exe remove idea_license_server
</code></pre>
<p>弹出框如下：<br><br><img src="/static/29.png" alt=""><br><br>添加参数自定义用户名、端口</p>
<pre class=" language-bash"><code class="language-bash">IntelliJIDEALicenseServer_windows_amd64.exe -help
Usage of IntelliJIDEALicenseServer_windows_amd64.exe:
  -l string
        bind on host <span class="token punctuation">(</span>default <span class="token string">"0.0.0.0"</span><span class="token punctuation">)</span>
  -p int
        port <span class="token punctuation">(</span>default 1017<span class="token punctuation">)</span>
  -prolongationPeriod string
        prolongationPeriod <span class="token punctuation">(</span>default <span class="token string">"607875500"</span><span class="token punctuation">)</span>
  -u string
        username <span class="token punctuation">(</span>default <span class="token string">"ilanyu"</span><span class="token punctuation">)</span>
</code></pre>
<p>点击<code>install service</code>完成安装</p>
<h3 id="三、使用"><a href="#三、使用" class="headerlink" title="三、使用"></a>三、使用</h3><p><code>Help-&gt;Register</code><br><br><img src="/static/30.png" alt=""></p>
]]></content>
      
        <categories>
            
            <category> JetBrains </category>
            
        </categories>
        
        
        <tags>
            
            <tag> jetbrains </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Nginx安装]]></title>
      <url>/2017/03/25/Nginx%E5%AE%89%E8%A3%85/</url>
      <content type="html"><![CDATA[<h3 id="yum源"><a href="#yum源" class="headerlink" title="yum源"></a>yum源</h3><p>访问Nginx官网获取最新yum源 <a href="http://nginx.org/en/linux_packages.html" target="_blank" rel="external">http://nginx.org/en/linux_packages.html</a></p>
<pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 第一步(执行命令,安装nginx yum源)</span>
rpm -ivh http://nginx.org/packages/centos/7/noarch/RPMS/nginx-release-centos-7-0.el7.ngx.noarch.rpm
</code></pre>
<p><strong>如果要安装最新nginx,请修改/etc/yum.repos.d/nginx.repo文件</strong></p>
<h3 id="例子"><a href="#例子" class="headerlink" title="例子:"></a>例子:</h3><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># nginx.repo</span>
<span class="token punctuation">[</span>nginx<span class="token punctuation">]</span>
name<span class="token operator">=</span>nginx repo
baseurl<span class="token operator">=</span>http://nginx.org/packages/mainline/centos/7/<span class="token variable">$basearch</span>/
gpgcheck<span class="token operator">=</span>0
enabled<span class="token operator">=</span>1
</code></pre>
]]></content>
      
        <categories>
            
            <category> Nginx </category>
            
        </categories>
        
        
        <tags>
            
            <tag> linux </tag>
            
            <tag> nginx </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hadoop学习笔记3.23]]></title>
      <url>/2017/03/23/Hadoop%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B03.23/</url>
      <content type="html"><![CDATA[<h2 id="配置集群启动"><a href="#配置集群启动" class="headerlink" title="配置集群启动"></a>配置集群启动</h2><h3 id="配置slaves"><a href="#配置slaves" class="headerlink" title="配置slaves"></a>配置slaves</h3><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@master hadoop<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># pwd</span>
/usr/local/hadoop/etc/hadoop
<span class="token punctuation">[</span>root@master hadoop<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># vim slaves </span>
slave1
slave2
slave3
</code></pre>
<h3 id="配置ssh免登录"><a href="#配置ssh免登录" class="headerlink" title="配置ssh免登录"></a>配置ssh免登录</h3><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@master hadoop<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># start-dfs.sh </span>
Starting namenodes on <span class="token punctuation">[</span>master<span class="token punctuation">]</span>
The authenticity of host <span class="token string">'master (192.168.8.8)'</span> can<span class="token string">'t be established.
ECDSA key fingerprint is 9f:ba:77:ff:03:c0:2b:10:fc:c5:df:0d:63:20:28:43.
Are you sure you want to continue connecting (yes/no)? yes
master: Warning: Permanently added '</span>master,192.168.8.8<span class="token string">' (ECDSA) to the list of known hosts.
root@master'</span>s password: 
master: namenode running as process 2364. Stop it first.
The authenticity of host <span class="token string">'slave2 (192.168.8.11)'</span> can<span class="token string">'t be established.
ECDSA key fingerprint is 9f:ba:77:ff:03:c0:2b:10:fc:c5:df:0d:63:20:28:43.
Are you sure you want to continue connecting (yes/no)? The authenticity of host '</span>slave3 <span class="token punctuation">(</span>192.168.8.12<span class="token punctuation">)</span><span class="token string">' can'</span>t be established.
ECDSA key fingerprint is 9f:ba:77:ff:03:c0:2b:10:fc:c5:df:0d:63:20:28:43.
Are you sure you want to <span class="token keyword">continue</span> connecting <span class="token punctuation">(</span>yes/no<span class="token punctuation">)</span>? The authenticity of host <span class="token string">'slave1 (192.168.8.10)'</span> can<span class="token string">'t be established.
ECDSA key fingerprint is 9f:ba:77:ff:03:c0:2b:10:fc:c5:df:0d:63:20:28:43.
Are you sure you want to continue connecting (yes/no)? yes
slave2: Warning: Permanently added '</span>slave2,192.168.8.11<span class="token string">' (ECDSA) to the list of known hosts.
root@slave2'</span>s password: Please <span class="token function">type</span> <span class="token string">'yes'</span> or <span class="token string">'no'</span><span class="token keyword">:</span> 
slave3: Warning: Permanently added <span class="token string">'slave3,192.168.8.12'</span> <span class="token punctuation">(</span>ECDSA<span class="token punctuation">)</span> to the list of known hosts.
root@slave3<span class="token string">'s password: Please type '</span><span class="token function">yes</span><span class="token string">' or '</span>no<span class="token string">': 
slave1: Warning: Permanently added '</span>slave1,192.168.8.10<span class="token string">' (ECDSA) to the list of known hosts.
root@slave1'</span>s password: 
slave2: datanode running as process 2379. Stop it first.
<span class="token comment" spellcheck="true"># 可以看到每台机器都需要输入密码，很麻烦</span>

<span class="token comment" spellcheck="true"># 生成秘钥</span>
<span class="token punctuation">[</span>root@master hadoop<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ssh-keygen -t rsa</span>
<span class="token punctuation">[</span>root@master hadoop<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># cd ~/.ssh</span>
<span class="token punctuation">[</span>root@master .ssh<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ls</span>
id_rsa  id_rsa.pub  known_hosts

<span class="token comment" spellcheck="true"># 复制公钥到各个slave节点</span>
<span class="token punctuation">[</span>root@master .ssh<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ssh-copy-id slave1</span>
/usr/bin/ssh-copy-id: INFO: attempting to log <span class="token keyword">in</span> with the new key<span class="token punctuation">(</span>s<span class="token punctuation">)</span>, to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key<span class="token punctuation">(</span>s<span class="token punctuation">)</span> remain to be installed -- <span class="token keyword">if</span> you are prompted now it is to <span class="token function">install</span> the new keys
root@slave1<span class="token string">'s password: 

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh '</span>slave1'"
and check to <span class="token function">make</span> sure that only the key<span class="token punctuation">(</span>s<span class="token punctuation">)</span> you wanted were added.

<span class="token punctuation">[</span>root@master .ssh<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ssh-copy-id slave2</span>
<span class="token punctuation">[</span>root@master .ssh<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ssh-copy-id slave3</span>
<span class="token comment" spellcheck="true"># 注意master自己也需要添加</span>
<span class="token punctuation">[</span>root@master .ssh<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ssh-copy-id  master</span>

<span class="token comment" spellcheck="true"># 已经复制到各个节点</span>
<span class="token punctuation">[</span>root@slave1 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ll .ssh/</span>
总用量 4
-rw-------. 1 root root 393 3月  25 00:07 authorized_keys
</code></pre>
<h3 id="集群管理"><a href="#集群管理" class="headerlink" title="集群管理"></a>集群管理</h3><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 启动集群</span>
<span class="token punctuation">[</span>root@master ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># start-dfs.sh </span>
Starting namenodes on <span class="token punctuation">[</span>master<span class="token punctuation">]</span>
master: starting namenode, logging to /usr/local/hadoop/logs/hadoop-root-namenode-master.out
slave2: starting datanode, logging to /usr/local/hadoop/logs/hadoop-root-datanode-slave2.out
slave3: starting datanode, logging to /usr/local/hadoop/logs/hadoop-root-datanode-slave3.out
slave1: starting datanode, logging to /usr/local/hadoop/logs/hadoop-root-datanode-slave1.out
Starting secondary namenodes <span class="token punctuation">[</span>0.0.0.0<span class="token punctuation">]</span>
0.0.0.0: starting secondarynamenode, logging to /usr/local/hadoop/logs/hadoop-root-secondarynamenode-master.out
<span class="token punctuation">[</span>root@master ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># jps</span>
3865 Jps
3755 SecondaryNameNode
3565 NameNode

<span class="token comment" spellcheck="true"># 停止集群</span>
<span class="token punctuation">[</span>root@master ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># stop-dfs.sh </span>
Stopping namenodes on <span class="token punctuation">[</span>master<span class="token punctuation">]</span>
master: stopping namenode
slave1: stopping datanode
slave2: stopping datanode
slave3: stopping datanode
Stopping secondary namenodes <span class="token punctuation">[</span>0.0.0.0<span class="token punctuation">]</span>
0.0.0.0: stopping secondarynamenode
<span class="token punctuation">[</span>root@master ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># jps</span>
4184 Jps

<span class="token comment" spellcheck="true"># 查看集群状态</span>
<span class="token punctuation">[</span>root@master hadoop<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># hdfs dfsadmin -report</span>
Configured Capacity: 56239325184 <span class="token punctuation">(</span>52.38 GB<span class="token punctuation">)</span>
Present Capacity: 49572122624 <span class="token punctuation">(</span>46.17 GB<span class="token punctuation">)</span>
DFS Remaining: 49572085760 <span class="token punctuation">(</span>46.17 GB<span class="token punctuation">)</span>
DFS Used: 36864 <span class="token punctuation">(</span>36 KB<span class="token punctuation">)</span>
DFS Used%: 0.00%
Under replicated blocks: 0
Blocks with corrupt replicas: 0
Missing blocks: 0
Missing blocks <span class="token punctuation">(</span>with replication factor 1<span class="token punctuation">)</span>: 0
-------------------------------------------------
Live datanodes <span class="token punctuation">(</span>3<span class="token punctuation">)</span>:
</code></pre>
<h3 id="HDFS基本使用"><a href="#HDFS基本使用" class="headerlink" title="HDFS基本使用"></a>HDFS基本使用</h3><p>文档地址：<a href="http://hadoop.apache.org/docs/r2.7.3/" target="_blank" rel="external">http://hadoop.apache.org/docs/r2.7.3/</a></p>
<pre class=" language-bash"><code class="language-bash">
</code></pre>
]]></content>
      
        <categories>
            
            <category> Hadoop </category>
            
        </categories>
        
        
        <tags>
            
            <tag> hadoop </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[UTF-8 BOM问题]]></title>
      <url>/2017/03/21/UTF-8%20BOM%E9%97%AE%E9%A2%98/</url>
      <content type="html"><![CDATA[<h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><p>这里使用NOTEPAD++编辑器做实验,新建a.txt,选择菜单格式(M)-&gt;以UTF-8 无BOM格式编码。</p>
<pre><code>D:/a.txt
aaa
</code></pre><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestBom</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        InputStream in <span class="token operator">=</span> null<span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            in <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span><span class="token string">"D:/a.txt"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> b <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">byte</span><span class="token punctuation">[</span><span class="token number">1024</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token punctuation">(</span>count <span class="token operator">=</span> in<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span>count<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>b<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">","</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span>in <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    in<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    in <span class="token operator">=</span> null<span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre>
<ul>
<li><p>无BOM格式</p>
<pre><code>Console输出：
97,97,97,
</code></pre></li>
<li><p>BOM格式<br>选择菜单格式(M)-&gt;以UTF-8 格式编码</p>
<pre><code>Console输出：
-17,-69,-65,97,97,97,
</code></pre></li>
</ul>
<p><strong>看到没带BOM格式比不带BOM格式多出了三个字符-17,-69,-65,具体是什么有待深入。<br>Java平台最好不要带BOM,尤其是Java配置文件,有次就被NOTEPAD++坑过,以UTF-8 格式编码一直在报错,找了N久才知道这个问题。<br>要找一款自己熟悉,用的顺手的编辑器。</strong></p>
]]></content>
      
        <categories>
            
            <category> Java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
            <tag> bom </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Datagrid行编辑模板、自定义验证]]></title>
      <url>/2017/03/21/Datagrid%E8%A1%8C%E7%BC%96%E8%BE%91%E6%A8%A1%E6%9D%BF%E3%80%81%E8%87%AA%E5%AE%9A%E4%B9%89%E9%AA%8C%E8%AF%81/</url>
      <content type="html"><![CDATA[<h3 id="一、datagrid行编辑模板"><a href="#一、datagrid行编辑模板" class="headerlink" title="一、datagrid行编辑模板"></a>一、datagrid行编辑模板</h3><pre class=" language-js"><code class="language-js"> <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">initDatagrid</span><span class="token punctuation">(</span><span class="token function">getQueryParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment" spellcheck="true">/**获取查询参数*/</span>
        <span class="token keyword">function</span> <span class="token function">getQueryParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">var</span> o <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

            <span class="token keyword">return</span> o<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment" spellcheck="true">/**初始化datagrid*/</span>
        <span class="token keyword">function</span> <span class="token function">initDatagrid</span><span class="token punctuation">(</span>param<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#dg"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">datagrid</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
                idField <span class="token punctuation">:</span> <span class="token string">"ID"</span><span class="token punctuation">,</span>
                title <span class="token punctuation">:</span> <span class="token string">"干系人列表"</span><span class="token punctuation">,</span>
                url <span class="token punctuation">:</span> <span class="token string">"&lt;%=path%>/xxbs/projectManage/getProjectUserList.page"</span><span class="token punctuation">,</span>
                queryParams <span class="token punctuation">:</span> param<span class="token punctuation">,</span>
                striped <span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
                fit <span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
                fitColumns <span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
                rownumbers <span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
                singleSelect <span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
                loadMsg <span class="token punctuation">:</span> <span class="token string">"数据加载中，请耐心等待..."</span><span class="token punctuation">,</span>
                pageList <span class="token punctuation">:</span> <span class="token punctuation">[</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">50</span> <span class="token punctuation">]</span><span class="token punctuation">,</span>
                pagination <span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
                onDblClickRow <span class="token punctuation">:</span> doubleClickRow<span class="token punctuation">,</span>
                <span class="token comment" spellcheck="true">//onClickRow : clickRow,</span>
                onAfterEdit <span class="token punctuation">:</span> afterEdit<span class="token punctuation">,</span>
                columns<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">{</span>
                    title <span class="token punctuation">:</span> <span class="token string">"姓名"</span><span class="token punctuation">,</span>
                    field <span class="token punctuation">:</span> <span class="token string">"NAME"</span><span class="token punctuation">,</span>
                    align <span class="token punctuation">:</span> <span class="token string">"center"</span><span class="token punctuation">,</span>
                    width <span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span>
                    editor <span class="token punctuation">:</span> <span class="token punctuation">{</span>
                        type <span class="token punctuation">:</span> <span class="token string">"validatebox"</span><span class="token punctuation">,</span>
                        options <span class="token punctuation">:</span> <span class="token punctuation">{</span>
                            required <span class="token punctuation">:</span> <span class="token boolean">true</span>
                        <span class="token punctuation">}</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span>
                    title <span class="token punctuation">:</span> <span class="token string">"电话"</span><span class="token punctuation">,</span>
                    field <span class="token punctuation">:</span> <span class="token string">"PHONE"</span><span class="token punctuation">,</span>
                    align <span class="token punctuation">:</span> <span class="token string">"center"</span><span class="token punctuation">,</span>
                    width <span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span>
                    editor <span class="token punctuation">:</span> <span class="token punctuation">{</span>
                        type <span class="token punctuation">:</span> <span class="token string">"validatebox"</span><span class="token punctuation">,</span>
                        options <span class="token punctuation">:</span> <span class="token punctuation">{</span>
                            validType <span class="token punctuation">:</span> <span class="token string">"phoneOrMobile"</span><span class="token punctuation">,</span>
                            required <span class="token punctuation">:</span> <span class="token boolean">true</span>
                        <span class="token punctuation">}</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
                    title <span class="token punctuation">:</span> <span class="token string">"角色"</span><span class="token punctuation">,</span>
                    field <span class="token punctuation">:</span> <span class="token string">"ROLE"</span><span class="token punctuation">,</span>
                    align <span class="token punctuation">:</span> <span class="token string">"center"</span><span class="token punctuation">,</span>
                    width <span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span>
                    editor <span class="token punctuation">:</span> <span class="token punctuation">{</span>
                        type <span class="token punctuation">:</span> <span class="token string">"validatebox"</span><span class="token punctuation">,</span>
                        options <span class="token punctuation">:</span> <span class="token punctuation">{</span>
                            required <span class="token punctuation">:</span> <span class="token boolean">true</span>
                        <span class="token punctuation">}</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
                    title <span class="token punctuation">:</span> <span class="token string">"描述"</span><span class="token punctuation">,</span>
                    field <span class="token punctuation">:</span> <span class="token string">"DESCRIPTION"</span><span class="token punctuation">,</span>
                    align <span class="token punctuation">:</span> <span class="token string">"center"</span><span class="token punctuation">,</span>
                    width <span class="token punctuation">:</span> <span class="token number">300</span><span class="token punctuation">,</span>
                    editor <span class="token punctuation">:</span> <span class="token punctuation">{</span>
                        type <span class="token punctuation">:</span> <span class="token string">"validatebox"</span><span class="token punctuation">,</span>
                        options <span class="token punctuation">:</span> <span class="token punctuation">{</span>
                            required <span class="token punctuation">:</span> <span class="token boolean">true</span>
                        <span class="token punctuation">}</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                toolbar <span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>
                    text <span class="token punctuation">:</span> <span class="token string">"添加"</span><span class="token punctuation">,</span>
                    iconCls <span class="token punctuation">:</span> <span class="token string">"icon-add"</span><span class="token punctuation">,</span>
                    handler <span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token function">append</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
                    text <span class="token punctuation">:</span> <span class="token string">"删除"</span><span class="token punctuation">,</span>
                    iconCls <span class="token punctuation">:</span> <span class="token string">"icon-remove"</span><span class="token punctuation">,</span>
                    handler <span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token keyword">var</span> row <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#dg"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">datagrid</span><span class="token punctuation">(</span><span class="token string">"getSelected"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">==</span> row<span class="token punctuation">.</span>ID<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            $<span class="token punctuation">.</span>messager<span class="token punctuation">.</span><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"系统提示"</span><span class="token punctuation">,</span> <span class="token string">"请选择一条记录！"</span><span class="token punctuation">,</span> <span class="token string">"warning"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                            <span class="token keyword">return</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                        $<span class="token punctuation">.</span>messager<span class="token punctuation">.</span><span class="token function">confirm</span><span class="token punctuation">(</span><span class="token string">"系统提示"</span><span class="token punctuation">,</span> <span class="token string">"是否确认删除？"</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>r<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            <span class="token keyword">if</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                                $<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">"&lt;%=path%>/xxbs/projectManage/deleteProjectUser.page"</span><span class="token punctuation">,</span> 
                                        <span class="token punctuation">{</span>ID <span class="token punctuation">:</span> row<span class="token punctuation">.</span>ID<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                                    <span class="token function">doCallback</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
                                <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">"JSON"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                            <span class="token punctuation">}</span>
                        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
                    text <span class="token punctuation">:</span> <span class="token string">"保存"</span><span class="token punctuation">,</span>
                    iconCls <span class="token punctuation">:</span> <span class="token string">"icon-save"</span><span class="token punctuation">,</span>
                    handler <span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token function">clickRow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
                    text <span class="token punctuation">:</span> <span class="token string">"取消"</span><span class="token punctuation">,</span>
                    iconCls <span class="token punctuation">:</span> <span class="token string">"icon-cancel"</span><span class="token punctuation">,</span>
                    handler <span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token function">reject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">]</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment" spellcheck="true">/**处理状态*/</span>
        <span class="token keyword">function</span> <span class="token function">doCallback</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> data <span class="token operator">==</span> <span class="token string">"string"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                data <span class="token operator">=</span> $<span class="token punctuation">.</span><span class="token function">parseJSON</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>status <span class="token operator">==</span> <span class="token string">"1"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                $<span class="token punctuation">.</span>messager<span class="token punctuation">.</span><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"系统提示"</span><span class="token punctuation">,</span> data<span class="token punctuation">.</span>msg<span class="token punctuation">,</span> <span class="token string">"info"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#dg"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">datagrid</span><span class="token punctuation">(</span><span class="token string">"reload"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>status <span class="token operator">==</span> <span class="token string">"0"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                $<span class="token punctuation">.</span>messager<span class="token punctuation">.</span><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"系统提示"</span><span class="token punctuation">,</span> data<span class="token punctuation">.</span>msg<span class="token punctuation">,</span> <span class="token string">"error"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> 

        <span class="token comment" spellcheck="true">/**行编辑函数*/</span>
        <span class="token keyword">var</span> editIndex <span class="token operator">=</span> undefined<span class="token punctuation">;</span>
        <span class="token keyword">function</span> endEditing <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>editIndex <span class="token operator">==</span> undefined<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#dg"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">datagrid</span><span class="token punctuation">(</span><span class="token string">"validateRow"</span><span class="token punctuation">,</span> editIndex<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#dg"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">datagrid</span><span class="token punctuation">(</span><span class="token string">"endEdit"</span><span class="token punctuation">,</span> editIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>
                editIndex <span class="token operator">=</span> undefined<span class="token punctuation">;</span>
                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>

        <span class="token comment" spellcheck="true">/**表格双击事件  */</span>
        <span class="token keyword">function</span> doubleClickRow <span class="token punctuation">(</span>index<span class="token punctuation">,</span> row<span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>editIndex <span class="token operator">!=</span> index<span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">endEditing</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#dg"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">datagrid</span><span class="token punctuation">(</span><span class="token string">"selectRow"</span><span class="token punctuation">,</span> index<span class="token punctuation">)</span>
                            <span class="token punctuation">.</span><span class="token function">datagrid</span><span class="token punctuation">(</span><span class="token string">"beginEdit"</span><span class="token punctuation">,</span> index<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    editIndex <span class="token operator">=</span> index<span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#dg"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">datagrid</span><span class="token punctuation">(</span><span class="token string">"selectRow"</span><span class="token punctuation">,</span> editIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>

        <span class="token comment" spellcheck="true">/**取消更改  */</span>
        <span class="token keyword">function</span> <span class="token function">reject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token comment" spellcheck="true">// 重要判断</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>editIndex <span class="token operator">!=</span> undefined<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#dg"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">datagrid</span><span class="token punctuation">(</span><span class="token string">"rejectChanges"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                editIndex <span class="token operator">=</span> undefined<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token comment" spellcheck="true">/**表格单机事件  */</span>
        <span class="token keyword">function</span> clickRow <span class="token punctuation">(</span>index<span class="token punctuation">,</span> row<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">endEditing</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#dg"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">datagrid</span><span class="token punctuation">(</span><span class="token string">"acceptChanges"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#dg"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">datagrid</span><span class="token punctuation">(</span><span class="token string">"selectRow"</span><span class="token punctuation">,</span> editIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment" spellcheck="true">//$("#dg").datagrid("rejectChanges");</span>
                <span class="token comment" spellcheck="true">//editIndex = undefined;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>

        <span class="token comment" spellcheck="true">/**编辑结束事件  */</span>
        <span class="token keyword">function</span> afterEdit <span class="token punctuation">(</span>rowIndex<span class="token punctuation">,</span> rowData<span class="token punctuation">,</span> changes<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            rowData<span class="token punctuation">.</span>PROJECT_ID <span class="token operator">=</span> parent<span class="token punctuation">.</span><span class="token function">getProjectId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            $<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">"&lt;%=path%>/xxbs/projectManage/saveProjectUser.page"</span><span class="token punctuation">,</span> 
                    rowData<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>status <span class="token operator">==</span> <span class="token string">"1"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    $<span class="token punctuation">.</span>messager<span class="token punctuation">.</span><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"系统提示"</span><span class="token punctuation">,</span> data<span class="token punctuation">.</span>msg<span class="token punctuation">,</span> <span class="token string">"info"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#dg"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">datagrid</span><span class="token punctuation">(</span><span class="token string">"reload"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>status <span class="token operator">==</span> <span class="token string">"0"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    $<span class="token punctuation">.</span>messager<span class="token punctuation">.</span><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"系统提示"</span><span class="token punctuation">,</span> data<span class="token punctuation">.</span>msg<span class="token punctuation">,</span> <span class="token string">"error"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">"json"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>

        <span class="token comment" spellcheck="true">/**添加事件  */</span>
        <span class="token keyword">function</span> <span class="token function">append</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">endEditing</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#dg"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">datagrid</span><span class="token punctuation">(</span><span class="token string">"appendRow"</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
                    NAME <span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">,</span>
                    PHONE <span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">,</span>
                    ROLE <span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">,</span>
                    DESCRIPTION <span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                editIndex <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#dg"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">datagrid</span><span class="token punctuation">(</span><span class="token string">"getRows"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token number">-1</span><span class="token punctuation">;</span>
                <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#dg"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">datagrid</span><span class="token punctuation">(</span><span class="token string">"selectRow"</span><span class="token punctuation">,</span> editIndex<span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">datagrid</span><span class="token punctuation">(</span><span class="token string">"beginEdit"</span><span class="token punctuation">,</span> editIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
</code></pre>
<h3 id="二、treegrid行编辑"><a href="#二、treegrid行编辑" class="headerlink" title="二、treegrid行编辑"></a>二、treegrid行编辑</h3><pre class=" language-js"><code class="language-js"><span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

            <span class="token function">inittreegrid</span><span class="token punctuation">(</span><span class="token function">getQueryParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment" spellcheck="true">/**重置事件*/</span>
        <span class="token keyword">function</span> <span class="token function">resetEvent</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#CLASSIFY_NAME"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment" spellcheck="true">//$("#CLASSIFY_NO").val("");</span>

            <span class="token function">searchEvent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment" spellcheck="true">/**查询事件*/</span>
        <span class="token keyword">function</span> <span class="token function">searchEvent</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">cancel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#dg"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">treegrid</span><span class="token punctuation">(</span><span class="token string">"load"</span><span class="token punctuation">,</span> <span class="token function">getQueryParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment" spellcheck="true">/**获取查询参数*/</span>
        <span class="token keyword">function</span> <span class="token function">getQueryParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">var</span> o <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
            o<span class="token punctuation">.</span>CLASSIFY_NAME <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#CLASSIFY_NAME"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment" spellcheck="true">//o.CLASSIFY_NO = $("#CLASSIFY_NO").val();</span>

            <span class="token keyword">return</span> o<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment" spellcheck="true">/**初始化treegrid*/</span>
        <span class="token keyword">function</span> <span class="token function">inittreegrid</span><span class="token punctuation">(</span>param<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#dg"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">treegrid</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
                idField <span class="token punctuation">:</span> <span class="token string">"ID"</span><span class="token punctuation">,</span>
                treeField <span class="token punctuation">:</span> <span class="token string">"CLASSIFY_NAME"</span><span class="token punctuation">,</span>
                title <span class="token punctuation">:</span> <span class="token string">"项目类别列表"</span><span class="token punctuation">,</span>
                url <span class="token punctuation">:</span> <span class="token string">"&lt;%=path%>/xxbs/classifyManage/getClassifyList.page"</span><span class="token punctuation">,</span>
                queryParams <span class="token punctuation">:</span> param<span class="token punctuation">,</span>
                striped <span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
                fit <span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
                lines <span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
                <span class="token comment" spellcheck="true">//fitColumns : true,</span>
                rownumbers <span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
                singleSelect <span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
                loadMsg <span class="token punctuation">:</span> <span class="token string">"数据加载中，请耐心等待..."</span><span class="token punctuation">,</span>
                <span class="token comment" spellcheck="true">//pageList : [ 5, 10, 20, 30, 50 ],</span>
                <span class="token comment" spellcheck="true">//pagination : true,</span>
                onDblClickRow <span class="token punctuation">:</span> doubleClickRow<span class="token punctuation">,</span>
                onAfterEdit <span class="token punctuation">:</span> afterEdit<span class="token punctuation">,</span>
                columns<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">{</span>
                    title <span class="token punctuation">:</span> <span class="token string">"项目名称"</span><span class="token punctuation">,</span>
                    field <span class="token punctuation">:</span> <span class="token string">"CLASSIFY_NAME"</span><span class="token punctuation">,</span>
                    align <span class="token punctuation">:</span> <span class="token string">"left"</span><span class="token punctuation">,</span>
                    halign <span class="token punctuation">:</span> <span class="token string">"center"</span><span class="token punctuation">,</span>
                    width <span class="token punctuation">:</span> <span class="token number">400</span><span class="token punctuation">,</span>
                    editor <span class="token punctuation">:</span> <span class="token punctuation">{</span>
                        type <span class="token punctuation">:</span> <span class="token string">"validatebox"</span><span class="token punctuation">,</span>
                        options <span class="token punctuation">:</span> <span class="token punctuation">{</span>
                            required <span class="token punctuation">:</span> <span class="token boolean">true</span>
                        <span class="token punctuation">}</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                toolbar <span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>
                    text <span class="token punctuation">:</span> <span class="token string">"添加"</span><span class="token punctuation">,</span>
                    iconCls <span class="token punctuation">:</span> <span class="token string">"icon-add"</span><span class="token punctuation">,</span>
                    handler <span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token function">append</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
                    text <span class="token punctuation">:</span> <span class="token string">"保存"</span><span class="token punctuation">,</span>
                    iconCls <span class="token punctuation">:</span> <span class="token string">"icon-save"</span><span class="token punctuation">,</span>
                    handler <span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token function">clickRow</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
                    text <span class="token punctuation">:</span> <span class="token string">"取消"</span><span class="token punctuation">,</span>
                    iconCls <span class="token punctuation">:</span> <span class="token string">"icon-cancel"</span><span class="token punctuation">,</span>
                    handler <span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token function">cancel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">]</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment" spellcheck="true">/**行编辑函数*/</span>
        <span class="token keyword">var</span> editIndex <span class="token operator">=</span> undefined<span class="token punctuation">;</span>
        <span class="token keyword">function</span> endEditing <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>editIndex <span class="token operator">==</span> undefined<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#dg"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">treegrid</span><span class="token punctuation">(</span><span class="token string">"validateRow"</span><span class="token punctuation">,</span> editIndex<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#dg"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">treegrid</span><span class="token punctuation">(</span><span class="token string">"endEdit"</span><span class="token punctuation">,</span> editIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>
                editIndex <span class="token operator">=</span> undefined<span class="token punctuation">;</span>
                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>

        <span class="token comment" spellcheck="true">/**添加行事件*/</span>
        <span class="token keyword">function</span> <span class="token function">append</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">endEditing</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token keyword">var</span> node <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#dg"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">treegrid</span><span class="token punctuation">(</span><span class="token string">"getSelected"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">var</span> pid <span class="token operator">=</span> <span class="token keyword">null</span> <span class="token operator">==</span> node <span class="token operator">?</span> <span class="token string">""</span> <span class="token punctuation">:</span> node<span class="token punctuation">.</span>ID<span class="token punctuation">;</span>
                editIndex <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
                <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#dg"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">treegrid</span><span class="token punctuation">(</span><span class="token string">"append"</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
                    parent <span class="token punctuation">:</span> pid<span class="token punctuation">,</span>
                    data <span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>
                        ID <span class="token punctuation">:</span> editIndex<span class="token punctuation">,</span>
                        PID <span class="token punctuation">:</span> pid<span class="token punctuation">,</span>
                        CLASSIFY_NAME <span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">,</span>
                        CLASSIFY_NO <span class="token punctuation">:</span> <span class="token string">""</span>
                    <span class="token punctuation">}</span><span class="token punctuation">]</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#dg"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">treegrid</span><span class="token punctuation">(</span><span class="token string">"beginEdit"</span><span class="token punctuation">,</span> editIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token comment" spellcheck="true">/**行双击事件  */</span>
        <span class="token keyword">function</span> doubleClickRow <span class="token punctuation">(</span>row<span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">var</span> index <span class="token operator">=</span> row<span class="token punctuation">.</span>ID
            <span class="token keyword">if</span> <span class="token punctuation">(</span>editIndex <span class="token operator">!=</span> index<span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">endEditing</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#dg"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">treegrid</span><span class="token punctuation">(</span><span class="token string">"selectRow"</span><span class="token punctuation">,</span> index<span class="token punctuation">)</span>
                            <span class="token punctuation">.</span><span class="token function">treegrid</span><span class="token punctuation">(</span><span class="token string">"beginEdit"</span><span class="token punctuation">,</span> index<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">var</span> row <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#dg"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">treegrid</span><span class="token punctuation">(</span><span class="token string">"getSelected"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    editIndex <span class="token operator">=</span> index<span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#dg"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">treegrid</span><span class="token punctuation">(</span><span class="token string">"selectRow"</span><span class="token punctuation">,</span> editIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>

        <span class="token comment" spellcheck="true">/**行单击事件  */</span>
        <span class="token keyword">function</span> clickRow <span class="token punctuation">(</span>row<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">endEditing</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#dg"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">treegrid</span><span class="token punctuation">(</span><span class="token string">"acceptChanges"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token comment" spellcheck="true">// 验证不通过直接取消编辑</span>
                <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#dg"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">treegrid</span><span class="token punctuation">(</span><span class="token string">"cancelEdit"</span><span class="token punctuation">,</span> editIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span>editIndex <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#dg"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">treegrid</span><span class="token punctuation">(</span><span class="token string">"remove"</span><span class="token punctuation">,</span> editIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                editIndex <span class="token operator">=</span> undefined<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>

        <span class="token comment" spellcheck="true">/**编辑结束事件  */</span>
        <span class="token keyword">function</span> afterEdit <span class="token punctuation">(</span>row<span class="token punctuation">,</span> changes<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            row<span class="token punctuation">.</span>CLASSIFY_NO <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>
            $<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">"&lt;%=path%>/xxbs/classifyManage/saveClassify.page"</span><span class="token punctuation">,</span> 
                    row<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>status <span class="token operator">==</span> <span class="token string">"1"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    $<span class="token punctuation">.</span>messager<span class="token punctuation">.</span><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"系统提示"</span><span class="token punctuation">,</span> data<span class="token punctuation">.</span>msg<span class="token punctuation">,</span> <span class="token string">"info"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#dg"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">treegrid</span><span class="token punctuation">(</span><span class="token string">"reload"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>status <span class="token operator">==</span> <span class="token string">"0"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    $<span class="token punctuation">.</span>messager<span class="token punctuation">.</span><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"系统提示"</span><span class="token punctuation">,</span> data<span class="token punctuation">.</span>msg<span class="token punctuation">,</span> <span class="token string">"error"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                editIndex <span class="token operator">=</span> undefined<span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">"json"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>

        <span class="token comment" spellcheck="true">/**取消事件*/</span>
        <span class="token keyword">function</span> <span class="token function">cancel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>editIndex <span class="token operator">!=</span> undefined<span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#dg"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">treegrid</span><span class="token punctuation">(</span><span class="token string">"cancelEdit"</span><span class="token punctuation">,</span> editIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span>editIndex <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#dg"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">treegrid</span><span class="token punctuation">(</span><span class="token string">"remove"</span><span class="token punctuation">,</span> editIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                editIndex <span class="token operator">=</span> undefined<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
</code></pre>
<h3 id="三、自定义验证"><a href="#三、自定义验证" class="headerlink" title="三、自定义验证"></a>三、自定义验证</h3><p>引入如下js，在<code>validatebox</code>中使用，如<code>validType : “phoneOrMobile”</code>,</p>
<pre class=" language-js"><code class="language-js">$<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span>$<span class="token punctuation">.</span>fn<span class="token punctuation">.</span>validatebox<span class="token punctuation">.</span>defaults<span class="token punctuation">.</span>rules<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token comment" spellcheck="true">// 验证电话号码</span>
    phone <span class="token punctuation">:</span> <span class="token punctuation">{</span>
        validator <span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token regex">/^(\d{3,4})(\-?)(\d{7,8})$/i</span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        message <span class="token punctuation">:</span> <span class="token string">'格式不正确,请使用下面格式:020-88888888'</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token comment" spellcheck="true">// 验证手机号码</span>
    mobile <span class="token punctuation">:</span> <span class="token punctuation">{</span>
        validator <span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token regex">/^(1)\d{10}$/i</span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        message <span class="token punctuation">:</span> <span class="token string">'手机号码格式不正确(正确格式如：13450774432)'</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token comment" spellcheck="true">// 验证手机或电话</span>
    phoneOrMobile <span class="token punctuation">:</span> <span class="token punctuation">{</span>
        validator <span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>value<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">"-"</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token regex">/^(\d{3,4})(\-?)(\d{7,8})$/i</span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token regex">/^(1)\d{10}$/i</span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        message <span class="token punctuation">:</span> <span class="token string">'请填入手机或电话号码,如13688888888或020-8888888'</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre>
]]></content>
      
        <categories>
            
            <category> 前端 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> easyui </tag>
            
            <tag> datagrid </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Spring集成记录]]></title>
      <url>/2017/03/21/Spring%E9%9B%86%E6%88%90%E8%AE%B0%E5%BD%95/</url>
      <content type="html"><![CDATA[<h3 id="一：component-scan"><a href="#一：component-scan" class="headerlink" title="一：component-scan"></a>一：component-scan</h3><pre class=" language-java"><code class="language-java"><span class="token operator">&lt;</span>context<span class="token operator">:</span>component<span class="token operator">-</span>scan base<span class="token operator">-</span><span class="token keyword">package</span><span class="token operator">=</span><span class="token string">"com.serical.action"</span><span class="token operator">/</span><span class="token operator">></span>
</code></pre>
<p><code>base-package</code>，如果最后的包下面无子包了，不能写.*这种形式，否则扫描不到<code>Controller</code>，建议直接写到父包就可以了，不想注册哪个组件可以通过下面的方式。</p>
<pre class=" language-java"><code class="language-java"><span class="token operator">&lt;</span>context<span class="token operator">:</span>exclude<span class="token operator">-</span>filter type<span class="token operator">=</span><span class="token string">""</span> expression<span class="token operator">=</span><span class="token string">""</span><span class="token operator">/</span><span class="token operator">></span>
<span class="token operator">&lt;</span>context<span class="token operator">:</span>include<span class="token operator">-</span>filter type<span class="token operator">=</span><span class="token string">""</span> expression<span class="token operator">=</span><span class="token string">""</span><span class="token operator">/</span><span class="token operator">></span>
</code></pre>
<p>如果使用了<code>exclude-filter</code>和<code>include-filter</code>则要如下配置，否则上面的filter无效</p>
<pre class=" language-java"><code class="language-java"> use<span class="token operator">-</span><span class="token keyword">default</span><span class="token operator">-</span>filters<span class="token operator">=</span><span class="token string">"false"</span>
</code></pre>
<h3 id="二：HTTP-CODE-406"><a href="#二：HTTP-CODE-406" class="headerlink" title="二：HTTP CODE 406"></a>二：HTTP CODE 406</h3><p>增加转换器<code>MappingJacksonHttpMessageConverter</code></p>
<pre class=" language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">mvc:</span>annotation-driven</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">mvc:</span>message-converters</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>org.springframework.http.converter.StringHttpMessageConverter<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>supportedMediaTypes<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>list</span><span class="token punctuation">></span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>application/json;charset=UTF-8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>list</span><span class="token punctuation">></span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>org.springframework.http.converter.json.MappingJacksonHttpMessageConverter<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">mvc:</span>message-converters</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">mvc:</span>annotation-driven</span><span class="token punctuation">></span></span>
</code></pre>
<p>需要增加jar包</p>
<p><a href="http://central.maven.org/maven2/org/codehaus/jackson/jackson-mapper-asl/1.4.2/jackson-mapper-asl-1.4.2.jar" target="_blank" rel="external">http://central.maven.org/maven2/org/codehaus/jackson/jackson-mapper-asl/1.4.2/jackson-mapper-asl-1.4.2.jar</a><br><a href="http://central.maven.org/maven2/org/codehaus/jackson/jackson-core-asl/1.4.2/jackson-core-asl-1.4.2.jar" target="_blank" rel="external">http://central.maven.org/maven2/org/codehaus/jackson/jackson-core-asl/1.4.2/jackson-core-asl-1.4.2.jar</a></p>
<p>Maven地址</p>
<pre class=" language-xml"><code class="language-xml"><span class="token comment" spellcheck="true">&lt;!-- https://mvnrepository.com/artifact/org.codehaus.jackson/jackson-mapper-asl --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.codehaus.jackson<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>jackson-mapper-asl<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.4.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>

<span class="token comment" spellcheck="true">&lt;!-- https://mvnrepository.com/artifact/org.codehaus.jackson/jackson-core-asl --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.codehaus.jackson<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>jackson-core-asl<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.4.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>
</code></pre>
]]></content>
      
        <categories>
            
            <category> Java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
            <tag> spring </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hadoop安装配置]]></title>
      <url>/2017/03/21/Hadoop%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/</url>
      <content type="html"><![CDATA[<h3 id="安装hadoop"><a href="#安装hadoop" class="headerlink" title="安装hadoop"></a>安装hadoop</h3><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@serical01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># mkdir /serical</span>
<span class="token punctuation">[</span>root@serical01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># tar -zxvf hadoop-2.2.0.tar.gz -C /serical</span>
</code></pre>
<h3 id="修改hadoop-env-sh"><a href="#修改hadoop-env-sh" class="headerlink" title="修改hadoop-env.sh"></a>修改hadoop-env.sh</h3><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#修改/serical/hadoop-2.2.0/etc/hadoop目录下的hadoop-env.sh</span>
<span class="token punctuation">[</span>root@serical01 hadoop<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># vim hadoop-env.sh</span>
<span class="token function">export</span> JAVA_HOME<span class="token operator">=</span>/usr/java/jdk1.7.0_67
</code></pre>
<h3 id="修改core-site-xml"><a href="#修改core-site-xml" class="headerlink" title="修改core-site.xml"></a>修改core-site.xml</h3><pre class=" language-xml"><code class="language-xml">fs.defaultFS：用来指定HDFS的老大（NameNode）的地址 
hadoop.tmp.dir：用来指定hadood运行时产生文件的存放目录
#修改/serical/hadoop-2.2.0/etc/hadoop目录下的core-site.xml
[root@serical01 hadoop]# vim core-site.xml
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>fs.defaultFS<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>hdfs://serical01:9000<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>hadoop.tmp.dir<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>/serical/hadoop-2.2.0/tmp<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span>
</code></pre>
<h3 id="修改hdfs-site-xml"><a href="#修改hdfs-site-xml" class="headerlink" title="修改hdfs-site.xml"></a>修改hdfs-site.xml</h3><pre class=" language-xml"><code class="language-xml">dfs.replication：指定HDFS保存副本的数量
#修改/serical/hadoop-2.2.0/etc/hadoop目录下的hdfs-site.xml
[root@serical01 hadoop]# cat hdfs-site.xml
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>dfs.replication<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span>
</code></pre>
<h3 id="修改mapred-site-xml"><a href="#修改mapred-site-xml" class="headerlink" title="修改mapred-site.xml"></a>修改mapred-site.xml</h3><pre class=" language-xml"><code class="language-xml">mapreduce.framework.name：告诉hadoop以后mp运行在yarn上
#复制一个模板文件
[root@serical01 hadoop]# cp mapred-site.xml.template  mapred-site.xml
##修改/serical/hadoop-2.2.0/etc/hadoop目录下的mapred-site.xml
[root@serical01 hadoop]# vim mapred-site.xml
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>prperty</span><span class="token punctuation">></span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>mapreduce.framework.name<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>yarn<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span>
</code></pre>
<h3 id="修改yarn-site-xml"><a href="#修改yarn-site-xml" class="headerlink" title="修改yarn-site.xml"></a>修改yarn-site.xml</h3><pre class=" language-xml"><code class="language-xml">yarn.nodemanager.aux-services：NodeManager获取数据的方式是shuffle 
yarn.resourcemanager.hostname：指定YARN的老大（ResourceManager）的地址

#修改/serical/hadoop-2.2.0/etc/hadoop目录下的yarn-site.xml
[root@serical01 hadoop]# vim yarn-site.xml
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>
<span class="token comment" spellcheck="true">&lt;!-- Site specific YARN configuration properties --></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>yarn.nodemanager.aux-services<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>mapreduce_shuffle<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span> 
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>yarn.resourcemanager.hostname<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>serical01<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span>
</code></pre>
<h3 id="配置hadoop环境变量"><a href="#配置hadoop环境变量" class="headerlink" title="配置hadoop环境变量"></a>配置hadoop环境变量</h3><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@serical01 hadoop<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># vim /etc/profile</span>
<span class="token function">export</span> JAVA_HOME<span class="token operator">=</span>/usr/java/jdk1.7.0_67
<span class="token function">export</span> HADOOP_HOME<span class="token operator">=</span>/serical/hadoop-2.2.0
<span class="token function">export</span> PATH<span class="token operator">=</span><span class="token variable">$PATH</span><span class="token keyword">:</span><span class="token variable">$JAVA_HOME</span>/bin:<span class="token variable">$HADOOP_HOME</span>/bin                                                
<span class="token punctuation">[</span>root@serical01 hadoop<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># source /etc/profile</span>
</code></pre>
<h3 id="初始化HDFS（格式化文件系统）"><a href="#初始化HDFS（格式化文件系统）" class="headerlink" title="初始化HDFS（格式化文件系统）"></a>初始化HDFS（格式化文件系统）</h3><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#hadoop namenode -format（已过时）</span>
<span class="token comment" spellcheck="true">#格式化文件系统</span>
<span class="token punctuation">[</span>root@serical01 bin<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># hdfs namenode -format</span>
</code></pre>
<h3 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h3><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#./start-all.sh过时的</span>
<span class="token punctuation">[</span>root@serical01 sbin<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ./start-dfs.sh</span>
<span class="token punctuation">[</span>root@serical01 sbin<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ./start-yarn.sh</span>
</code></pre>
<p>HDFS管理地址：<a href="http://192.168.8.88:50070" target="_blank" rel="external">192.168.8.88:50070</a><br><br>YARN管理地址：<a href="http://192.168.8.88:8088" target="_blank" rel="external">192.168.8.88:8088</a></p>
<h3 id="测试HDFS"><a href="#测试HDFS" class="headerlink" title="测试HDFS"></a>测试HDFS</h3><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#上传文件到hdfs</span>
<span class="token punctuation">[</span>root@serical01 serical<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># hdfs fs -put ~/jdk-7u67-linux-x64.gz hdfs://serical01:9000/jdk</span>
<span class="token comment" spellcheck="true">#下载hdfs文件</span>
<span class="token punctuation">[</span>root@serical01 serical<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># hdfs fs -get hdfs://serical01:9000/jdk ~/jdk1.7</span>
<span class="token comment" spellcheck="true">#Mapreduce的wordcount实例</span>
<span class="token punctuation">[</span>root@serical01 mapreduce<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># hadoop jar hadoop-mapreduce-examples-2.2.0.jar wordcount hdfs://serical01:9000/words hdfs://serical01:9000/wcout</span>
<span class="token comment" spellcheck="true">#ls命令</span>
<span class="token punctuation">[</span>root@serical01 mapreduce<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># hadoop fs -ls hdfs://serical01:9000/</span>
</code></pre>
<h3 id="SSH免登陆配置"><a href="#SSH免登陆配置" class="headerlink" title="SSH免登陆配置"></a>SSH免登陆配置</h3><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#/root/.ssh目录下，生成秘钥</span>
<span class="token punctuation">[</span>root@serical01 .ssh<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ssh-keygen -t rsa</span>
<span class="token comment" spellcheck="true">#将公钥添加到认证key上，即可免登录（authorized_keys不能写错）</span>
<span class="token punctuation">[</span>root@serical01 .ssh<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># cp id_rsa.pub authorized_keys</span>
<span class="token comment" spellcheck="true">#将192.168.8.88的公钥添加到192.168.8.89的authorized_keys上，即可实现88登录89免登录</span>
<span class="token punctuation">[</span>root@serical01 .ssh<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ssh-copy-id 192.168.8.89</span>
</code></pre>
]]></content>
      
        <categories>
            
            <category> Hadoop </category>
            
        </categories>
        
        
        <tags>
            
            <tag> hadoop </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Java的clone方法]]></title>
      <url>/2017/03/21/Java%E7%9A%84clone%E6%96%B9%E6%B3%95/</url>
      <content type="html"><![CDATA[<pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">;</span>

<span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Arrays<span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test</span> <span class="token punctuation">{</span>

    <span class="token keyword">class</span> <span class="token class-name">Person</span> <span class="token keyword">implements</span> <span class="token class-name">Cloneable</span> <span class="token punctuation">{</span>
        <span class="token keyword">private</span> <span class="token keyword">int</span> id<span class="token punctuation">;</span>
        <span class="token keyword">private</span> String name<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> ints<span class="token punctuation">;</span>

        <span class="token keyword">public</span> <span class="token function">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">getInts</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> ints<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setInts</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> ints<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>ints <span class="token operator">=</span> ints<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> id<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setId</span><span class="token punctuation">(</span><span class="token keyword">int</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>id <span class="token operator">=</span> id<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> String <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> name<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setName</span><span class="token punctuation">(</span>String name<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>


        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> String <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token string">"Person [id="</span> <span class="token operator">+</span> id <span class="token operator">+</span> <span class="token string">", name="</span> <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token string">", ints="</span>
                    <span class="token operator">+</span> Arrays<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>ints<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"]"</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">protected</span> Object <span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> CloneNotSupportedException <span class="token punctuation">{</span>
            <span class="token comment" spellcheck="true">// 浅复制直接返回super.close()</span>
            <span class="token keyword">return</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment" spellcheck="true">/* Person p = (Person) super.clone();
            // 深度复制需要每个引用成员都要复制,这里string并没有实现Cloneable接口
            // 使用起来基本没影响，或者暂时还不知道，但需要注意，
            // 使用时可能是自定义bean，可以实现Cloneable接口
            p.name = (String) name.clone();
            return p;*/</span>
        <span class="token punctuation">}</span>

    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        Person p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        String a <span class="token operator">=</span> <span class="token string">"name"</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> ints <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token number">100</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
        p<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        p<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>
        p<span class="token punctuation">.</span><span class="token function">setInts</span><span class="token punctuation">(</span>ints<span class="token punctuation">)</span><span class="token punctuation">;</span>
        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment" spellcheck="true">// 修改值后p2会变</span>
        p<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment" spellcheck="true">// 复制引用</span>
        Person p2 <span class="token operator">=</span> p<span class="token punctuation">;</span>
        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>p2 <span class="token operator">==</span> p<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment" spellcheck="true">// 复制对象</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            Person p3 <span class="token operator">=</span> <span class="token punctuation">(</span>Person<span class="token punctuation">)</span> p<span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>p3 <span class="token operator">==</span> p<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment" spellcheck="true">// 浅复制，string类型的还是同一个</span>
            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>p3<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> p<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>p3<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span><span class="token string">"--"</span><span class="token operator">+</span>p<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>p3<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span><span class="token string">"--"</span><span class="token operator">+</span>p<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment" spellcheck="true">// 修改p的非引用类型值，不会影响p3的值</span>
            a <span class="token operator">=</span> <span class="token string">"name name"</span><span class="token punctuation">;</span>
            <span class="token comment" spellcheck="true">// 修改p的引用类型值，会影响p3的值</span>
            ints<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">31</span><span class="token punctuation">;</span>
            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span>
            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>p3<span class="token punctuation">)</span><span class="token punctuation">;</span>
            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>p3<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> p<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>p3<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> p<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>p3<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span><span class="token string">"--"</span><span class="token operator">+</span>p<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>p3<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span><span class="token string">"--"</span><span class="token operator">+</span>p<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">CloneNotSupportedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre>
<h3 id="浅复制console输出"><a href="#浅复制console输出" class="headerlink" title="浅复制console输出"></a>浅复制console输出</h3><pre><code>Person [id=1, name=name, ints=[100]]
Person [id=2, name=name, ints=[100]]
true
false
true
3373707--3373707
name--name
Person [id=2, name=name, ints=[310]]
Person [id=2, name=name, ints=[310]]
true
true
3373707--3373707
name--name
</code></pre><p>详情见这里<br><a href="http://www.2cto.com/kf/201401/273852.html" target="_blank" rel="external">http://www.2cto.com/kf/201401/273852.html</a></p>
<h3 id="深度复制另一个解决办法"><a href="#深度复制另一个解决办法" class="headerlink" title="深度复制另一个解决办法"></a>深度复制另一个解决办法</h3><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">;</span>

<span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>ByteArrayInputStream<span class="token punctuation">;</span>
<span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>ByteArrayOutputStream<span class="token punctuation">;</span>
<span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>ObjectInputStream<span class="token punctuation">;</span>
<span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>ObjectOutputStream<span class="token punctuation">;</span>
<span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>Serializable<span class="token punctuation">;</span>
<span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Arrays<span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test</span> <span class="token keyword">implements</span> <span class="token class-name">Serializable</span><span class="token punctuation">{</span>

    <span class="token keyword">class</span> <span class="token class-name">Person</span> <span class="token keyword">implements</span> <span class="token class-name">Serializable</span><span class="token punctuation">{</span>
        <span class="token keyword">private</span> <span class="token keyword">int</span> age<span class="token punctuation">;</span>
        <span class="token keyword">private</span> String name<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> ints<span class="token punctuation">;</span>

        <span class="token keyword">public</span> <span class="token function">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> age<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setAge</span><span class="token punctuation">(</span><span class="token keyword">int</span> age<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> String <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> name<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setName</span><span class="token punctuation">(</span>String name<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">getInts</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> ints<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setInts</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> ints<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>ints <span class="token operator">=</span> ints<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> String <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token string">"Person [age="</span> <span class="token operator">+</span> age <span class="token operator">+</span> <span class="token string">", name="</span> <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token string">", ints="</span>
                    <span class="token operator">+</span> Arrays<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>ints<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"]"</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

    <span class="token punctuation">}</span>

    <span class="token comment" spellcheck="true">/**
     * 深度复制方法
     * @方法名:deepClone 
     * @参数 @param p
     * @参数 @return
     * @参数 @throws Exception  
     * @返回类型 Object
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> Object <span class="token function">deepClone</span><span class="token punctuation">(</span>Person p<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>
        ByteArrayOutputStream bout <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ByteArrayOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        ObjectOutputStream out <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ObjectOutputStream</span><span class="token punctuation">(</span>bout<span class="token punctuation">)</span><span class="token punctuation">;</span>
        out<span class="token punctuation">.</span><span class="token function">writeObject</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span>

        ByteArrayInputStream sin <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ByteArrayInputStream</span><span class="token punctuation">(</span>bout<span class="token punctuation">.</span><span class="token function">toByteArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        ObjectInputStream in <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ObjectInputStream</span><span class="token punctuation">(</span>sin<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> in<span class="token punctuation">.</span><span class="token function">readObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>
        Person p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        p<span class="token punctuation">.</span><span class="token function">setAge</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        p<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> ints <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token number">100</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
        p<span class="token punctuation">.</span><span class="token function">setInts</span><span class="token punctuation">(</span>ints<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment" spellcheck="true">// 复制前</span>
        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment" spellcheck="true">// 复制后</span>
        Person p1 <span class="token operator">=</span> <span class="token punctuation">(</span>Person<span class="token punctuation">)</span> <span class="token function">deepClone</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span>
        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>p1<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment" spellcheck="true">// 修改引用类型值</span>
        ints<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">31</span><span class="token punctuation">;</span>
        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment" spellcheck="true">// 只有直接引用的p改变了,p1没有改变</span>
        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>p1<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre>
<pre><code>console输出
Person [age=30, name=name, ints=[100]]
Person [age=30, name=name, ints=[100]]
Person [age=30, name=name, ints=[31]]
Person [age=30, name=name, ints=[100]]
</code></pre>]]></content>
      
        <categories>
            
            <category> Java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
            <tag> clone </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Java守护线程]]></title>
      <url>/2017/03/21/Java%E5%AE%88%E6%8A%A4%E7%BA%BF%E7%A8%8B/</url>
      <content type="html"><![CDATA[<h3 id="守护线程"><a href="#守护线程" class="headerlink" title="守护线程"></a>守护线程</h3><ol>
<li>必须在start方法之前；</li>
<li>如果线程为守护线程，随着主线程结束而结束</li>
</ol>
<pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        DaemonThread t <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DaemonThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        t<span class="token punctuation">.</span><span class="token function">setDaemon</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        t<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            Thread<span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment" spellcheck="true">// 监听jvm退出</span>
            Runtime<span class="token punctuation">.</span><span class="token function">getRuntime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addShutdownHook</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token annotation punctuation">@Override</span>
                <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"jvm exit"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">DaemonThread</span> <span class="token keyword">extends</span> <span class="token class-name">Thread</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment" spellcheck="true">// 无限循环</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"deamon thread is runing"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                Thread<span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre>
<p>Console打印</p>
<pre class=" language-java"><code class="language-java">deamon thread is runing
deamon thread is runing
deamon thread is runing
deamon thread is runing
deamon thread is runing
jvm exit
</code></pre>
]]></content>
      
        <categories>
            
            <category> Java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
            <tag> daemon </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Easyui特殊应用]]></title>
      <url>/2017/03/21/Easyui%E7%89%B9%E6%AE%8A%E5%BA%94%E7%94%A8/</url>
      <content type="html"><![CDATA[<h3 id="取当前页page，rows"><a href="#取当前页page，rows" class="headerlink" title="取当前页page，rows"></a>取当前页page，rows</h3><pre class=" language-js"><code class="language-js"><span class="token keyword">var</span> page <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#dg"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">datagrid</span><span class="token punctuation">(</span><span class="token string">"getPager"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">data</span><span class="token punctuation">(</span><span class="token string">"pagination"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>options<span class="token punctuation">;</span>
param<span class="token punctuation">.</span>page <span class="token operator">=</span> page<span class="token punctuation">.</span>pageNumber<span class="token punctuation">;</span>
param<span class="token punctuation">.</span>rows <span class="token operator">=</span> page<span class="token punctuation">.</span>pageSize<span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">// 第二种</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#dg"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">datagrid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">data</span><span class="token punctuation">(</span><span class="token string">"datagrid"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>options<span class="token punctuation">.</span>pageSize
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#dg"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">datagrid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">data</span><span class="token punctuation">(</span><span class="token string">"datagrid"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>options<span class="token punctuation">.</span>pageNumber
</code></pre>
<h3 id="easyui遮罩层"><a href="#easyui遮罩层" class="headerlink" title="easyui遮罩层"></a>easyui遮罩层</h3><pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">/**处理等待  */</span>
<span class="token keyword">function</span> <span class="token function">onLoading</span><span class="token punctuation">(</span>divId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> offset <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span>divId<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">offset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"&lt;div class='datagrid-mask'>&lt;/div>"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        display <span class="token punctuation">:</span> <span class="token string">"block"</span><span class="token punctuation">,</span>
        width <span class="token punctuation">:</span> <span class="token function">$</span><span class="token punctuation">(</span>divId<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        height <span class="token punctuation">:</span> <span class="token function">$</span><span class="token punctuation">(</span>divId<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">height</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        left<span class="token punctuation">:</span> offset<span class="token punctuation">.</span>left<span class="token punctuation">,</span>
        top<span class="token punctuation">:</span> offset<span class="token punctuation">.</span>top
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">appendTo</span><span class="token punctuation">(</span>divId<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"&lt;div class='datagrid-mask-msg'>&lt;/div>"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span><span class="token string">"正在处理中，不要重复点击导出，请稍候..."</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">appendTo</span><span class="token punctuation">(</span>divId<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
            display <span class="token punctuation">:</span> <span class="token string">"block"</span><span class="token punctuation">,</span>
            left <span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span>body<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">outerWidth</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">190</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span>
            top <span class="token punctuation">:</span> offset<span class="token punctuation">.</span>top <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span>divId<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">height</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">45</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment" spellcheck="true">/**移除等待  */</span>
<span class="token keyword">function</span> <span class="token function">removeLoad</span><span class="token punctuation">(</span>divId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment" spellcheck="true">//console.info($(divId+" .datagrid-mask"));</span>
    <span class="token function">$</span><span class="token punctuation">(</span>divId<span class="token operator">+</span><span class="token string">" .datagrid-mask"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">$</span><span class="token punctuation">(</span>divId<span class="token operator">+</span><span class="token string">" .datagrid-mask-msg"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment" spellcheck="true">//$(divId+" .time-item").css("visibility", "visible");</span>
    <span class="token function">$</span><span class="token punctuation">(</span>divId<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">"visibility"</span><span class="token punctuation">,</span> <span class="token string">"visible"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
<h3 id="考试右上角时间一直跟随滚动"><a href="#考试右上角时间一直跟随滚动" class="headerlink" title="考试右上角时间一直跟随滚动"></a>考试右上角时间一直跟随滚动</h3><pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">/**滚动事件  */</span>
<span class="token keyword">function</span> <span class="token function">scrollEvent</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> top <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">".time-item"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">offset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>top <span class="token operator">+</span> <span class="token number">28</span><span class="token punctuation">;</span>
    <span class="token comment" spellcheck="true">// 设置倒计时left</span>
    <span class="token keyword">var</span> width <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span>window<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token number">320</span> <span class="token operator">+</span> <span class="token string">"px"</span><span class="token punctuation">;</span>
    <span class="token comment" spellcheck="true">// 动态设置绝对位置,整个div才可见</span>
    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">".time-item"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">"position"</span><span class="token punctuation">:</span><span class="token string">"absolute"</span><span class="token punctuation">,</span><span class="token string">"top"</span><span class="token punctuation">:</span><span class="token string">"28px"</span><span class="token punctuation">,</span> <span class="token string">"left"</span><span class="token punctuation">:</span>width<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token function">$</span><span class="token punctuation">(</span>window<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">scroll</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> offsetTop <span class="token operator">=</span> top <span class="token operator">+</span> <span class="token function">$</span><span class="token punctuation">(</span>window<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">scrollTop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"px"</span><span class="token punctuation">;</span>
        <span class="token comment" spellcheck="true">// 动画效果</span>
        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">".time-item"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">animate</span><span class="token punctuation">(</span><span class="token punctuation">{</span>top <span class="token punctuation">:</span> offsetTop <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span>duration<span class="token punctuation">:</span><span class="token number">600</span><span class="token punctuation">,</span> queue<span class="token punctuation">:</span><span class="token boolean">false</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token comment" spellcheck="true">// 无动画效果</span>
        <span class="token comment" spellcheck="true">//$(".time-item").css({"position":"absolute","left":width,"top":offsetTop});</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
jquery <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"t1"</span> data<span class="token operator">-</span>test<span class="token operator">=</span><span class="token string">"test111"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>
<span class="token comment" spellcheck="true">// 打印test111</span>
console<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#t1"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">data</span><span class="token punctuation">(</span><span class="token string">"test"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           
console<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span>$<span class="token punctuation">.</span><span class="token function">data</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#t1"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">"test"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#t1"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">data</span><span class="token punctuation">(</span><span class="token string">"a"</span><span class="token punctuation">,</span> <span class="token string">"b"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           
<span class="token comment" spellcheck="true">// 打印b</span>
console<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#t1"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">data</span><span class="token punctuation">(</span><span class="token string">"a"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre>
]]></content>
      
        <categories>
            
            <category> 前端 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> easyui </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Git修改历史提交email]]></title>
      <url>/2017/03/21/Git%E4%BF%AE%E6%94%B9%E5%8E%86%E5%8F%B2%E6%8F%90%E4%BA%A4email/</url>
      <content type="html"><![CDATA[<h3 id="修改提交信息"><a href="#修改提交信息" class="headerlink" title="修改提交信息"></a>修改提交信息</h3><pre class=" language-bash"><code class="language-bash"><span class="token function">git</span> filter-branch -f --env-filter <span class="token string">"GIT_AUTHOR_NAME='serical'; GIT_AUTHOR_EMAIL='raoserical@gmail.com'; GIT_COMMITTER_NAME='serical'; GIT_COMMITTER_EMAIL='614235037@qq.com';"</span> HEAD
    GIT_AUTHOR_NAME<span class="token operator">=</span><span class="token string">'serical'</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">#新用户名</span>
    GIT_AUTHOR_EMAIL<span class="token operator">=</span><span class="token string">'raoserical@gmail.com'</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">#新邮箱</span>
    GIT_COMMITTER_NAME<span class="token operator">=</span><span class="token string">'serical'</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">#老用户名</span>
    GIT_COMMITTER_EMAIL<span class="token operator">=</span><span class="token string">'614235037@qq.com'</span><span class="token punctuation">;</span>" <span class="token comment" spellcheck="true">#老邮箱</span>
</code></pre>
<h3 id="push到远程仓库"><a href="#push到远程仓库" class="headerlink" title="push到远程仓库"></a>push到远程仓库</h3><pre class=" language-bash"><code class="language-bash"><span class="token function">git</span> push --force --tags origin <span class="token string">'refs/heads/*'</span>
</code></pre>
<h3 id="当上面的push-不上去的时候，先-git-pull-确保最新代码，Gitlab的分支保护，在项目设置菜单下面的Protected-branches"><a href="#当上面的push-不上去的时候，先-git-pull-确保最新代码，Gitlab的分支保护，在项目设置菜单下面的Protected-branches" class="headerlink" title="当上面的push 不上去的时候，先 git pull 确保最新代码，Gitlab的分支保护，在项目设置菜单下面的Protected branches"></a>当上面的<code>push</code> 不上去的时候，先 <code>git pull</code> 确保最新代码，<code>Gitlab</code>的分支保护，在项目设置菜单下面的<code>Protected branches</code></h3><pre class=" language-bash"><code class="language-bash"><span class="token function">git</span> pull  --allow-unrelated-histories
<span class="token comment" spellcheck="true"># 或者指定分枝</span>
<span class="token function">git</span> pull origin master ----allow-unrelated-histories
</code></pre>
]]></content>
      
        <categories>
            
            <category> Git </category>
            
        </categories>
        
        
        <tags>
            
            <tag> git </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Java对象初始化顺序]]></title>
      <url>/2017/03/21/Java%E5%AF%B9%E8%B1%A1%E5%88%9D%E5%A7%8B%E5%8C%96%E9%A1%BA%E5%BA%8F/</url>
      <content type="html"><![CDATA[<h3 id="例子一"><a href="#例子一" class="headerlink" title="例子一"></a>例子一</h3><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> Test t1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Test</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> Test t2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Test</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token function">Test</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"构造方法"</span> <span class="token operator">+</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token punctuation">{</span>
        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"构造块"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">static</span> <span class="token punctuation">{</span>
        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"静态块"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"start"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">new</span> <span class="token class-name">Test</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"end"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment" spellcheck="true">// 输出：</span>
构造块
构造方法<span class="token number">1</span>
构造块
构造方法<span class="token number">2</span>
静态块
start
构造块
构造方法<span class="token number">3</span>
end
</code></pre>
<p><strong>所有static的执行顺序为从上到下</strong></p>
<p><a href="http://blog.csdn.net/lanxuezaipiao/article/details/16753743" target="_blank" rel="external">http://blog.csdn.net/lanxuezaipiao/article/details/16753743</a></p>
<p><a href="http://liujiacai.net/blog/2014/07/12/order-of-initialization-in-java/" target="_blank" rel="external">http://liujiacai.net/blog/2014/07/12/order-of-initialization-in-java/</a></p>
<p><a href="http://www.importnew.com/21832.html" target="_blank" rel="external">http://www.importnew.com/21832.html</a></p>
]]></content>
      
        <categories>
            
            <category> Java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Java缓存实现]]></title>
      <url>/2017/03/21/Java%E7%BC%93%E5%AD%98%E5%AE%9E%E7%8E%B0/</url>
      <content type="html"><![CDATA[<h3 id="问题背景"><a href="#问题背景" class="headerlink" title="问题背景"></a>问题背景</h3><p>由于报表需要长时间的查询展现，无疑是个致命的客户体验。</p>
<h3 id="初步思路"><a href="#初步思路" class="headerlink" title="初步思路"></a>初步思路</h3><p>用<code>key-value</code>数据库<code>redis</code>做缓存，查询过的结果缓存到<code>redis</code>中，同样的条件查询时直接去<code>redis</code>中读取缓存数据展现即可。<br>初步想法：使用<code>Java</code>自定义注解实现，通过<code>Spring-AOP</code>处理缓存逻辑。</p>
<p>自定义注解</p>
<pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Target</span><span class="token punctuation">(</span><span class="token punctuation">{</span>ElementType<span class="token punctuation">.</span>METHOD<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@Retention</span><span class="token punctuation">(</span>RetentionPolicy<span class="token punctuation">.</span>RUNTIME<span class="token punctuation">)</span>
<span class="token keyword">public</span> @<span class="token keyword">interface</span> <span class="token class-name">AutoCache</span> <span class="token punctuation">{</span>

<span class="token punctuation">}</span>
</code></pre>
<p>Spring-AOP实现</p>
<pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Aspect</span>
<span class="token annotation punctuation">@Component</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SystemCacheAspect</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Resource</span>
    <span class="token keyword">private</span> JedisPool jedisPool<span class="token punctuation">;</span> 

    <span class="token annotation punctuation">@Pointcut</span><span class="token punctuation">(</span><span class="token string">"@annotation(com.cache.annotation.AutoCache)"</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">pointCut</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Before</span><span class="token punctuation">(</span><span class="token string">"pointCut()"</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">doBefore</span><span class="token punctuation">(</span>JoinPoint jp<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"doBefore..."</span> <span class="token operator">+</span> jp<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Around</span><span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token string">"pointCut()"</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> Object <span class="token function">doAround</span><span class="token punctuation">(</span>ProceedingJoinPoint pjp<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>pjp<span class="token punctuation">.</span><span class="token function">getKind</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>pjp<span class="token punctuation">.</span><span class="token function">getTarget</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>pjp<span class="token punctuation">.</span><span class="token function">getThis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>pjp<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>pjp<span class="token punctuation">.</span><span class="token function">getSignature</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDeclaringTypeName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>pjp<span class="token punctuation">.</span><span class="token function">getSignature</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>pjp<span class="token punctuation">.</span><span class="token function">getSourceLocation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>pjp<span class="token punctuation">.</span><span class="token function">getStaticPart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"doAround start "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        Object result <span class="token operator">=</span> null<span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token function">genearteCacheKey</span><span class="token punctuation">(</span>pjp<span class="token punctuation">.</span><span class="token function">getArgs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            result <span class="token operator">=</span> pjp<span class="token punctuation">.</span><span class="token function">proceed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            result <span class="token operator">=</span> <span class="token string">"{\"total\":0,\"rows\":[]}"</span><span class="token punctuation">;</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"doAround end "</span> <span class="token operator">+</span> result<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> result<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment" spellcheck="true">/**
     * 根据参数值生成唯一缓存key
     * @方法名:genearteCacheKey 
     * @参数 @param objs
     * @参数 @return
     * @参数 @throws Exception  
     * @返回类型 String
     */</span>
    <span class="token keyword">private</span> String <span class="token function">genearteCacheKey</span><span class="token punctuation">(</span>Object<span class="token punctuation">[</span><span class="token punctuation">]</span> objs<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>
        StringBuffer cacheKey <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>null <span class="token operator">!=</span> objs <span class="token operator">&amp;&amp;</span> objs<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span>Object obj <span class="token operator">:</span> objs<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                BeanInfo beanInfo <span class="token operator">=</span> Introspector<span class="token punctuation">.</span><span class="token function">getBeanInfo</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                PropertyDescriptor<span class="token punctuation">[</span><span class="token punctuation">]</span> properties <span class="token operator">=</span> beanInfo<span class="token punctuation">.</span><span class="token function">getPropertyDescriptors</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">for</span> <span class="token punctuation">(</span>PropertyDescriptor desc <span class="token operator">:</span> properties<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>StringUtils<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">"class"</span><span class="token punctuation">,</span> desc<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        String value <span class="token operator">=</span> BeanUtils<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span>
                                desc<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">if</span> <span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            cacheKey<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> cacheKey<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@After</span><span class="token punctuation">(</span><span class="token string">"pointCut()"</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">doAfter</span><span class="token punctuation">(</span>JoinPoint jp<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"doAfter..."</span> <span class="token operator">+</span> jp<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@AfterReturning</span><span class="token punctuation">(</span>pointcut<span class="token operator">=</span><span class="token string">"pointCut()"</span><span class="token punctuation">,</span> argNames<span class="token operator">=</span><span class="token string">"result"</span><span class="token punctuation">,</span> returning<span class="token operator">=</span><span class="token string">"result"</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">doAfterReturn</span><span class="token punctuation">(</span>JoinPoint jp<span class="token punctuation">,</span> Object reuslt<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"AfterReturning resutl :"</span> <span class="token operator">+</span> reuslt<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@AfterThrowing</span><span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token string">"pointCut()"</span><span class="token punctuation">,</span> throwing<span class="token operator">=</span><span class="token string">"e"</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">doAfterThrowing</span><span class="token punctuation">(</span>JoinPoint jp<span class="token punctuation">,</span> Throwable e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"doAfterThrowing..."</span> <span class="token operator">+</span> jp<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre>
<p>Spring配置文件</p>
<pre class=" language-xml"><code class="language-xml"><span class="token comment" spellcheck="true">&lt;!-- 缓存AOP配置 --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">aop:</span>aspectj-autoproxy</span> <span class="token attr-name">proxy-target-class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
</code></pre>
<p>碰到问题如下：</p>
<ul>
<li>缺少jar包：aspectjrt-1.6.9.jar，aspectjweaver-1.6.9.jar，去<a href="http://cn.jarfire.org/" target="_blank" rel="external">http://cn.jarfire.org/</a> 查找下载即可</li>
<li>@AfterReturning写法：<pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@AfterReturning</span>正确写法，<span class="token number">3</span>个必须都要有
<span class="token annotation punctuation">@AfterReturning</span><span class="token punctuation">(</span>pointcut<span class="token operator">=</span><span class="token string">"pointCut()"</span><span class="token punctuation">,</span> argNames<span class="token operator">=</span><span class="token string">"result"</span><span class="token punctuation">,</span> returning<span class="token operator">=</span><span class="token string">"result"</span><span class="token punctuation">)</span>
缺少returning<span class="token operator">=</span><span class="token string">"result"</span>错误如下：
java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>IllegalArgumentException<span class="token operator">:</span> error at <span class="token operator">:</span><span class="token operator">:</span><span class="token number">0</span> formal unbound in pointcut 
缺少argNames<span class="token operator">=</span><span class="token string">"result"</span>错误如下：
java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>IllegalStateException<span class="token operator">:</span> Returning argument name <span class="token string">'result'</span> was not bound in advice arguments
</code></pre>
</li>
</ul>
<p>AOP实现类中的执行顺序：</p>
<pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">// 未抛出Exception时</span>
doAround start 
doBefore<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token function">execution</span><span class="token punctuation">(</span>Object com<span class="token punctuation">.</span>power<span class="token punctuation">.</span>bank<span class="token punctuation">.</span>khjldj<span class="token punctuation">.</span>cl<span class="token punctuation">.</span>action<span class="token punctuation">.</span>OperateItemAction<span class="token punctuation">.</span><span class="token function">getOperateItemInfo</span><span class="token punctuation">(</span>ColumnParamBean<span class="token punctuation">)</span><span class="token punctuation">)</span>
doAround end <span class="token punctuation">{</span><span class="token string">"total"</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token string">"rows"</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span>
doAfter<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token function">execution</span><span class="token punctuation">(</span>Object com<span class="token punctuation">.</span>power<span class="token punctuation">.</span>bank<span class="token punctuation">.</span>khjldj<span class="token punctuation">.</span>cl<span class="token punctuation">.</span>action<span class="token punctuation">.</span>OperateItemAction<span class="token punctuation">.</span><span class="token function">getOperateItemInfo</span><span class="token punctuation">(</span>ColumnParamBean<span class="token punctuation">)</span><span class="token punctuation">)</span>
AfterReturning resutl <span class="token operator">:</span><span class="token punctuation">{</span><span class="token string">"total"</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token string">"rows"</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span>
</code></pre>
<p>// 抛出Exception时</p>
<pre class=" language-java"><code class="language-java">doAround start 
doBefore<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token function">execution</span><span class="token punctuation">(</span>Object com<span class="token punctuation">.</span>power<span class="token punctuation">.</span>bank<span class="token punctuation">.</span>khjldj<span class="token punctuation">.</span>cl<span class="token punctuation">.</span>action<span class="token punctuation">.</span>OperateItemAction<span class="token punctuation">.</span><span class="token function">getOperateItemInfo</span><span class="token punctuation">(</span>ColumnParamBean<span class="token punctuation">)</span><span class="token punctuation">)</span>
doAfter<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token function">execution</span><span class="token punctuation">(</span>Object com<span class="token punctuation">.</span>power<span class="token punctuation">.</span>bank<span class="token punctuation">.</span>khjldj<span class="token punctuation">.</span>cl<span class="token punctuation">.</span>action<span class="token punctuation">.</span>OperateItemAction<span class="token punctuation">.</span><span class="token function">getOperateItemInfo</span><span class="token punctuation">(</span>ColumnParamBean<span class="token punctuation">)</span><span class="token punctuation">)</span>
doAfterThrowing<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token function">execution</span><span class="token punctuation">(</span>Object com<span class="token punctuation">.</span>power<span class="token punctuation">.</span>bank<span class="token punctuation">.</span>khjldj<span class="token punctuation">.</span>cl<span class="token punctuation">.</span>action<span class="token punctuation">.</span>OperateItemAction<span class="token punctuation">.</span><span class="token function">getOperateItemInfo</span><span class="token punctuation">(</span>ColumnParamBean<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre>
]]></content>
      
        <categories>
            
            <category> Java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
            <tag> cache </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hadoop学习笔记3.20]]></title>
      <url>/2017/03/20/Hadoop%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B03.20/</url>
      <content type="html"><![CDATA[<h2 id="一、环境"><a href="#一、环境" class="headerlink" title="一、环境"></a>一、环境</h2><p><a href="http://www.apache.org/dyn/closer.cgi/hadoop/common/hadoop-2.7.3/hadoop-2.7.3.tar.gz" target="_blank" rel="external"><code>hadoop-2.7.3.tar.gz</code></a><br><br><a href="http://download.oracle.com/otn-pub/java/jdk/8u121-b13/e9e7ea248e2c4826b92b3f075a80e441/jdk-8u121-linux-x64.tar.gz" target="_blank" rel="external"><code>jdk-8u121-linux-x64.tar.gz</code></a><br><br><a href="http://vault.centos.org/7.2.1511/isos/x86_64/CentOS-7-x86_64-DVD-1511.iso" target="_blank" rel="external"><code>CentOS-7-x86_64-DVD-1511.iso</code></a><br><br><code>VMware Workstation 11.0</code>、<code>xshell</code>、<code>xftp</code><br><br>使用VMware虚拟4台centos，结构如下：<br><br><code>master</code>  <code>192.168.8.8</code><br><br><code>slave1</code>  <code>192.168.8.10</code><br><br><code>slave2</code>  <code>192.168.8.11</code><br><br><code>slave3</code>  <code>192.168.8.12</code><br></p>
<h2 id="二、环境搭建"><a href="#二、环境搭建" class="headerlink" title="二、环境搭建"></a>二、环境搭建</h2><h3 id="配置网络"><a href="#配置网络" class="headerlink" title="配置网络"></a>配置网络</h3><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@master ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># vim /etc/sysconfig/network-scripts/ifcfg-eno16777736 </span>
TYPE<span class="token operator">=</span>Ethernet
IPADDR<span class="token operator">=</span>192.168.8.8
NETMASK<span class="token operator">=</span>255.255.255.0

<span class="token punctuation">[</span>root@master ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># vim /etc/sysconfig/network</span>
<span class="token comment" spellcheck="true"># Created by anaconda</span>
<span class="token comment" spellcheck="true"># NETWORKING=YES</span>
<span class="token comment" spellcheck="true"># GATEWAY=192.168.8.1</span>
</code></pre>
<h3 id="禁用防火墙"><a href="#禁用防火墙" class="headerlink" title="禁用防火墙"></a>禁用防火墙</h3><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@master ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># systemctl disable firewalld</span>
</code></pre>
<h3 id="配置主机名"><a href="#配置主机名" class="headerlink" title="配置主机名"></a>配置主机名</h3><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@master ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># hostnamectl set-hostname master</span>
</code></pre>
<h3 id="配置hosts"><a href="#配置hosts" class="headerlink" title="配置hosts"></a>配置hosts</h3><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@master ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># vim /etc/hosts</span>
127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4
::1         localhost localhost.localdomain localhost6 localhost6.localdomain6
192.168.8.8 master
192.168.8.10 slave1
192.168.8.11 slave2
192.168.8.12 slave3
</code></pre>
<h3 id="解压hadoop-jdk配置环境变量"><a href="#解压hadoop-jdk配置环境变量" class="headerlink" title="解压hadoop,jdk配置环境变量"></a>解压hadoop,jdk配置环境变量</h3><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@master local<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># tar -zxvf hadoop-2.7.3.tar.gz</span>
<span class="token punctuation">[</span>root@master local<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># tar -zxvf jdk-8u121-linux-x64.tar.gz</span>

<span class="token punctuation">[</span>root@master ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># vim /etc/profile</span>
<span class="token function">export</span> JAVA_HOME<span class="token operator">=</span>/usr/local/jdk
<span class="token function">export</span> CLASSPATH<span class="token operator">=</span>.:<span class="token variable">$JAVA_HOME</span>/lib
<span class="token function">export</span> PATH<span class="token operator">=</span><span class="token variable">$PATH</span><span class="token keyword">:</span><span class="token variable">$JAVA_HOME</span>/bin
<span class="token function">export</span> PATH<span class="token operator">=</span><span class="token variable">$PATH</span>:/usr/local/hadoop/bin:/usr/local/hadoop/sbin
<span class="token punctuation">[</span>root@master ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># source /etc/profile</span>
</code></pre>
<h3 id="配置hadoop"><a href="#配置hadoop" class="headerlink" title="配置hadoop"></a>配置hadoop</h3><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@master hadoop<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># vim core-site.xml</span>
<span class="token operator">&lt;</span>configuration<span class="token operator">></span>
        <span class="token operator">&lt;</span>property<span class="token operator">></span>
                <span class="token operator">&lt;</span>name<span class="token operator">></span>fs.defaultFS<span class="token operator">&lt;</span>/name<span class="token operator">></span>
                <span class="token operator">&lt;</span>value<span class="token operator">></span>hdfs://master:9000<span class="token operator">&lt;</span>/value<span class="token operator">></span>
        <span class="token operator">&lt;</span>/property<span class="token operator">></span>
<span class="token operator">&lt;</span>/configuration<span class="token operator">></span>

<span class="token punctuation">[</span>root@master hadoop<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># vim hadoop-env.sh</span>
<span class="token function">export</span> JAVA_HOME<span class="token operator">=</span>/usr/local/jdk
</code></pre>
<h3 id="NameNode"><a href="#NameNode" class="headerlink" title="NameNode"></a>NameNode</h3><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 格式化namenode</span>
<span class="token punctuation">[</span>root@master ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># hdfs namenode -format</span>
<span class="token comment" spellcheck="true"># 运行namenode</span>
<span class="token punctuation">[</span>root@master ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># hadoop-daemon.sh start namenode</span>
starting namenode, logging to /usr/local/hadoop/logs/hadoop-root-namenode-master.out
<span class="token comment" spellcheck="true"># 查看java进程</span>
<span class="token punctuation">[</span>root@master ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># jps</span>
3078 NameNode
3146 Jps
<span class="token comment" spellcheck="true"># namenode起不来，需要看日志</span>
<span class="token punctuation">[</span>root@master logs<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># more hadoop-root-namenode-master.log</span>
</code></pre>
<p>重要的信息如下：</p>
<pre class=" language-bash"><code class="language-bash">org.apache.hadoop.hdfs.server.common.InconsistentFSStateException: Directory /tmp/hadoop-root
/dfs/name is <span class="token keyword">in</span> an inconsistent state: storage directory does not exist or is not accessible.
</code></pre>
<p><code>name</code>目录不存在，创建即可，创建后需要<strong>重新格式化</strong>才能起来</p>
<h3 id="DataNode"><a href="#DataNode" class="headerlink" title="DataNode"></a>DataNode</h3><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 运行datanode</span>
<span class="token punctuation">[</span>root@slave1 hadoop<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># hadoop-daemon.sh start datanode</span>
starting datanode, logging to /usr/local/hadoop/logs/hadoop-root-datanode-slave1.out
<span class="token comment" spellcheck="true"># 查看java进程</span>
<span class="token punctuation">[</span>root@slave1 hadoop<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># jps</span>
2472 DataNode
2504 Jps
<span class="token comment" spellcheck="true"># datanode起不来，需要查看日志，原因为namenode和datanode的clusterID不相同</span>
java.io.IOException: Incompatible clusterIDs <span class="token keyword">in</span> /tmp/hadoop-root/dfs/data: 
namenode clusterID <span class="token operator">=</span> CID-e029cb6c-ef43-4a34-97a1-7ab1d2216243<span class="token punctuation">;</span> 
datanode clusterID <span class="token operator">=</span> CID-9c0d9da2-fec7-4c38-80db-1c72df152578
java.io.IOException: All specified directories are failed to load.
</code></pre>
<h3 id="修改DataNode的clusterID"><a href="#修改DataNode的clusterID" class="headerlink" title="修改DataNode的clusterID"></a>修改DataNode的clusterID</h3><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@master current<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># more /tmp/hadoop-root/dfs/name/current/VERSION </span>
<span class="token comment" spellcheck="true">#Fri Mar 24 23:03:40 CST 2017</span>
namespaceID<span class="token operator">=</span>1358526885
clusterID<span class="token operator">=</span>CID-9c0d9da2-fec7-4c38-80db-1c72df152578
cTime<span class="token operator">=</span>0
storageType<span class="token operator">=</span>NAME_NODE
blockpoolID<span class="token operator">=</span>BP-1764672276-192.168.8.8-1490367820827
layoutVersion<span class="token operator">=</span>-63

<span class="token punctuation">[</span>root@slave1 current<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># more /tmp/hadoop-root/dfs/data/current/VERSION </span>
<span class="token comment" spellcheck="true">#Fri Mar 24 23:44:08 CST 2017</span>
storageID<span class="token operator">=</span>DS-acfdf091-fb05-440b-9dcf-9b2736987b39
clusterID<span class="token operator">=</span>CID-9c0d9da2-fec7-4c38-80db-1c72df152578
cTime<span class="token operator">=</span>0
datanodeUuid<span class="token operator">=</span>ecd96d82-72c9-4216-88c3-f70d0bb442c9
storageType<span class="token operator">=</span>DATA_NODE
layoutVersion<span class="token operator">=</span>-56
</code></pre>
<p><a href="http://stackoverflow.com/questions/30521474/hadoop-hdfs-formatting-gets-error-failed-for-block-pool" target="_blank" rel="external">http://stackoverflow.com/questions/30521474/hadoop-hdfs-formatting-gets-error-failed-for-block-pool</a></p>
<h3 id="web管理界面"><a href="#web管理界面" class="headerlink" title="web管理界面"></a>web管理界面</h3><p>访问<code>master</code>地址<code>http://192.168.8.8:50070/</code> 即可</p>
]]></content>
      
        <categories>
            
            <category> Hadoop </category>
            
        </categories>
        
        
        <tags>
            
            <tag> hadoop </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Oracle存储过程和游标]]></title>
      <url>/2017/03/06/Oracle%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E5%92%8C%E6%B8%B8%E6%A0%87/</url>
      <content type="html"><![CDATA[<h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a><a href="http://www.live-in.org/archives/2171.html" target="_blank" rel="external">参考资料</a></h3><h3 id="第一种写法"><a href="#第一种写法" class="headerlink" title="第一种写法"></a>第一种写法</h3><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- CREATED ON 2016/8/26 BY SERICAL </span>
<span class="token keyword">DECLARE</span>
  <span class="token comment" spellcheck="true">-- LOCAL VARIABLES HERE</span>
  <span class="token keyword">CURSOR</span> C <span class="token operator">IS</span>
    <span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> TB_DEPT_INFO<span class="token punctuation">;</span>
  T C<span class="token operator">%</span>ROWTYPE<span class="token punctuation">;</span>
<span class="token keyword">BEGIN</span>
  <span class="token comment" spellcheck="true">-- TEST STATEMENTS HERE</span>
  <span class="token keyword">OPEN</span> C<span class="token punctuation">;</span>

  LOOP
    <span class="token keyword">FETCH</span> C <span class="token keyword">INTO</span> T<span class="token punctuation">;</span>
    <span class="token keyword">EXIT</span> <span class="token keyword">WHEN</span><span class="token punctuation">(</span>C<span class="token operator">%</span>NOTFOUND<span class="token punctuation">)</span><span class="token punctuation">;</span>
    DBMS_OUTPUT<span class="token punctuation">.</span>PUT_LINE<span class="token punctuation">(</span>T<span class="token punctuation">.</span>DEPT_CN_NAME<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">END</span> LOOP<span class="token punctuation">;</span>

  <span class="token keyword">CLOSE</span> C<span class="token punctuation">;</span>
<span class="token keyword">END</span><span class="token punctuation">;</span>
</code></pre>
<h3 id="第二种写法"><a href="#第二种写法" class="headerlink" title="第二种写法"></a>第二种写法</h3><pre class=" language-sql"><code class="language-sql"><span class="token keyword">DECLARE</span>

  <span class="token keyword">CURSOR</span> C <span class="token operator">IS</span>
    <span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> TB_DEPT_INFO<span class="token punctuation">;</span>
  T C<span class="token operator">%</span>ROWTYPE<span class="token punctuation">;</span>
<span class="token keyword">BEGIN</span>
  <span class="token keyword">OPEN</span> C<span class="token punctuation">;</span>

  <span class="token keyword">FETCH</span> C <span class="token keyword">INTO</span> T<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">-- 第一处</span>
  <span class="token keyword">WHILE</span> <span class="token punctuation">(</span>C<span class="token operator">%</span>FOUND<span class="token punctuation">)</span> LOOP
    DBMS_OUTPUT<span class="token punctuation">.</span>PUT_LINE<span class="token punctuation">(</span>T<span class="token punctuation">.</span>DEPT_CN_NAME<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">FETCH</span> C <span class="token keyword">INTO</span> T<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">-- 第二处</span>
  <span class="token keyword">END</span> LOOP<span class="token punctuation">;</span>

  <span class="token keyword">CLOSE</span> C<span class="token punctuation">;</span>
<span class="token keyword">END</span><span class="token punctuation">;</span>
</code></pre>
<h3 id="第三种写法"><a href="#第三种写法" class="headerlink" title="第三种写法"></a>第三种写法</h3><pre class=" language-sql"><code class="language-sql"><span class="token keyword">DECLARE</span>

  <span class="token keyword">CURSOR</span> C <span class="token operator">IS</span>
    <span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> TB_DEPT_INFO<span class="token punctuation">;</span>
  T C<span class="token operator">%</span>ROWTYPE<span class="token punctuation">;</span>
<span class="token keyword">BEGIN</span>
  <span class="token keyword">FOR</span> T <span class="token operator">IN</span> C LOOP
    DBMS_OUTPUT<span class="token punctuation">.</span>put_line<span class="token punctuation">(</span>T<span class="token punctuation">.</span>DEPT_CN_NAME<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">END</span> LOOP<span class="token punctuation">;</span>
<span class="token keyword">END</span><span class="token punctuation">;</span>

说明：
<span class="token number">1</span>）<span class="token keyword">for</span>循环里，<span class="token keyword">cursor</span>不需要打开，<span class="token keyword">for</span>循环自动帮你打开。<span class="token keyword">for</span>循环结束时会自动关闭<span class="token keyword">cursor</span>。
<span class="token number">2</span>）<span class="token keyword">for</span>循环自动帮你<span class="token keyword">fetch</span>到v_emp中。
<span class="token number">3</span>）<span class="token keyword">for</span>循环和游标搭配，简单而且不容易出错。
</code></pre>
<h3 id="游标使用存储过程参数"><a href="#游标使用存储过程参数" class="headerlink" title="游标使用存储过程参数"></a>游标使用存储过程参数</h3><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 这种方式为错误的，不能直接使用，原因是参数名与字段名一样，可以换个参数名或者下面的方法</span>
<span class="token keyword">CREATE</span> <span class="token operator">OR</span> REPLACE <span class="token keyword">PROCEDURE</span> SYNC_DEPOSIT_CUSTOMER<span class="token punctuation">(</span>SJXF_DATE <span class="token operator">IN</span> <span class="token keyword">DATE</span><span class="token punctuation">)</span> <span class="token operator">IS</span>
  <span class="token comment" spellcheck="true">-- 查询数据</span>
  <span class="token keyword">CURSOR</span> V_ROW <span class="token operator">IS</span>
    <span class="token keyword">SELECT</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
       <span class="token keyword">WHERE</span> T<span class="token punctuation">.</span>SJXF_DATE <span class="token operator">=</span> SJXF_DATE<span class="token punctuation">;</span>
  <span class="token comment" spellcheck="true">-- 中间变量</span>
  V_PARAM V_ROW<span class="token operator">%</span>ROWTYPE<span class="token punctuation">;</span>
<span class="token keyword">BEGIN</span>
  DBMS_OUTPUT<span class="token punctuation">.</span>put_line<span class="token punctuation">(</span><span class="token string">'START : '</span> <span class="token operator">||</span> SJXF_DATE<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">FOR</span> V_PARAM <span class="token operator">IN</span> V_ROW LOOP
    DBMS_OUTPUT<span class="token punctuation">.</span>put_line<span class="token punctuation">(</span>V_PARAM<span class="token punctuation">.</span>KHXM<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">END</span> LOOP<span class="token punctuation">;</span>
<span class="token keyword">END</span><span class="token punctuation">;</span>

<span class="token comment" spellcheck="true">-- 解决方法，给游标加参数，然后调用游标时传入存储过程的参数</span>
<span class="token keyword">CREATE</span> <span class="token operator">OR</span> REPLACE <span class="token keyword">PROCEDURE</span> SYNC_DEPOSIT_CUSTOMER<span class="token punctuation">(</span>SJXF_DATE <span class="token operator">IN</span> <span class="token keyword">DATE</span><span class="token punctuation">)</span> <span class="token operator">IS</span>
  <span class="token comment" spellcheck="true">-- 查询数据</span>
  <span class="token keyword">CURSOR</span> V_ROW<span class="token punctuation">(</span>SJ <span class="token keyword">DATE</span><span class="token punctuation">)</span> <span class="token operator">IS</span>
    <span class="token keyword">SELECT</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
       <span class="token keyword">WHERE</span> T<span class="token punctuation">.</span>SJXF_DATE <span class="token operator">=</span> SJ<span class="token punctuation">;</span>
  <span class="token comment" spellcheck="true">-- 中间变量</span>
  V_PARAM V_ROW<span class="token operator">%</span>ROWTYPE<span class="token punctuation">;</span>
<span class="token keyword">BEGIN</span>
  DBMS_OUTPUT<span class="token punctuation">.</span>put_line<span class="token punctuation">(</span><span class="token string">'START : '</span> <span class="token operator">||</span> SJXF_DATE<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">FOR</span> V_PARAM <span class="token operator">IN</span> V_ROW<span class="token punctuation">(</span>SJXF_DATE<span class="token punctuation">)</span> LOOP
    DBMS_OUTPUT<span class="token punctuation">.</span>put_line<span class="token punctuation">(</span>V_PARAM<span class="token punctuation">.</span>KHXM<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">END</span> LOOP<span class="token punctuation">;</span>
<span class="token keyword">END</span><span class="token punctuation">;</span>
</code></pre>
<h3 id="存储过程、游标参数变量切记不能重复，与参与的字段也不能相同！"><a href="#存储过程、游标参数变量切记不能重复，与参与的字段也不能相同！" class="headerlink" title="存储过程、游标参数变量切记不能重复，与参与的字段也不能相同！"></a>存储过程、游标参数变量切记不能重复，与参与的字段也不能相同！</h3><h3 id="存储过程、游标参数变量切记不能重复，与参与的字段也不能相同！-1"><a href="#存储过程、游标参数变量切记不能重复，与参与的字段也不能相同！-1" class="headerlink" title="存储过程、游标参数变量切记不能重复，与参与的字段也不能相同！"></a>存储过程、游标参数变量切记不能重复，与参与的字段也不能相同！</h3><h3 id="存储过程、游标参数变量切记不能重复，与参与的字段也不能相同！-2"><a href="#存储过程、游标参数变量切记不能重复，与参与的字段也不能相同！-2" class="headerlink" title="存储过程、游标参数变量切记不能重复，与参与的字段也不能相同！"></a>存储过程、游标参数变量切记不能重复，与参与的字段也不能相同！</h3>]]></content>
      
        <categories>
            
            <category> Oracle </category>
            
        </categories>
        
        
        <tags>
            
            <tag> oracle </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Oracle查询锁表及解锁]]></title>
      <url>/2017/03/03/Oracle%E6%9F%A5%E8%AF%A2%E9%94%81%E8%A1%A8%E5%8F%8A%E8%A7%A3%E9%94%81/</url>
      <content type="html"><![CDATA[<h3 id="一、查询锁"><a href="#一、查询锁" class="headerlink" title="一、查询锁"></a>一、查询锁</h3><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span> L<span class="token punctuation">.</span>SESSION_ID <span class="token operator">||</span> <span class="token string">','</span> <span class="token operator">||</span> S<span class="token punctuation">.</span><span class="token keyword">SERIAL</span><span class="token comment" spellcheck="true">#</span>
  <span class="token keyword">FROM</span> V$LOCKED_OBJECT L<span class="token punctuation">,</span> V$<span class="token keyword">SESSION</span> S
 <span class="token keyword">WHERE</span> S<span class="token punctuation">.</span>SID <span class="token operator">=</span> L<span class="token punctuation">.</span>SESSION_ID
</code></pre>
<h3 id="二、解锁"><a href="#二、解锁" class="headerlink" title="二、解锁"></a>二、解锁</h3><pre class=" language-sql"><code class="language-sql"><span class="token keyword">ALTER</span> SYSTEM <span class="token keyword">KILL</span> <span class="token keyword">SESSION</span> <span class="token string">'28,3706'</span><span class="token punctuation">;</span>
</code></pre>
<h3 id="三、修改连接数"><a href="#三、修改连接数" class="headerlink" title="三、修改连接数"></a>三、修改连接数</h3><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- session数</span>
SQL<span class="token operator">></span> <span class="token keyword">show</span> parameter <span class="token keyword">session</span>
NAME                                 <span class="token keyword">TYPE</span>        <span class="token keyword">VALUE</span>
<span class="token comment" spellcheck="true">------------------------------------ ----------- ------------------------------</span>
java_max_sessionspace_size           <span class="token keyword">integer</span>     <span class="token number">0</span>
java_soft_sessionspace_limit         <span class="token keyword">integer</span>     <span class="token number">0</span>
license_max_sessions                 <span class="token keyword">integer</span>     <span class="token number">0</span>
license_sessions_warning             <span class="token keyword">integer</span>     <span class="token number">0</span>
session_cached_cursors               <span class="token keyword">integer</span>     <span class="token number">50</span>
session_max_open_files               <span class="token keyword">integer</span>     <span class="token number">10</span>
sessions                             <span class="token keyword">integer</span>     <span class="token number">248</span>
shared_server_sessions               <span class="token keyword">integer</span>     

<span class="token comment" spellcheck="true">-- process数</span>
SQL<span class="token operator">></span> <span class="token keyword">show</span> parameter process
NAME                                 <span class="token keyword">TYPE</span>        <span class="token keyword">VALUE</span>
<span class="token comment" spellcheck="true">------------------------------------ ----------- ------------------------------</span>
aq_tm_processes                      <span class="token keyword">integer</span>     <span class="token number">0</span>
cell_offload_processing              <span class="token keyword">boolean</span>     <span class="token boolean">TRUE</span>
db_writer_processes                  <span class="token keyword">integer</span>     <span class="token number">1</span>
gcs_server_processes                 <span class="token keyword">integer</span>     <span class="token number">0</span>
global_txn_processes                 <span class="token keyword">integer</span>     <span class="token number">1</span>
job_queue_processes                  <span class="token keyword">integer</span>     <span class="token number">0</span>
log_archive_max_processes            <span class="token keyword">integer</span>     <span class="token number">4</span>
processes                            <span class="token keyword">integer</span>     <span class="token number">150</span>


<span class="token comment" spellcheck="true">-- 已使用session数</span>
SQL<span class="token operator">></span> <span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">from</span> v$<span class="token keyword">session</span><span class="token punctuation">;</span>
  <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span>
<span class="token comment" spellcheck="true">----------</span>
       <span class="token number">141</span>

<span class="token comment" spellcheck="true">-- 已使用process数</span>
SQL<span class="token operator">></span> <span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">from</span> v$process<span class="token punctuation">;</span>
  <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span>
<span class="token comment" spellcheck="true">----------</span>
       <span class="token number">143</span>

<span class="token comment" spellcheck="true">-- 修改最大进程数</span>
SQL<span class="token operator">></span> <span class="token keyword">alter</span> system <span class="token keyword">set</span> processes<span class="token operator">=</span><span class="token number">500</span> scope<span class="token operator">=</span>spfile<span class="token punctuation">;</span>
System altered
</code></pre>
]]></content>
      
        <categories>
            
            <category> Oracle </category>
            
        </categories>
        
        
        <tags>
            
            <tag> oracle </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Oracle监听日志过大导致链接速度缓慢]]></title>
      <url>/2017/02/26/Oracle%E7%9B%91%E5%90%AC%E6%97%A5%E5%BF%97%E8%BF%87%E5%A4%A7%E5%AF%BC%E8%87%B4%E9%93%BE%E6%8E%A5%E9%80%9F%E5%BA%A6%E7%BC%93%E6%85%A2/</url>
      <content type="html"><![CDATA[<h3 id="一、问题："><a href="#一、问题：" class="headerlink" title="一、问题："></a>一、问题：</h3><ol>
<li>局域网写代码连<code>Oracle</code>很慢，<code>SELECT * FROM DUAL</code> 要执行8分钟；</li>
<li><code>PL/SQL</code>连<code>Oracle</code>假死很久才连上，连上后打开<code>SQL WINDOW</code>，执行<code>SQL</code>，初始化很慢，执行却不慢；</li>
<li>应用起不来，后来才发现能起来，不过要10多分钟；</li>
</ol>
<h3 id="二、解决方法："><a href="#二、解决方法：" class="headerlink" title="二、解决方法："></a>二、解决方法：</h3><p><strong>问题产生的主要原因是oracle数据库的监听日志过大（4G）导致，​删除日志文件即可恢复正常。</strong><br>文件位置：</p>
<pre class=" language-bash"><code class="language-bash">D:\app\serical\diag\tnslsnr\DESKTOP-SCE4JAT\listener\trace\listener.log
</code></pre>
<p>1、停止监听器</p>
<pre class=" language-bash"><code class="language-bash">C:\windows\system32<span class="token operator">></span>lsnrctl stop

LSNRCTL <span class="token keyword">for</span> 64-bit Windows: Version 11.2.0.1.0 - Production on 05-2月 -2017 16:31:49

Copyright <span class="token punctuation">(</span>c<span class="token punctuation">)</span> 1991, 2010, Oracle.  All rights reserved.

正在连接到 <span class="token punctuation">(</span>DESCRIPTION<span class="token operator">=</span><span class="token punctuation">(</span>ADDRESS<span class="token operator">=</span><span class="token punctuation">(</span>PROTOCOL<span class="token operator">=</span>IPC<span class="token punctuation">)</span><span class="token punctuation">(</span>KEY<span class="token operator">=</span>EXTPROC1521<span class="token punctuation">))</span><span class="token punctuation">)</span>
命令执行成功
</code></pre>
<p>2、删除<code>listener.log</code>文件</p>
<p>3、启动监听器</p>
<pre class=" language-bash"><code class="language-bash">C:\windows\system32<span class="token operator">></span>lsnrctl start

LSNRCTL <span class="token keyword">for</span> 64-bit Windows: Version 11.2.0.1.0 - Production on 05-2月 -2017 16:31:59

Copyright <span class="token punctuation">(</span>c<span class="token punctuation">)</span> 1991, 2010, Oracle.  All rights reserved.

启动tnslsnr: 请稍候<span class="token punctuation">..</span>.

TNSLSNR <span class="token keyword">for</span> 64-bit Windows: Version 11.2.0.1.0 - Production
系统参数文件为D:\app\serical\product\11.2.0\dbhome_1\NETWORK\ADMIN\listener.ora
写入d:\app\serical\diag\tnslsnr\DESKTOP-SCE4JAT\listener\alert\log.xml的日志信息
监听: <span class="token punctuation">(</span>DESCRIPTION<span class="token operator">=</span><span class="token punctuation">(</span>ADDRESS<span class="token operator">=</span><span class="token punctuation">(</span>PROTOCOL<span class="token operator">=</span>ipc<span class="token punctuation">)</span><span class="token punctuation">(</span>PIPENAME<span class="token operator">=</span>\\.\pipe\EXTPROC1521ipc<span class="token punctuation">))</span><span class="token punctuation">)</span>
监听: <span class="token punctuation">(</span>DESCRIPTION<span class="token operator">=</span><span class="token punctuation">(</span>ADDRESS<span class="token operator">=</span><span class="token punctuation">(</span>PROTOCOL<span class="token operator">=</span>tcp<span class="token punctuation">)</span><span class="token punctuation">(</span>HOST<span class="token operator">=</span>DESKTOP-SCE4JAT<span class="token punctuation">)</span><span class="token punctuation">(</span>PORT<span class="token operator">=</span>1521<span class="token punctuation">))</span><span class="token punctuation">)</span>

正在连接到 <span class="token punctuation">(</span>DESCRIPTION<span class="token operator">=</span><span class="token punctuation">(</span>ADDRESS<span class="token operator">=</span><span class="token punctuation">(</span>PROTOCOL<span class="token operator">=</span>IPC<span class="token punctuation">)</span><span class="token punctuation">(</span>KEY<span class="token operator">=</span>EXTPROC1521<span class="token punctuation">))</span><span class="token punctuation">)</span>
LISTENER 的 STATUS
------------------------
别名                      LISTENER
版本                      TNSLSNR <span class="token keyword">for</span> 64-bit Windows: Version 11.2.0.1.0 - Production
启动日期                  05-2月 -2017 16:32:01
正常运行时间              0 天 0 小时 0 分 1 秒
跟踪级别                  off
安全性                    ON: Local OS Authentication
SNMP                      OFF
监听程序参数文件          D:\app\serical\product\11.2.0\dbhome_1\NETWORK\ADMIN\listener.ora
监听程序日志文件          d:\app\serical\diag\tnslsnr\DESKTOP-SCE4JAT\listener\alert\log.xml
监听端点概要<span class="token punctuation">..</span>.
  <span class="token punctuation">(</span>DESCRIPTION<span class="token operator">=</span><span class="token punctuation">(</span>ADDRESS<span class="token operator">=</span><span class="token punctuation">(</span>PROTOCOL<span class="token operator">=</span>ipc<span class="token punctuation">)</span><span class="token punctuation">(</span>PIPENAME<span class="token operator">=</span>\\.\pipe\EXTPROC1521ipc<span class="token punctuation">))</span><span class="token punctuation">)</span>
  <span class="token punctuation">(</span>DESCRIPTION<span class="token operator">=</span><span class="token punctuation">(</span>ADDRESS<span class="token operator">=</span><span class="token punctuation">(</span>PROTOCOL<span class="token operator">=</span>tcp<span class="token punctuation">)</span><span class="token punctuation">(</span>HOST<span class="token operator">=</span>DESKTOP-SCE4JAT<span class="token punctuation">)</span><span class="token punctuation">(</span>PORT<span class="token operator">=</span>1521<span class="token punctuation">))</span><span class="token punctuation">)</span>
服务摘要<span class="token punctuation">..</span>
服务 <span class="token string">"CLRExtProc"</span> 包含 1 个实例。
  实例 <span class="token string">"CLRExtProc"</span>, 状态 UNKNOWN, 包含此服务的 1 个处理程序<span class="token punctuation">..</span>.
命令执行成功
</code></pre>
]]></content>
      
        <categories>
            
            <category> Oracle </category>
            
        </categories>
        
        
        <tags>
            
            <tag> oracle </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[删除老版本.svn子文件夹]]></title>
      <url>/2017/02/09/%E5%88%A0%E9%99%A4%E8%80%81%E7%89%88%E6%9C%AC.svn%E5%AD%90%E6%96%87%E4%BB%B6%E5%A4%B9/</url>
      <content type="html"><![CDATA[<pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>test<span class="token punctuation">.</span>dir<span class="token punctuation">;</span>

<span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>File<span class="token punctuation">;</span>

<span class="token comment" spellcheck="true">/**
 * @类名称: DeleteSvn
 * @类描述: 删除.svn子文件夹
 * @创建人: serical
 * @创建时间: 2016-4-29 上午10:59:13
 * @修改人: serical
 * @修改时间: 2016-4-29 上午10:59:13
 * @修改备注:
 * @version: 1.0
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DeleteSvn</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">static</span> String fileName <span class="token operator">=</span> <span class="token string">".svn"</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        String path <span class="token operator">=</span> <span class="token string">"D:\\zwxxbs"</span><span class="token punctuation">;</span>
        File root <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">searchFile</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment" spellcheck="true">/**
     * 循环查询.svn目录，找到即删除
     * 
     * @方法名:searchFile
     * @参数 @param file
     * @返回类型 void
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">searchFile</span><span class="token punctuation">(</span>File file<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span>File f <span class="token operator">:</span> file<span class="token punctuation">.</span><span class="token function">listFiles</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>f<span class="token punctuation">.</span><span class="token function">isDirectory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>f<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>fileName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>f<span class="token punctuation">.</span><span class="token function">getAbsolutePath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token function">deleteDirectory</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    <span class="token function">searchFile</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment" spellcheck="true">/**
     * 删除目录
     * 
     * @方法名:deleteDirectory
     * @参数 @param file
     * @返回类型 void
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">deleteDirectory</span><span class="token punctuation">(</span>File file<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>file<span class="token punctuation">.</span><span class="token function">isDirectory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span>File f <span class="token operator">:</span> file<span class="token punctuation">.</span><span class="token function">listFiles</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>f<span class="token punctuation">.</span><span class="token function">isDirectory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token function">deleteDirectory</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    f<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        file<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre>
]]></content>
      
        <categories>
            
            <category> Java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
            <tag> svn </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Git修改历史提交注释]]></title>
      <url>/2017/02/04/Git%E4%BF%AE%E6%94%B9%E5%8E%86%E5%8F%B2%E6%8F%90%E4%BA%A4%E6%B3%A8%E9%87%8A/</url>
      <content type="html"><![CDATA[<pre class=" language-bash"><code class="language-bash">serical@DESKTOP-SCE4JAT MINGW64 /d/workspace/NodeJs/blogs <span class="token punctuation">(</span>master<span class="token punctuation">)</span>
<span class="token comment" spellcheck="true">#要修改哪次提交将pick改成edit</span>
$ <span class="token function">git</span> rebase -i HEAD~3
Stopped at 0f65600<span class="token punctuation">..</span>. Oracle PLSQL配置.md
You can amend the commit now, with

        <span class="token function">git</span> commit --amend

Once you are satisfied with your changes, run

        <span class="token function">git</span> rebase --continue

serical@DESKTOP-SCE4JAT MINGW64 /d/workspace/NodeJs/blogs <span class="token punctuation">(</span>master<span class="token operator">|</span>REBASE-i 2/3<span class="token punctuation">)</span>
<span class="token comment" spellcheck="true">#要修改的那个已经到第一个了</span>
$ <span class="token function">git</span> log
commit 0f656006ed81ac824911471302b7fb0ff0fa6601
Author: serical <span class="token operator">&lt;</span>raoserical@gmail.com<span class="token operator">></span>
Date:   Sat Feb 4 16:11:58 2017 +0800

    Oracle PLSQL配置.md

serical@DESKTOP-SCE4JAT MINGW64 /d/workspace/NodeJs/blogs <span class="token punctuation">(</span>master<span class="token operator">|</span>REBASE-i 2/3<span class="token punctuation">)</span>
<span class="token comment" spellcheck="true">#修改注释</span>
$ <span class="token function">git</span> commit --amend
<span class="token punctuation">[</span>detached HEAD af6c3e6<span class="token punctuation">]</span> Oracle PLSQL配置
 Date: Sat Feb 4 16:11:58 2017 +0800
 1 <span class="token function">file</span> changed, 60 insertions<span class="token punctuation">(</span>+<span class="token punctuation">)</span>
 create mode 100644 <span class="token string">"oracle/Oracle PLSQL\351\205\215\347\275\256.md"</span>

 serical@DESKTOP-SCE4JAT MINGW64 /d/workspace/NodeJs/blogs <span class="token punctuation">(</span>master<span class="token operator">|</span>REBASE-i 2/3<span class="token punctuation">)</span>
 <span class="token comment" spellcheck="true">#修改完成后返回</span>
 $ <span class="token function">git</span> rebase --continue
 Successfully rebased and updated refs/heads/master.

 serical@DESKTOP-SCE4JAT MINGW64 /d/workspace/NodeJs/blogs <span class="token punctuation">(</span>master<span class="token punctuation">)</span>
 <span class="token comment" spellcheck="true">#pull</span>
 $ <span class="token function">git</span> pull
 Merge made by the <span class="token string">'recursive'</span> strategy.

 serical@DESKTOP-SCE4JAT MINGW64 /d/workspace/NodeJs/blogs <span class="token punctuation">(</span>master<span class="token punctuation">)</span>
 <span class="token comment" spellcheck="true">#push</span>
 $ <span class="token function">git</span> push
 Counting objects: 4, done.
 Delta compression using up to 4 threads.
 Compressing objects: 100% <span class="token punctuation">(</span>4/4<span class="token punctuation">)</span>, done.
 Writing objects: 100% <span class="token punctuation">(</span>4/4<span class="token punctuation">)</span>, 564 bytes <span class="token operator">|</span> 0 bytes/s, done.
 Total 4 <span class="token punctuation">(</span>delta 2<span class="token punctuation">)</span>, reused 0 <span class="token punctuation">(</span>delta 0<span class="token punctuation">)</span>
 remote: Resolving deltas: 100% <span class="token punctuation">(</span>2/2<span class="token punctuation">)</span>, completed with 1 local objects.
 To https://github.com/serical/blogs.git
    7670cdc<span class="token punctuation">..</span>90ee15c  master -<span class="token operator">></span> master
</code></pre>
]]></content>
      
        <categories>
            
            <category> Git </category>
            
        </categories>
        
        
        <tags>
            
            <tag> git </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Easyui的editor禁用]]></title>
      <url>/2017/02/04/Easyui%E7%9A%84editor%E7%A6%81%E7%94%A8/</url>
      <content type="html"><![CDATA[<pre class=" language-js"><code class="language-js"><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#dg"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">datagrid</span><span class="token punctuation">(</span><span class="token string">"selectRow"</span><span class="token punctuation">,</span> index<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">datagrid</span><span class="token punctuation">(</span><span class="token string">"beginEdit"</span><span class="token punctuation">,</span> index<span class="token punctuation">)</span><span class="token punctuation">;</span>
editIndex <span class="token operator">=</span> index<span class="token punctuation">;</span>
<span class="token keyword">var</span> editor <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#dg"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">datagrid</span><span class="token punctuation">(</span><span class="token string">"getEditor"</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>index <span class="token punctuation">:</span> editIndex<span class="token punctuation">,</span> field <span class="token punctuation">:</span> <span class="token string">"status"</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">// 普通的用porp</span>
<span class="token comment" spellcheck="true">//$(editor.target).prop("disabled", true);</span>
<span class="token comment" spellcheck="true">// easyui组建用easyui禁用</span>
<span class="token function">$</span><span class="token punctuation">(</span>editor<span class="token punctuation">.</span>target<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">combobox</span><span class="token punctuation">(</span><span class="token string">"disable"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span>editor<span class="token punctuation">.</span>target<span class="token punctuation">)</span><span class="token punctuation">;</span>
其他说明
EasyUI常用控件禁用方法：

<span class="token number">1</span><span class="token punctuation">.</span>validatebox可以用的用法<span class="token punctuation">:</span>前两种适用于单个的validatebox<span class="token punctuation">;</span>
第三种应用于整个form里面的输入框<span class="token punctuation">;</span>

 <span class="token operator">&lt;</span><span class="token number">1</span><span class="token operator">></span><span class="token punctuation">.</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#id"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">"readonly"</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#id"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">removeAttr</span><span class="token punctuation">(</span><span class="token string">"readonly"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

 <span class="token operator">&lt;</span><span class="token number">2</span><span class="token operator">></span><span class="token punctuation">.</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#id"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">"readonly"</span><span class="token punctuation">,</span> <span class="token string">"readonly"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#id"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">removeAttr</span><span class="token punctuation">(</span><span class="token string">"readonly"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

 <span class="token operator">&lt;</span><span class="token number">3</span><span class="token operator">></span><span class="token punctuation">.</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#Form :input"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">"readonly"</span><span class="token punctuation">,</span> <span class="token string">"readonly"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//对form里面的禁用</span>

 <span class="token operator">&lt;</span><span class="token number">4</span><span class="token operator">></span><span class="token punctuation">.</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"input"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">"readonly"</span><span class="token punctuation">,</span> <span class="token string">"readonly"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//对所有的input标签禁用</span>
<span class="token number">2</span><span class="token punctuation">.</span>combobox禁用启用用法<span class="token punctuation">:</span>
 <span class="token operator">&lt;</span><span class="token number">1</span><span class="token operator">></span><span class="token punctuation">.</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#id"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">combobox</span><span class="token punctuation">(</span><span class="token punctuation">{</span> disabled<span class="token punctuation">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#id"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">combobox</span><span class="token punctuation">(</span><span class="token punctuation">{</span> disabled<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

 <span class="token operator">&lt;</span><span class="token number">2</span><span class="token operator">></span><span class="token punctuation">.</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#id"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">"readonly"</span><span class="token punctuation">,</span> <span class="token string">"readonly"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//对单个禁用</span>
     <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#id"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">removeAttr</span><span class="token punctuation">(</span><span class="token string">"readonly"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

 <span class="token operator">&lt;</span><span class="token number">3</span><span class="token operator">></span><span class="token punctuation">.</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#fm .easyui-combobox"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">combobox</span><span class="token punctuation">(</span><span class="token punctuation">{</span> disabled<span class="token punctuation">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//对form里面的下拉框禁用</span>

 <span class="token operator">&lt;</span><span class="token number">4</span><span class="token operator">></span><span class="token punctuation">.</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#ID"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">combobox</span><span class="token punctuation">(</span><span class="token string">"disable"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#ID"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">combobox</span><span class="token punctuation">(</span><span class="token string">"enable"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token number">3</span><span class="token punctuation">.</span>datebox与datetimebox禁用启用方法<span class="token punctuation">:</span>
 <span class="token operator">&lt;</span><span class="token number">1</span><span class="token operator">></span><span class="token punctuation">.</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#fm .easyui-datebox"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">datebox</span><span class="token punctuation">(</span><span class="token punctuation">{</span> disabled<span class="token punctuation">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#fm .easyui-datebox"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">datebox</span><span class="token punctuation">(</span><span class="token punctuation">{</span> disabled<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

 <span class="token operator">&lt;</span><span class="token number">2</span><span class="token operator">></span><span class="token punctuation">.</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#id"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">"readonly"</span><span class="token punctuation">,</span> <span class="token string">"readonly"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#id"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">removeAttr</span><span class="token punctuation">(</span><span class="token string">"readonly"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

 <span class="token operator">&lt;</span><span class="token number">3</span><span class="token operator">></span><span class="token punctuation">.</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#fm .easyui-datetimebox"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">datetimebox</span><span class="token punctuation">(</span><span class="token punctuation">{</span> disabled<span class="token punctuation">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#fm .easyui-datetimebox"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">datetimebox</span><span class="token punctuation">(</span><span class="token punctuation">{</span> disabled<span class="token punctuation">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token number">4</span><span class="token punctuation">.</span>combogrid禁用启用方法<span class="token punctuation">:</span>
 <span class="token operator">&lt;</span><span class="token number">1</span><span class="token operator">></span><span class="token punctuation">.</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#FPayApplySupAccountID"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">combogrid</span><span class="token punctuation">(</span><span class="token string">"disable"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#FPayApplySupAccountID"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">combogrid</span><span class="token punctuation">(</span><span class="token string">"enable"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token number">5</span><span class="token punctuation">.</span>lable标签ID附加文字：
 <span class="token operator">&lt;</span><span class="token number">1</span><span class="token operator">></span><span class="token punctuation">.</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#id"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token string">"标题:"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//此方法可以屏蔽掉label标签内的文字</span>
</code></pre>
]]></content>
      
        <categories>
            
            <category> 前端 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> easyui </tag>
            
            <tag> editor </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Java中Integer比较]]></title>
      <url>/2017/02/04/Java%E4%B8%ADInteger%E6%AF%94%E8%BE%83/</url>
      <content type="html"><![CDATA[<p>代码一</p>
<pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        Integer i1 <span class="token operator">=</span> <span class="token number">127</span><span class="token punctuation">;</span>
        Integer i2 <span class="token operator">=</span> <span class="token number">127</span><span class="token punctuation">;</span>
        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>i1 <span class="token operator">==</span> i2<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// true</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre>
<p>代码二</p>
<pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        Integer i1 <span class="token operator">=</span> <span class="token number">128</span><span class="token punctuation">;</span>
        Integer i2 <span class="token operator">=</span> <span class="token number">128</span><span class="token punctuation">;</span>
        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>i1 <span class="token operator">==</span> i2<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// false</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre>
<p>原因<br><code>Integer i1</code>声明变量时，调用了下面的方法</p>
<pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">static</span> Integer <span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">assert</span> IntegerCache<span class="token punctuation">.</span>high <span class="token operator">>=</span> <span class="token number">127</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">>=</span> IntegerCache<span class="token punctuation">.</span>low <span class="token operator">&amp;&amp;</span> i <span class="token operator">&lt;=</span> IntegerCache<span class="token punctuation">.</span>high<span class="token punctuation">)</span>
        <span class="token keyword">return</span> IntegerCache<span class="token punctuation">.</span>cache<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token operator">-</span>IntegerCache<span class="token punctuation">.</span>low<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Integer</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
<p>而<code>cache</code>由一个静态内部类初始化，取值范围<code>[-128, 127]</code>代码如下</p>
<pre class=" language-java"><code class="language-java"><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">IntegerCache</span> <span class="token punctuation">{</span>
    <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> low <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">128</span><span class="token punctuation">;</span>
    <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> high<span class="token punctuation">;</span>
    <span class="token keyword">static</span> <span class="token keyword">final</span> Integer cache<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

    <span class="token keyword">static</span> <span class="token punctuation">{</span>
        <span class="token comment" spellcheck="true">// high value may be configured by property</span>
        <span class="token keyword">int</span> h <span class="token operator">=</span> <span class="token number">127</span><span class="token punctuation">;</span>
        String integerCacheHighPropValue <span class="token operator">=</span>
            sun<span class="token punctuation">.</span>misc<span class="token punctuation">.</span>VM<span class="token punctuation">.</span><span class="token function">getSavedProperty</span><span class="token punctuation">(</span><span class="token string">"java.lang.Integer.IntegerCache.high"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>integerCacheHighPropValue <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>integerCacheHighPropValue<span class="token punctuation">)</span><span class="token punctuation">;</span>
            i <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token number">127</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment" spellcheck="true">// Maximum array size is Integer.MAX_VALUE</span>
            h <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> Integer<span class="token punctuation">.</span>MAX_VALUE <span class="token operator">-</span> <span class="token punctuation">(</span><span class="token operator">-</span>low<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        high <span class="token operator">=</span> h<span class="token punctuation">;</span>

        cache <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Integer</span><span class="token punctuation">[</span><span class="token punctuation">(</span>high <span class="token operator">-</span> low<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> j <span class="token operator">=</span> low<span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> k <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> k <span class="token operator">&lt;</span> cache<span class="token punctuation">.</span>length<span class="token punctuation">;</span> k<span class="token operator">++</span><span class="token punctuation">)</span>
            cache<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Integer</span><span class="token punctuation">(</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token function">IntegerCache</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre>
]]></content>
      
        <categories>
            
            <category> Java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
            <tag> integer </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Datagrid获取当前列信息]]></title>
      <url>/2017/02/04/Datagrid%E8%8E%B7%E5%8F%96%E5%BD%93%E5%89%8D%E5%88%97%E4%BF%A1%E6%81%AF/</url>
      <content type="html"><![CDATA[<p>我们在使用<code>datagrid</code>列属性<code>formatter</code>时，有些场景下，在<code>formatter</code>函数内部，我们需要知道当前列的一些配置信息，比如说<code>title</code>,<code>filed</code> 等信息，<br>而<code>formatter</code>函数入参只有行索引，值，行数据，那么怎么获取<code>title</code>,<code>filed</code>等信息呢？其实<code>formatter</code>函数内部的<code>this</code>在运行时默认就是指向当前列的配置对象，<br>且组件内部并没有改变<code>this</code>指向，所以通过<code>this</code>就可以拿到所有信息了。</p>
<pre class=" language-js"><code class="language-js"><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#dg'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">datagrid</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    columns<span class="token punctuation">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">[</span>
            <span class="token punctuation">{</span>
                field<span class="token punctuation">:</span> <span class="token string">'userId'</span><span class="token punctuation">,</span>
                title<span class="token punctuation">:</span> <span class="token string">'User'</span><span class="token punctuation">,</span>
                width<span class="token punctuation">:</span> <span class="token number">80</span><span class="token punctuation">,</span>
                formatter<span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span>
                row<span class="token punctuation">,</span>
                index<span class="token punctuation">)</span><span class="token punctuation">{</span>
                    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>title<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//Userconsole.log(this.field);//userIdif(row.user){</span>
                        <span class="token keyword">return</span> row<span class="token punctuation">.</span>user<span class="token punctuation">.</span>name<span class="token punctuation">;</span>
                    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
                        <span class="token keyword">return</span> value<span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">]</span>
    <span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre>
<p>类似的列属性还有<code>styler</code>和<code>sorter</code></p>
]]></content>
      
        <categories>
            
            <category> 前端 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> easyui </tag>
            
            <tag> datagrid </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[IE8下Date.parse()]]></title>
      <url>/2017/02/04/IE8%E4%B8%8BDate.parse()/</url>
      <content type="html"><![CDATA[<pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">// 正则替换标准日期格（2015-01-01）式中的-</span>
<span class="token string">"2015-05-05"</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex">/-/g</span><span class="token punctuation">,</span> <span class="token string">"/"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">// 一定要满足年月日都要有</span>
Date<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">"2015/05/05"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre>
]]></content>
      
        <categories>
            
            <category> 前端 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> javascript </tag>
            
            <tag> date </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Class.getResource和ClassLoader.getResource的区别]]></title>
      <url>/2017/01/12/Class.getResource%E5%92%8CClassLoader.getResource%E7%9A%84%E5%8C%BA%E5%88%AB/</url>
      <content type="html"><![CDATA[<pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>power<span class="token punctuation">.</span>bank<span class="token punctuation">.</span>payment<span class="token punctuation">.</span>action<span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment" spellcheck="true">// 查找当前类所在包下的springMVC.xml</span>
        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>Test<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getResource</span><span class="token punctuation">(</span><span class="token string">"springMVC.xml"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment" spellcheck="true">// 获取当前class文件</span>
        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>Test<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getResource</span><span class="token punctuation">(</span><span class="token string">"Test.class"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment" spellcheck="true">// "/"开头的，查询classpath根目录下的springMVC.xml</span>
        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>Test<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getResource</span><span class="token punctuation">(</span><span class="token string">"/springMVC.xml"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment" spellcheck="true">// 获取别的类路径需要带"/"</span>
        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>Test<span class="token punctuation">.</span><span class="token keyword">class</span>
            <span class="token class-name"><span class="token punctuation">.</span>getResource</span><span class="token punctuation">(</span><span class="token string">"/com/theta/common/bean/EasyUiTreeNode.class"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment" spellcheck="true">// "/"开头都是null，查找classpath根目录下的springMVC.xml</span>
        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>Test<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getResource</span><span class="token punctuation">(</span><span class="token string">"springMVC.xml"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment" spellcheck="true">// 获取当前class文件需要带包名</span>
        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>Test<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">getResource</span><span class="token punctuation">(</span><span class="token string">"com/theta/common/bean/EasyUiTreeNode.class"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre>
<p>从上面可以看出：<br><code>class.getResource(&quot;/&quot;) == class.getClassLoader().getResource(&quot;&quot;)</code><br>其实，<code>Class.getResource</code>和<code>ClassLoader.getResource</code>本质上是一样的，都是使用<code>ClassLoader.getResource</code>加载资源的。下面请看一下<code>jdk</code>的<code>Class</code>源码:</p>
<pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> java<span class="token punctuation">.</span>net<span class="token punctuation">.</span>URL <span class="token function">getResource</span><span class="token punctuation">(</span>String name<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    name <span class="token operator">=</span> <span class="token function">resolveName</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
    ClassLoader cl <span class="token operator">=</span> <span class="token function">getClassLoader0</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>cl<span class="token operator">==</span>null<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment" spellcheck="true">// A system class.</span>
        <span class="token keyword">return</span> ClassLoader<span class="token punctuation">.</span><span class="token function">getSystemResource</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> cl<span class="token punctuation">.</span><span class="token function">getResource</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
<p>至于为什么<code>lass.getResource(String path)</code>中<code>path</code>可以/开头，是因为在<code>name = resolveName(name);</code>进行了处理：</p>
<pre class=" language-java"><code class="language-java"> <span class="token keyword">private</span> String <span class="token function">resolveName</span><span class="token punctuation">(</span>String name<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>name <span class="token operator">==</span> null<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">return</span> name<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>name<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            Class <span class="token class-name">c</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
            <span class="token keyword">while</span> <span class="token punctuation">(</span>c<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                c <span class="token operator">=</span> c<span class="token punctuation">.</span><span class="token function">getComponentType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            String baseName <span class="token operator">=</span> c<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> index <span class="token operator">=</span> baseName<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token string">'.'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                name <span class="token operator">=</span> baseName<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> index<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">'.'</span><span class="token punctuation">,</span> <span class="token string">'/'</span><span class="token punctuation">)</span>
                    <span class="token operator">+</span><span class="token string">"/"</span><span class="token operator">+</span>name<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span>
        <span class="token punctuation">{</span><span class="token comment" spellcheck="true">//如果是以"/"开头，则去掉</span>
            name <span class="token operator">=</span> name<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> name<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre>
]]></content>
      
        <categories>
            
            <category> Java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Easyui-Datagrid获取当前分页对象]]></title>
      <url>/2017/01/12/Easyui-Datagrid%E8%8E%B7%E5%8F%96%E5%BD%93%E5%89%8D%E5%88%86%E9%A1%B5%E5%AF%B9%E8%B1%A1/</url>
      <content type="html"><![CDATA[<pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">// 取得当前分页对象</span>
<span class="token keyword">var</span> page <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#dg"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">datagrid</span><span class="token punctuation">(</span><span class="token string">"getPager"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">data</span><span class="token punctuation">(</span><span class="token string">"pagination"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>options<span class="token punctuation">;</span>
param<span class="token punctuation">.</span>page <span class="token operator">=</span> page<span class="token punctuation">.</span>pageNumber<span class="token punctuation">;</span>
param<span class="token punctuation">.</span>rows <span class="token operator">=</span> page<span class="token punctuation">.</span>pageSize<span class="token punctuation">;</span>
</code></pre>
]]></content>
      
        <categories>
            
            <category> 前端 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> easyui </tag>
            
            <tag> datagrid </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Java1.7新特性]]></title>
      <url>/2017/01/12/Java1.7%E6%96%B0%E7%89%B9%E6%80%A7/</url>
      <content type="html"><![CDATA[<pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>anubis<span class="token punctuation">.</span>test<span class="token punctuation">;</span>

<span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>BufferedReader<span class="token punctuation">;</span>
<span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>FileInputStream<span class="token punctuation">;</span>
<span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>FileNotFoundException<span class="token punctuation">;</span>
<span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>FileReader<span class="token punctuation">;</span>
<span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>IOException<span class="token punctuation">;</span>
<span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>InputStreamReader<span class="token punctuation">;</span>
<span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>HashMap<span class="token punctuation">;</span>
<span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Map<span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestJDK7</span> <span class="token punctuation">{</span>

 <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> FileNotFoundException<span class="token punctuation">,</span>
   IOException <span class="token punctuation">{</span>
  <span class="token comment" spellcheck="true">// switch string</span>
  String key <span class="token operator">=</span> <span class="token string">"dept"</span><span class="token punctuation">;</span>
  <span class="token keyword">switch</span> <span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">case</span> <span class="token string">"dept"</span><span class="token operator">:</span>
   System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"dept...."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token keyword">break</span><span class="token punctuation">;</span>
  <span class="token keyword">case</span> <span class="token string">"person"</span><span class="token operator">:</span>
   System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"person..."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token keyword">break</span><span class="token punctuation">;</span>
  <span class="token keyword">default</span><span class="token operator">:</span>
   <span class="token keyword">break</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment" spellcheck="true">// 直接声明2进制数</span>
  <span class="token keyword">int</span> x <span class="token operator">=</span> <span class="token number">0b1010</span><span class="token punctuation">;</span>
  System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment" spellcheck="true">// 下划线数字</span>
  <span class="token keyword">int</span> y <span class="token operator">=</span> 1_000_000<span class="token punctuation">;</span>
  System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment" spellcheck="true">// twr 字节流</span>
  <span class="token keyword">try</span> <span class="token punctuation">(</span>FileInputStream fis <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span><span class="token string">"d:/test.dmp"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> buffer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">byte</span><span class="token punctuation">[</span><span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
   <span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
   System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"字节流："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>count <span class="token operator">=</span> fis<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>buffer<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span><span class="token punctuation">;</span>
    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>buffer<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> count<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
   System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment" spellcheck="true">// twr 字符流</span>
  <span class="token keyword">try</span> <span class="token punctuation">(</span>FileReader fr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileReader</span><span class="token punctuation">(</span><span class="token string">"d:/test.dmp"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> buffer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">char</span><span class="token punctuation">[</span><span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
   <span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
   System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"字符流"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>count <span class="token operator">=</span> fr<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>buffer<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span><span class="token punctuation">;</span>
    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>buffer<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> count<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
   System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment" spellcheck="true">// twr使用，注意单个声明（字符流-->字节流）</span>
  <span class="token keyword">try</span> <span class="token punctuation">(</span>FileInputStream fis <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span><span class="token string">"d:/test.dmp"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    InputStreamReader is <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">InputStreamReader</span><span class="token punctuation">(</span>fis<span class="token punctuation">)</span><span class="token punctuation">;</span>
    BufferedReader br <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BufferedReader</span><span class="token punctuation">(</span>is<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   String temp <span class="token operator">=</span> null<span class="token punctuation">;</span>
   <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>temp <span class="token operator">=</span> br<span class="token punctuation">.</span><span class="token function">readLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>temp<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token comment" spellcheck="true">// 钻石语法，自动泛型</span>
  Map map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre>
]]></content>
      
        <categories>
            
            <category> Java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
            <tag> jdk </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Ghost博客设置邮件]]></title>
      <url>/2017/01/07/Ghost%E5%8D%9A%E5%AE%A2%E8%AE%BE%E7%BD%AE%E9%82%AE%E4%BB%B6/</url>
      <content type="html"><![CDATA[<h3 id="一、使用普通网易邮箱"><a href="#一、使用普通网易邮箱" class="headerlink" title="一、使用普通网易邮箱"></a>一、使用普通网易邮箱</h3><p>格式如下：</p>
<pre class=" language-js"><code class="language-js">mail<span class="token punctuation">:</span> <span class="token punctuation">{</span>
    transport<span class="token punctuation">:</span> <span class="token string">'SMTP'</span><span class="token punctuation">,</span>
    <span class="token keyword">from</span><span class="token punctuation">:</span> <span class="token string">'网易邮箱账号'</span><span class="token punctuation">,</span>
    options<span class="token punctuation">:</span> <span class="token punctuation">{</span>
        host<span class="token punctuation">:</span> <span class="token string">'smtp.163.com'</span><span class="token punctuation">,</span>
        secureConnection<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        port<span class="token punctuation">:</span> <span class="token number">994</span><span class="token punctuation">,</span>
        auth<span class="token punctuation">:</span> <span class="token punctuation">{</span>
            user<span class="token punctuation">:</span> <span class="token string">'网易邮箱账号'</span><span class="token punctuation">,</span>
            pass<span class="token punctuation">:</span> <span class="token string">'必须客户端授权密码'</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre>
<p>网易邮箱协议、地址、端口如下：<br><br><img src="/static/5.png" alt=""></p>
<p>关于客户端授权密码：<br><br><img src="/static/6.png" alt=""></p>
<p>不知道的请重置然后记下来，只显示一次</p>
<h3 id="二、使用网易免费企业邮箱"><a href="#二、使用网易免费企业邮箱" class="headerlink" title="二、使用网易免费企业邮箱"></a>二、使用网易免费企业邮箱</h3><pre class=" language-js"><code class="language-js">mail<span class="token punctuation">:</span> <span class="token punctuation">{</span>
    transport<span class="token punctuation">:</span> <span class="token string">'SMTP'</span><span class="token punctuation">,</span>
    <span class="token keyword">from</span><span class="token punctuation">:</span> <span class="token string">'xxx.com &lt;xxx@xxx.com>'</span><span class="token punctuation">,</span>
    options<span class="token punctuation">:</span> <span class="token punctuation">{</span>
        host<span class="token punctuation">:</span> <span class="token string">'smtp.ym.163.com'</span><span class="token punctuation">,</span>
        secureConnection<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        port<span class="token punctuation">:</span> <span class="token number">994</span><span class="token punctuation">,</span>
        auth<span class="token punctuation">:</span> <span class="token punctuation">{</span>
            user<span class="token punctuation">:</span> <span class="token string">'xxx@xxx.com'</span><span class="token punctuation">,</span>
            pass<span class="token punctuation">:</span> <span class="token string">'登陆密码'</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre>
<p>申请地址：网易免费企业邮箱<br>需要注意的就是添加MX记录和TXT记录，主机记录不能写mail,域名,改成@才行,如下图： <br><br><img src="/static/7.png" alt=""></p>
<p>效果如图：<br><br><img src="/static/8.png" alt=""></p>
]]></content>
      
        <categories>
            
            <category> Blog </category>
            
        </categories>
        
        
        <tags>
            
            <tag> ghost </tag>
            
            <tag> blog </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Oracle表空间大小详解]]></title>
      <url>/2016/11/28/Oracle%E8%A1%A8%E7%A9%BA%E9%97%B4%E5%A4%A7%E5%B0%8F%E8%AF%A6%E8%A7%A3/</url>
      <content type="html"><![CDATA[<h3 id="一、问题"><a href="#一、问题" class="headerlink" title="一、问题"></a>一、问题</h3><p>sql需要索引创建索引时提示xxx表空不足，只好临时建到另一个表空间上，先解决了问题。生产库一个表空间已经到了30G的大小，后来想起随着时间表空间总会满的，到时候系统出了问题就不好解决了，先了解下如何解决该问题。</p>
<h3 id="二、了解相关知识"><a href="#二、了解相关知识" class="headerlink" title="二、了解相关知识"></a>二、了解相关知识</h3><p>按照Oracle文档的描述，每个<code>datafile</code>的最大容量为<code>(2^22-1)</code>个<code>block</code>，即<code>4194303</code>个<code>block</code>，而当前数据库的<code>block大</code>小是<code>8k</code>，</p>
<pre class=" language-sql"><code class="language-sql">SQL<span class="token operator">></span> <span class="token keyword">SHOW</span> PARAMETER DB_BLOCK_SIZE<span class="token punctuation">;</span>
NAME                                 <span class="token keyword">TYPE</span>        <span class="token keyword">VALUE</span>
<span class="token comment" spellcheck="true">------------------------------------ ----------- ------------------------------</span>
db_block_size                        <span class="token keyword">integer</span>     <span class="token number">8192</span>
</code></pre>
<p>也就是说最大的文件大小是<code>32G</code>，要建<code>100G</code>的<code>datafile</code>就不行了。<br>也就是说，以Oracle的限制，如果要建普通的<code>datafil</code>e，最大的大小就<br><code>(2^22-1)*32K = 128G</code> (注：Oracle最大支持block为32k)。存在这个限制是因为<code>Oracle</code>的内部<code>ROWID</code>使用22位2进制数来存储不同的<code>block</code>号，<br>所以22位最多代表<code>(2^22-1)</code>个<code>block</code>。</p>
<h3 id="三、测试"><a href="#三、测试" class="headerlink" title="三、测试"></a>三、测试</h3><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">--这里创建一个表空间测试下</span>
<span class="token keyword">CREATE</span> <span class="token keyword">TABLESPACE</span> SERICAL
DATAFILE <span class="token string">'D:\app\serical\oradata\god\SERICAL.DBF'</span>
SIZE 100M
AUTOEXTEND <span class="token keyword">ON</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">-- 删除表空间</span>
<span class="token keyword">DROP</span> <span class="token keyword">TABLESPACE</span> SERICAL1 INCLUDING CONTENTS <span class="token keyword">CASCADE</span> CONSTRAINTS
<span class="token comment" spellcheck="true">-- 创建serical用户</span>
<span class="token keyword">CREATE</span> <span class="token keyword">USER</span> SERICAL IDENTIFIED <span class="token keyword">BY</span> <span class="token number">123456</span>
<span class="token keyword">DEFAULT</span> <span class="token keyword">TABLESPACE</span> SERICAL<span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">-- 授权</span>
<span class="token keyword">GRANT</span> DBA<span class="token punctuation">,</span> RESOURCE<span class="token punctuation">,</span> <span class="token keyword">CONNECT</span> <span class="token keyword">TO</span> SERICAL<span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">-- 创建测试表TEST</span>
<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> TEST <span class="token punctuation">(</span>ID <span class="token keyword">INTEGER</span><span class="token punctuation">,</span> NAME VARCHAR2<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">-- 插入一条数据</span>
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> TEST <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'SERICAL'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">-- 连续疯狂插入</span>
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> TEST <span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> TEST<span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">-- 记录数</span>
SQL<span class="token operator">></span> <span class="token keyword">SELECT</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> TEST<span class="token punctuation">;</span>

  <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span>
<span class="token comment" spellcheck="true">----------</span>
     <span class="token number">65536</span>

<span class="token comment" spellcheck="true">-- 查询表空间使用情况，可以看出，使用了3M空间，384个block，384*8k/1024=3M</span>
SQL<span class="token operator">></span> <span class="token keyword">SELECT</span> T<span class="token punctuation">.</span>TABLESPACE_NAME<span class="token punctuation">,</span> <span class="token function">SUM</span><span class="token punctuation">(</span>T<span class="token punctuation">.</span>BYTES<span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">1024</span><span class="token operator">/</span><span class="token number">1024</span><span class="token operator">||</span><span class="token string">'M'</span> <span class="token keyword">AS</span> USED<span class="token punctuation">,</span> <span class="token function">SUM</span><span class="token punctuation">(</span>T<span class="token punctuation">.</span>BLOCKS<span class="token punctuation">)</span>
  <span class="token number">2</span>  <span class="token keyword">FROM</span> DBA_SEGMENTS T
  <span class="token number">3</span>  <span class="token keyword">WHERE</span> T<span class="token punctuation">.</span>TABLESPACE_NAME <span class="token operator">=</span> <span class="token string">'SERICAL'</span>
  <span class="token number">4</span>  <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> T<span class="token punctuation">.</span>TABLESPACE_NAME<span class="token punctuation">;</span>

TABLESPACE_NAME                USED    <span class="token function">SUM</span><span class="token punctuation">(</span>T<span class="token punctuation">.</span>BLOCKS<span class="token punctuation">)</span>
<span class="token comment" spellcheck="true">------------------- --------------     -------------</span>
   SERICAL                     3M          <span class="token number">384</span>

<span class="token comment" spellcheck="true">-- 这时候SERICAL表空间最大值</span>
SQL<span class="token operator">></span> <span class="token keyword">SELECT</span> T<span class="token punctuation">.</span>TABLESPACE_NAME<span class="token punctuation">,</span>
  <span class="token number">2</span>  <span class="token function">SUM</span><span class="token punctuation">(</span>T<span class="token punctuation">.</span>BYTES<span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">1024</span><span class="token operator">/</span><span class="token number">1024</span> <span class="token keyword">AS</span> BYTES<span class="token punctuation">,</span>
  <span class="token number">3</span>  <span class="token function">SUM</span><span class="token punctuation">(</span>T<span class="token punctuation">.</span>BLOCKS<span class="token punctuation">)</span> <span class="token keyword">AS</span> BLOCKS<span class="token punctuation">,</span>
  <span class="token number">4</span>  <span class="token function">SUM</span><span class="token punctuation">(</span>T<span class="token punctuation">.</span>MAXBYTES<span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">1024</span><span class="token operator">/</span><span class="token number">1024</span> <span class="token keyword">AS</span> MAXBYTES<span class="token punctuation">,</span>
  <span class="token number">5</span>  <span class="token function">SUM</span><span class="token punctuation">(</span>T<span class="token punctuation">.</span>MAXBLOCKS<span class="token punctuation">)</span> <span class="token keyword">AS</span> MAXBLOCKS
  <span class="token number">6</span>  <span class="token keyword">FROM</span> DBA_DATA_FILES T
  <span class="token number">7</span>  <span class="token keyword">WHERE</span> T<span class="token punctuation">.</span>TABLESPACE_NAME <span class="token operator">=</span> <span class="token string">'SERICAL'</span>
  <span class="token number">8</span>  <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> T<span class="token punctuation">.</span>TABLESPACE_NAME<span class="token punctuation">;</span>
TABLESPACE_NAME    BYTES     BLOCKS     MAXBYTES    MAXBLOCKS
<span class="token comment" spellcheck="true">---------------- ---------- ---------- ----------   ----------</span>
SERICAL            <span class="token number">1024</span>     <span class="token number">131072</span>     <span class="token number">32767.9843</span>    <span class="token number">4194302</span>
</code></pre>
<p>随着数据插入表空间会自动扩容，未指定<code>MAXSIZE</code>或者<code>MAXSIZE UNLIMITED</code>，<code>Windows</code>下<code>NTFS</code>最大<code>32G</code></p>
<pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 未达到32G前可以使用下面sql来弥补创建表空间时的不足</span>
<span class="token keyword">ALTER</span> <span class="token keyword">DATABASE</span> DATAFILE <span class="token string">'D:\app\serical\oradata\god\SERICAL.DBF'</span> RESIZE 200M<span class="token punctuation">;</span>
<span class="token keyword">ALTER</span> <span class="token keyword">DATABASE</span> DATAFILE <span class="token string">'D:\app\serical\oradata\god\SERICAL.DBF'</span> AUTOEXTEND <span class="token keyword">ON</span> MAXSIZE UNLIMITED<span class="token punctuation">;</span>
</code></pre>
<p><strong>接近32G时，比如生产库的30G，在不动原来表空间的情况下可以采用添加DATAFILE的方式扩充表空间</strong></p>
<pre class=" language-sql"><code class="language-sql">SQL<span class="token operator">></span> <span class="token keyword">ALTER</span> <span class="token keyword">TABLESPACE</span> SERICAL <span class="token keyword">ADD</span> DATAFILE <span class="token string">'D:\app\serical\oradata\god\SERICAL1.DBF'</span> 
    SIZE 100M AUTOEXTEND <span class="token keyword">ON</span><span class="token punctuation">;</span>
<span class="token keyword">Tablespace</span> altered
<span class="token comment" spellcheck="true">-- 这时的表空间最大值，可以看出扩大了一倍</span>
SQL<span class="token operator">></span> <span class="token keyword">SELECT</span> T<span class="token punctuation">.</span>TABLESPACE_NAME<span class="token punctuation">,</span>
  <span class="token number">2</span>  <span class="token function">SUM</span><span class="token punctuation">(</span>T<span class="token punctuation">.</span>BYTES<span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">1024</span><span class="token operator">/</span><span class="token number">1024</span> <span class="token keyword">AS</span> BYTES<span class="token punctuation">,</span>
  <span class="token number">3</span>  <span class="token function">SUM</span><span class="token punctuation">(</span>T<span class="token punctuation">.</span>BLOCKS<span class="token punctuation">)</span> <span class="token keyword">AS</span> BLOCKS<span class="token punctuation">,</span>
  <span class="token number">4</span>  <span class="token function">SUM</span><span class="token punctuation">(</span>T<span class="token punctuation">.</span>MAXBYTES<span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">1024</span><span class="token operator">/</span><span class="token number">1024</span> <span class="token keyword">AS</span> MAXBYTES<span class="token punctuation">,</span>
  <span class="token number">5</span>  <span class="token function">SUM</span><span class="token punctuation">(</span>T<span class="token punctuation">.</span>MAXBLOCKS<span class="token punctuation">)</span> <span class="token keyword">AS</span> MAXBLOCKS
  <span class="token number">6</span>  <span class="token keyword">FROM</span> DBA_DATA_FILES T
  <span class="token number">7</span>  <span class="token keyword">WHERE</span> T<span class="token punctuation">.</span>TABLESPACE_NAME <span class="token operator">=</span> <span class="token string">'SERICAL'</span>
  <span class="token number">8</span>  <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> T<span class="token punctuation">.</span>TABLESPACE_NAME<span class="token punctuation">;</span>
TABLESPACE_NAME  BYTES     BLOCKS      MAXBYTES   MAXBLOCKS
<span class="token comment" spellcheck="true">--------------- ---------- ---------- ---------- ----------</span>
SERICAL          <span class="token number">300</span>      <span class="token number">38400</span>        <span class="token number">65535.9687</span>    <span class="token number">8388604</span>
</code></pre>
<h3 id="应用"><a href="#应用" class="headerlink" title="应用"></a>应用</h3><pre class=" language-sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">TABLESPACE</span> PERSONAL_DATA
LOGGING
DATAFILE <span class="token string">'D:\app\serical\oradata\orcl\PERSONAL_DATA.DBF'</span>
SIZE 1G
AUTOEXTEND <span class="token keyword">ON</span><span class="token punctuation">;</span>

<span class="token keyword">ALTER</span> <span class="token keyword">TABLESPACE</span> PERSONAL_DATA
<span class="token keyword">ADD</span> DATAFILE <span class="token string">'D:\app\serical\oradata\orcl\PERSONAL_DATA1.DBF'</span>
SIZE 100M
AUTOEXTEND <span class="token keyword">ON</span><span class="token punctuation">;</span>

<span class="token keyword">CREATE</span> <span class="token keyword">TABLESPACE</span> SJXF
LOGGING
DATAFILE <span class="token string">'D:\app\serical\oradata\orcl\SJXF.DBF'</span>
SIZE 1G
AUTOEXTEND <span class="token keyword">ON</span><span class="token punctuation">;</span>


<span class="token keyword">ALTER</span> <span class="token keyword">TABLESPACE</span> SJXF
<span class="token keyword">ADD</span> DATAFILE <span class="token string">'D:\app\serical\oradata\orcl\SJXF1.DBF'</span>
SIZE 100M
AUTOEXTEND <span class="token keyword">ON</span><span class="token punctuation">;</span>

<span class="token keyword">CREATE</span> <span class="token keyword">USER</span> LOUDI IDENTIFIED <span class="token keyword">BY</span> <span class="token string">"123456a"</span>
<span class="token keyword">DEFAULT</span> <span class="token keyword">TABLESPACE</span> PERSONAL_DATA<span class="token punctuation">;</span>

<span class="token keyword">GRANT</span> DBA<span class="token punctuation">,</span> RESOURCE<span class="token punctuation">,</span> <span class="token keyword">CONNECT</span> <span class="token keyword">TO</span> LOUDI<span class="token punctuation">;</span>

<span class="token keyword">CREATE</span> DIRECTORY expdp_dir <span class="token keyword">AS</span> <span class="token string">'D:\app\expdp_dir'</span><span class="token punctuation">;</span>

<span class="token keyword">GRANT</span> <span class="token keyword">READ</span><span class="token punctuation">,</span> <span class="token keyword">WRITE</span> <span class="token keyword">ON</span> DIRECTORY expdp_dir <span class="token keyword">TO</span> LOUDI<span class="token punctuation">;</span>
</code></pre>
]]></content>
      
        <categories>
            
            <category> Oracle </category>
            
        </categories>
        
        
        <tags>
            
            <tag> oracle </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Oracle11g分区表自增长]]></title>
      <url>/2016/11/26/Oracle11g%E5%88%86%E5%8C%BA%E8%A1%A8%E8%87%AA%E5%A2%9E%E9%95%BF/</url>
      <content type="html"><![CDATA[<h3 id="相关sql语句"><a href="#相关sql语句" class="headerlink" title="相关sql语句"></a>相关sql语句</h3><pre class=" language-sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> CTEST
<span class="token punctuation">(</span> ID <span class="token keyword">INTEGER</span><span class="token punctuation">,</span>
  C_DATE <span class="token keyword">DATE</span><span class="token punctuation">)</span>
  <span class="token keyword">PARTITION</span> <span class="token keyword">BY</span> RANGE<span class="token punctuation">(</span>C_DATE <span class="token punctuation">)</span> INTERVAL<span class="token punctuation">(</span>NUMTOYMINTERVAL<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'YEAR'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>
  <span class="token keyword">PARTITION</span> PART_MIN <span class="token keyword">VALUES</span> LESS THAN <span class="token punctuation">(</span>TO_DATE<span class="token punctuation">(</span><span class="token string">'2015-01-01'</span><span class="token punctuation">,</span> <span class="token string">'YYYY-MM-DD'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> CTEST <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> TO_DATE<span class="token punctuation">(</span><span class="token string">'2013-11-01'</span><span class="token punctuation">,</span> <span class="token string">'YYYY-MM-DD'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> CTEST <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> TO_DATE<span class="token punctuation">(</span><span class="token string">'2014-11-01'</span><span class="token punctuation">,</span> <span class="token string">'YYYY-MM-DD'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> CTEST <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> TO_DATE<span class="token punctuation">(</span><span class="token string">'2015-11-01'</span><span class="token punctuation">,</span> <span class="token string">'YYYY-MM-DD'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> CTEST <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> TO_DATE<span class="token punctuation">(</span><span class="token string">'2016-11-01'</span><span class="token punctuation">,</span> <span class="token string">'YYYY-MM-DD'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> CTEST<span class="token punctuation">;</span>
        ID C_DATE
<span class="token comment" spellcheck="true">---------- -------------</span>
         <span class="token number">1</span> <span class="token number">01</span><span class="token operator">-</span><span class="token number">11</span>月<span class="token operator">-</span><span class="token number">14</span>
         <span class="token number">1</span> <span class="token number">01</span><span class="token operator">-</span><span class="token number">11</span>月<span class="token operator">-</span><span class="token number">13</span>
         <span class="token number">1</span> <span class="token number">01</span><span class="token operator">-</span><span class="token number">11</span>月<span class="token operator">-</span><span class="token number">15</span>
         <span class="token number">1</span> <span class="token number">01</span><span class="token operator">-</span><span class="token number">11</span>月<span class="token operator">-</span><span class="token number">16</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> CTEST <span class="token keyword">PARTITION</span> <span class="token punctuation">(</span>PART_MIN<span class="token punctuation">)</span><span class="token punctuation">;</span>
        ID C_DATE
<span class="token comment" spellcheck="true">---------- -------------</span>
         <span class="token number">1</span> <span class="token number">01</span><span class="token operator">-</span><span class="token number">11</span>月<span class="token operator">-</span><span class="token number">14</span>
         <span class="token number">1</span> <span class="token number">01</span><span class="token operator">-</span><span class="token number">11</span>月<span class="token operator">-</span><span class="token number">13</span>
<span class="token keyword">SELECT</span> TABLE_NAME<span class="token punctuation">,</span> PARTITION_NAME <span class="token keyword">FROM</span> USER_TAB_PARTITIONS T <span class="token keyword">WHERE</span> T<span class="token punctuation">.</span>TABLE_NAME <span class="token operator">=</span> <span class="token string">'CTEST'</span>
TABLE_NAME                     PARTITION_NAME
<span class="token comment" spellcheck="true">------------------------------ ----------------------------</span>
CTEST                          PART_MIN
CTEST                          SYS_P21
CTEST                          SYS_P22
</code></pre>
<h3 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h3><pre class=" language-sql"><code class="language-sql">interval使用之后，就不用手工增加分区，来适应数据的增长。 
根据年月 INTERVAL<span class="token punctuation">(</span>NUMTOYMINTERVAL<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">'YEAR'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> 
INTERVAL<span class="token punctuation">(</span>NUMTOYMINTERVAL<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">'MONTH'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> 
根据天 INTERVAL<span class="token punctuation">(</span>NUMTODSINTERVAL<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">'DAY'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre>
]]></content>
      
        <categories>
            
            <category> Oracle </category>
            
        </categories>
        
        
        <tags>
            
            <tag> oracle </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Oracle列类型转换]]></title>
      <url>/2016/08/17/Oracle%E5%88%97%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2/</url>
      <content type="html"><![CDATA[<h3 id="CHAR型转为INTEGER"><a href="#CHAR型转为INTEGER" class="headerlink" title="CHAR型转为INTEGER"></a>CHAR型转为INTEGER</h3><p>原来为char型，现需要改为integer型，当列中有数据后不能直接更改类型，需要先清空再更改类型，但这无疑会丢掉原来的数据。做法如下：</p>
<h3 id="第一步：添加TYPE1字段"><a href="#第一步：添加TYPE1字段" class="headerlink" title="第一步：添加TYPE1字段"></a>第一步：添加TYPE1字段</h3><pre class=" language-sql"><code class="language-sql"><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> TABLE_NAME <span class="token keyword">ADD</span> TYPE1 <span class="token keyword">INTEGER</span> <span class="token keyword">DEFAULT</span> <span class="token number">0</span><span class="token punctuation">;</span>
</code></pre>
<h3 id="第二步：UPDATE-TYPE1的值为TYPE的值"><a href="#第二步：UPDATE-TYPE1的值为TYPE的值" class="headerlink" title="第二步：UPDATE TYPE1的值为TYPE的值"></a>第二步：UPDATE TYPE1的值为TYPE的值</h3><pre class=" language-sql"><code class="language-sql"><span class="token keyword">UPDATE</span> TABLE_NAME T <span class="token keyword">SET</span> T<span class="token punctuation">.</span>TYPE1 <span class="token operator">=</span> NVL<span class="token punctuation">(</span>T<span class="token punctuation">.</span><span class="token keyword">TYPE</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre>
<h3 id="第三步：删除原TYPE列"><a href="#第三步：删除原TYPE列" class="headerlink" title="第三步：删除原TYPE列"></a>第三步：删除原TYPE列</h3><pre class=" language-sql"><code class="language-sql"><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> TABLE_NAME <span class="token keyword">DROP</span> <span class="token keyword">COLUMN</span> <span class="token keyword">TYPE</span><span class="token punctuation">;</span>
</code></pre>
<h3 id="第四步：重命名TYPE1为TYPE"><a href="#第四步：重命名TYPE1为TYPE" class="headerlink" title="第四步：重命名TYPE1为TYPE"></a>第四步：重命名TYPE1为TYPE</h3><pre class=" language-sql"><code class="language-sql"><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> TABLE_NAME <span class="token keyword">RENAME</span> <span class="token keyword">COLUMN</span> TYPE1 <span class="token keyword">TO</span> <span class="token keyword">TYPE</span><span class="token punctuation">;</span>
</code></pre>
]]></content>
      
        <categories>
            
            <category> Oracle </category>
            
        </categories>
        
        
        <tags>
            
            <tag> oracle </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Windows配置Nginx服务]]></title>
      <url>/2016/08/12/Windows%E9%85%8D%E7%BD%AENginx%E6%9C%8D%E5%8A%A1/</url>
      <content type="html"><![CDATA[<h3 id="问题背景"><a href="#问题背景" class="headerlink" title="问题背景"></a>问题背景</h3><p>公司服务器为windows系统，几次停电关机后门户网站由于Nginx并没有重启而挂了。</p>
<h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><p>nginx下载地址：<a href="http://nginx.org/download/nginx-1.10.1.zip" target="_blank" rel="external">http://nginx.org/download/nginx-1.10.1.zip</a><br><br>github地址：<a href="https://github.com/kohsuke/winsw" target="_blank" rel="external">https://github.com/kohsuke/winsw</a><br><br>下载地址：<a href="http://repo.jenkins-ci.org/releases/com/sun/winsw/winsw/" target="_blank" rel="external">http://repo.jenkins-ci.org/releases/com/sun/winsw/winsw/</a> 我使用的是1.18<br></p>
<h3 id="1、配置"><a href="#1、配置" class="headerlink" title="1、配置"></a>1、配置</h3><p>下载<code>winsw-1.18-bin.exe</code>放到<code>Nginx</code>根目录下重命名为<code>app.exe</code>，新建一个<code>app.xml</code>，Google了网上配置如下：</p>
<pre class=" language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>service</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>nginx<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>nginx<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">></span></span>nginx<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>executable</span><span class="token punctuation">></span></span>c:\nginx\nginx.exe<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>executable</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>logpath</span><span class="token punctuation">></span></span>c:\nginx\<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>logpath</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>logmode</span><span class="token punctuation">></span></span>roll<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>logmode</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>depend</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>depend</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>startargument</span><span class="token punctuation">></span></span>-p c:\nginx<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>startargument</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>stopargument</span><span class="token punctuation">></span></span>-p c:\nginx -s stop<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>stopargument</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>service</span><span class="token punctuation">></span></span>
</code></pre>
<h3 id="2、安装服务，进入Nginx根目录使用app-exe-install安装服务，其他命令请看github文档"><a href="#2、安装服务，进入Nginx根目录使用app-exe-install安装服务，其他命令请看github文档" class="headerlink" title="2、安装服务，进入Nginx根目录使用app.exe install安装服务，其他命令请看github文档"></a>2、安装服务，进入Nginx根目录使用<code>app.exe install</code>安装服务，其他命令请看<code>github</code>文档</h3><h3 id="3、在使用过程中，下面两个-p后面不能有空格，否则报错找不到2个日志文件"><a href="#3、在使用过程中，下面两个-p后面不能有空格，否则报错找不到2个日志文件" class="headerlink" title="3、在使用过程中，下面两个-p后面不能有空格，否则报错找不到2个日志文件"></a>3、在使用过程中，下面两个-p后面不能有空格，否则报错找不到2个日志文件</h3><pre class=" language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>startargument</span><span class="token punctuation">></span></span>-p c:\nginx<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>startargument</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>stopargument</span><span class="token punctuation">></span></span>-p c:\nginx -s stop<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>stopargument</span><span class="token punctuation">></span></span>
</code></pre>
<h3 id="4、在服务里面停止不了Nginx2个进程，仔细看了github文档"><a href="#4、在服务里面停止不了Nginx2个进程，仔细看了github文档" class="headerlink" title="4、在服务里面停止不了Nginx2个进程，仔细看了github文档"></a>4、在服务里面停止不了Nginx2个进程，仔细看了<a href="https://github.com/kohsuke/winsw#stoptimeout" target="_blank" rel="external">github</a>文档</h3><blockquote>
<p>stoptimeout<br>When the service is requested to stop, winsw first attempts to send Ctrl+C signal to the process, then wait for up to 15 seconds for the process to exit by itself gracefully. A process failing to do that (or if the process does not have a console), then winsw resorts to calling TerminateProcess API to kill the service instantly.</p>
</blockquote>
<p>最终去掉了<code>stopargument</code>参数</p>
<h3 id="5、使用workingdirectory来指定当前PATH"><a href="#5、使用workingdirectory来指定当前PATH" class="headerlink" title="5、使用workingdirectory来指定当前PATH"></a>5、使用workingdirectory来指定当前PATH</h3><blockquote>
<p>Some services need to run with a working directory specified. To do this, specify a element like this:</p>
<pre class=" language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>workingdirectory</span><span class="token punctuation">></span></span>C:\application<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>workingdirectory</span><span class="token punctuation">></span></span>
</code></pre>
</blockquote>
<p>最终配置如下：</p>
<pre class=" language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>service</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>nginx<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>nginx<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">></span></span>nginx<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>workingdirectory</span><span class="token punctuation">></span></span>D:\protal\nginx<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>workingdirectory</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>executable</span><span class="token punctuation">></span></span>nginx.exe<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>executable</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>logmode</span><span class="token punctuation">></span></span>roll<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>logmode</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>service</span><span class="token punctuation">></span></span>
</code></pre>
<p>可满足创建Windows服务，开机启动，停止Nginx进程</p>
]]></content>
      
        <categories>
            
            <category> Nginx </category>
            
        </categories>
        
        
        <tags>
            
            <tag> windows </tag>
            
            <tag> nginx </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Windows安装redis]]></title>
      <url>/2016/08/01/Windows%E5%AE%89%E8%A3%85redis/</url>
      <content type="html"><![CDATA[<h3 id="一、单实例安装"><a href="#一、单实例安装" class="headerlink" title="一、单实例安装"></a>一、单实例安装</h3><ol>
<li>下载<a href="https://github.com/MicrosoftArchive/redis/releases/download/win-3.2.100/Redis-x64-3.2.100.msi" target="_blank" rel="external">Redis-x64-3.2.100.msi</a><br>一路下一步就OK了，常用配置如下：<pre class=" language-ini"><code class="language-ini">bind 127.0.0.1
port 6379
appendonly no
requirepass foobared
</code></pre>
</li>
<li>有些版本服务器安装不上，则需要下载<a href="https://github.com/MicrosoftArchive/redis/releases/download/win-3.2.100/Redis-x64-3.2.100.zip" target="_blank" rel="external">压缩包</a>手动安装了,<br>命令行（<strong>管理员</strong>）进入解压的目录<pre class=" language-ini"><code class="language-ini"># 如果安装失败尝试redis.windows-service.conf的绝对路径
redis-server --service-install redis.windows-service.conf
</code></pre>
<h3 id="二、多实例安装"><a href="#二、多实例安装" class="headerlink" title="二、多实例安装"></a>二、多实例安装</h3>修改<code>redis.windows-service.conf</code>中的<code>port</code>端口，必须与其他实例端口不一样。<pre class=" language-ini"><code class="language-ini">port 6379
</code></pre>
参照上面第二步，命令行（<strong>管理员</strong>）进入解压的目录，增加<code>--service-name</code>参数去重命名<code>服务名</code><pre class=" language-ini"><code class="language-ini">redis-server.exe --service-install redis.windows-service.conf --service-name redis1
</code></pre>
</li>
</ol>
]]></content>
      
        <categories>
            
            <category> Redis </category>
            
        </categories>
        
        
        <tags>
            
            <tag> windows </tag>
            
            <tag> redis </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Oracle两个时间段交集]]></title>
      <url>/2016/07/26/Oracle%E4%B8%A4%E4%B8%AA%E6%97%B6%E9%97%B4%E6%AE%B5%E4%BA%A4%E9%9B%86/</url>
      <content type="html"><![CDATA[<p>判断条件：<br>    <code>结束值最小</code>的 <code>大于</code> <code>开始值最大的</code><br>    <img src="/static/14.png" alt=""></p>
]]></content>
      
        <categories>
            
            <category> Oracle </category>
            
        </categories>
        
        
        <tags>
            
            <tag> oracle </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Linux环境配置]]></title>
      <url>/2016/06/19/Linux%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</url>
      <content type="html"><![CDATA[<h3 id="安装VMTools工具"><a href="#安装VMTools工具" class="headerlink" title="安装VMTools工具"></a>安装VMTools工具</h3><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#虚拟机-->安装Vmware Tools</span>
<span class="token punctuation">[</span>root@serical01 /<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># cp VMwareTools-8.6.1-19175.tar.gz ~/Downloads</span>
<span class="token punctuation">[</span>root@serical01 /<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># tar -zxvf VMwareTools-8.6.1-19175.tar.gz</span>
<span class="token punctuation">[</span>root@serical01 /<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># cd vmware-tools-distrib</span>
<span class="token punctuation">[</span>root@serical01 /<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ./vmware-install.pl</span>
<span class="token comment" spellcheck="true">#重启</span>
<span class="token punctuation">[</span>root@serical01 /<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># reboot</span>
</code></pre>
<h3 id="配置IP"><a href="#配置IP" class="headerlink" title="配置IP"></a>配置IP</h3><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@serical01 /<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># vim /etc/sysconfig/network-scripts/ifcfg-eth0</span>
<span class="token comment" spellcheck="true">#主要修改如下：</span>
BOOTPROTO<span class="token operator">=</span>static
IPADDR<span class="token operator">=</span>192.168.8.88
NETMASK<span class="token operator">=</span>255.255.255.0
GATEWAY<span class="token operator">=</span>192.168.8.1
DNS1<span class="token operator">=</span>8.8.8.8
DNS1<span class="token operator">=</span>8.8.4.4
</code></pre>
<h3 id="配置主机名"><a href="#配置主机名" class="headerlink" title="配置主机名"></a>配置主机名</h3><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@serical01 /<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># vim /etc/sysconfig/network</span>
HOSTNAME<span class="token operator">=</span>serical01

<span class="token punctuation">[</span>root@serical01 /<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># vim /etc/hosts</span>
192.168.8.88    serical01
</code></pre>
<h3 id="关闭防火墙"><a href="#关闭防火墙" class="headerlink" title="关闭防火墙"></a>关闭防火墙</h3><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#查看各种启动级别下iptables自启动情况</span>
<span class="token punctuation">[</span>root@serical01 /<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># chkconfig iptables --list</span>
<span class="token comment" spellcheck="true">#7种启动级别查看</span>
<span class="token punctuation">[</span>root@serical01 /<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># vim /etc/inittab</span>
<span class="token comment" spellcheck="true">#关闭防火墙自启动</span>
<span class="token punctuation">[</span>root@serical01 /<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># chkconfig iptables off</span>
</code></pre>
<h3 id="配置163的yum源"><a href="#配置163的yum源" class="headerlink" title="配置163的yum源"></a>配置163的yum源</h3><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#1.下载repo文件</span>
<span class="token punctuation">[</span>root@serical01 /<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># wget http://mirrors.163.com/.help/CentOS6-Base-163.repo</span>
<span class="token comment" spellcheck="true">#2.备份并替换系统的repo文件</span>
<span class="token punctuation">[</span>root@serical01 /<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># cd /etc/yum.repos.d/</span>
<span class="token punctuation">[</span>root@serical01 /<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># mv CentOS-Base.repo CentOS-Base.repo.bak</span>
<span class="token punctuation">[</span>root@serical01 /<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># mv CentOS6-Base-163.repo CentOS-Base.repo</span>
<span class="token comment" spellcheck="true">#3.执行yum源更新</span>
<span class="token punctuation">[</span>root@serical01 /<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># yum clean all</span>
<span class="token punctuation">[</span>root@serical01 /<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># yum makecache</span>
<span class="token punctuation">[</span>root@serical01 /<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># yum update</span>
</code></pre>
]]></content>
      
        <categories>
            
            <category> Linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> linux </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Tuple，Array，Map基本操作]]></title>
      <url>/2016/06/06/Tuple%EF%BC%8CArray%EF%BC%8CMap%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/</url>
      <content type="html"><![CDATA[<pre class=" language-scala"><code class="language-scala"><span class="token comment" spellcheck="true">/**
 * 元组，数组，map
 */</span>
<span class="token keyword">object</span> Test3 <span class="token punctuation">{</span>

  <span class="token keyword">def</span> main<span class="token punctuation">(</span>args<span class="token operator">:</span> Array<span class="token punctuation">[</span><span class="token builtin">String</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment" spellcheck="true">// 元组</span>
    <span class="token keyword">var</span> tuple <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">"hello"</span><span class="token punctuation">,</span> <span class="token string">"serical"</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span>
    println<span class="token punctuation">(</span>tuple<span class="token punctuation">.</span>_1<span class="token punctuation">)</span>
    println<span class="token punctuation">(</span>tuple<span class="token punctuation">.</span>_2<span class="token punctuation">)</span>
    println<span class="token punctuation">(</span>tuple<span class="token punctuation">.</span>_3<span class="token punctuation">)</span>

    <span class="token comment" spellcheck="true">// 数组</span>
    <span class="token keyword">var</span> arr <span class="token operator">=</span> Array<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token keyword">&lt;-</span> <span class="token number">0</span> until arr<span class="token punctuation">.</span>length<span class="token punctuation">)</span>
      print<span class="token punctuation">(</span>arr<span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">","</span><span class="token punctuation">)</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span>a <span class="token keyword">&lt;-</span> arr<span class="token punctuation">)</span>
      print<span class="token punctuation">(</span>a <span class="token operator">+</span> <span class="token string">","</span><span class="token punctuation">)</span>

    arr<span class="token punctuation">.</span>foreach<span class="token punctuation">(</span>a <span class="token keyword">=></span> print<span class="token punctuation">(</span>a <span class="token operator">+</span> <span class="token string">","</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

    <span class="token comment" spellcheck="true">// map</span>
    println<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">var</span> map <span class="token operator">=</span> Map<span class="token punctuation">(</span><span class="token string">"key1"</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token string">"key2"</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token string">"serical"</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>k<span class="token punctuation">,</span> v<span class="token punctuation">)</span> <span class="token keyword">&lt;-</span> map<span class="token punctuation">)</span>
      println<span class="token punctuation">(</span>k<span class="token punctuation">,</span> v<span class="token punctuation">)</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>_<span class="token punctuation">,</span> v<span class="token punctuation">)</span> <span class="token keyword">&lt;-</span> map<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// placeholder</span>
      println<span class="token punctuation">(</span>v<span class="token punctuation">)</span>

    <span class="token comment" spellcheck="true">// file</span>
    <span class="token comment" spellcheck="true">//val file = Source.fromFile("d:\\jd-gui.cfg")</span>
    <span class="token keyword">val</span> file <span class="token operator">=</span> Source<span class="token punctuation">.</span>fromURL<span class="token punctuation">(</span><span class="token string">"http://360.com"</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>f <span class="token keyword">&lt;-</span> file<span class="token punctuation">.</span>getLines<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> println<span class="token punctuation">(</span>f<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre>
]]></content>
      
        <categories>
            
            <category> Scala </category>
            
        </categories>
        
        
        <tags>
            
            <tag> scala </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Scala之Map，Tuple，Zip操作]]></title>
      <url>/2016/06/05/Scala%E4%B9%8BMap%EF%BC%8CTuple%EF%BC%8CZip%E6%93%8D%E4%BD%9C/</url>
      <content type="html"><![CDATA[<pre class=" language-scala"><code class="language-scala"><span class="token comment" spellcheck="true">/**
 * map，tuple，zip实战
 */</span>
<span class="token keyword">object</span> Test1 <span class="token punctuation">{</span>

  <span class="token keyword">def</span> main<span class="token punctuation">(</span>args<span class="token operator">:</span> Array<span class="token punctuation">[</span><span class="token builtin">String</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Unit</span> <span class="token operator">=</span> <span class="token punctuation">{</span>

    <span class="token comment" spellcheck="true">// 不可变map</span>
    <span class="token keyword">val</span> map <span class="token operator">=</span> Map<span class="token punctuation">(</span><span class="token string">"scala"</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token string">"hadoop"</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token number">8</span><span class="token punctuation">)</span>
    <span class="token comment" spellcheck="true">// 返回一个新的map</span>
    map<span class="token punctuation">.</span>+<span class="token punctuation">(</span><span class="token string">"java"</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token number">7</span><span class="token punctuation">)</span>
    map<span class="token punctuation">.</span>+<span class="token operator">+</span><span class="token operator">:</span><span class="token punctuation">(</span>Map<span class="token punctuation">(</span><span class="token string">"aa"</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    println<span class="token punctuation">(</span><span class="token string">"1 : "</span> <span class="token operator">+</span> map<span class="token punctuation">)</span>
    <span class="token keyword">val</span> m1 <span class="token operator">=</span> <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>k<span class="token punctuation">,</span> v<span class="token punctuation">)</span> <span class="token keyword">&lt;-</span> map<span class="token punctuation">)</span> <span class="token keyword">yield</span> <span class="token punctuation">(</span>k <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">,</span> v <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">)</span>
    println<span class="token punctuation">(</span>m1<span class="token punctuation">)</span>

    println<span class="token punctuation">(</span>map<span class="token punctuation">.</span>getOrElse<span class="token punctuation">(</span><span class="token string">"scala"</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

    <span class="token comment" spellcheck="true">// 可变map</span>
    <span class="token keyword">var</span> scores <span class="token operator">=</span> scala<span class="token punctuation">.</span>collection<span class="token punctuation">.</span>mutable<span class="token punctuation">.</span>Map<span class="token punctuation">(</span><span class="token string">"java"</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token string">"scala"</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token string">"spark"</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token number">9</span><span class="token punctuation">)</span>
    scores <span class="token operator">+=</span> <span class="token punctuation">(</span><span class="token string">"js"</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 增加</span>
    scores <span class="token operator">-=</span> <span class="token string">"java"</span> <span class="token comment" spellcheck="true">// 删除</span>
    println<span class="token punctuation">(</span>scores<span class="token punctuation">)</span>

    <span class="token comment" spellcheck="true">// sortMap,排序map</span>
    <span class="token keyword">val</span> sort <span class="token operator">=</span> SortedMap<span class="token punctuation">(</span><span class="token number">4</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token string">"java"</span><span class="token punctuation">,</span> <span class="token number">2</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token string">"js"</span><span class="token punctuation">,</span> <span class="token number">34</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token string">"scala"</span><span class="token punctuation">)</span>
    println<span class="token punctuation">(</span>sort<span class="token punctuation">)</span>

    <span class="token comment" spellcheck="true">// tuple，下标从1开始</span>
    <span class="token keyword">val</span> tuple <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4.5</span><span class="token punctuation">,</span> <span class="token string">"serical"</span><span class="token punctuation">,</span> <span class="token string">"java"</span><span class="token punctuation">)</span>
    println<span class="token punctuation">(</span>tuple<span class="token punctuation">.</span>_1<span class="token punctuation">)</span>
    <span class="token keyword">var</span> <span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">,</span> d<span class="token punctuation">,</span> e<span class="token punctuation">)</span> <span class="token operator">=</span> tuple
    <span class="token keyword">var</span> <span class="token punctuation">(</span>f<span class="token punctuation">,</span> _<span class="token punctuation">,</span> _<span class="token punctuation">,</span> _<span class="token punctuation">,</span> _<span class="token punctuation">)</span> <span class="token operator">=</span> tuple
    println<span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">,</span> d<span class="token punctuation">,</span> e<span class="token punctuation">,</span> f<span class="token punctuation">)</span>

    <span class="token comment" spellcheck="true">// 返回一个tuple</span>
    println<span class="token punctuation">(</span><span class="token string">"Java Scala"</span><span class="token punctuation">.</span>partition<span class="token punctuation">(</span>_<span class="token punctuation">.</span>isUpper<span class="token punctuation">)</span><span class="token punctuation">)</span>

    <span class="token comment" spellcheck="true">// zip操作</span>
    <span class="token keyword">val</span> arr1 <span class="token operator">=</span> Array<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">val</span> arr2 <span class="token operator">=</span> Array<span class="token punctuation">(</span><span class="token string">"a"</span><span class="token punctuation">,</span> <span class="token string">"b"</span><span class="token punctuation">,</span> <span class="token string">"c"</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span> <span class="token keyword">&lt;-</span> arr1<span class="token punctuation">.</span>zip<span class="token punctuation">(</span>arr2<span class="token punctuation">)</span><span class="token punctuation">)</span> print<span class="token punctuation">(</span>y <span class="token operator">*</span> x<span class="token punctuation">)</span>

  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre>
]]></content>
      
        <categories>
            
            <category> Scala </category>
            
        </categories>
        
        
        <tags>
            
            <tag> scala </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Win10，Centos7]]></title>
      <url>/2016/06/04/Win10%EF%BC%8CCentos7/</url>
      <content type="html"><![CDATA[<h3 id="Win10企业版激活，管理员运行CMD，然后执行以下命令"><a href="#Win10企业版激活，管理员运行CMD，然后执行以下命令" class="headerlink" title="Win10企业版激活，管理员运行CMD，然后执行以下命令"></a>Win10企业版激活，管理员运行CMD，然后执行以下命令</h3><pre class=" language-bash"><code class="language-bash">slmgr.vbs /upk
slmgr /ipk NPPR9-FWDCX-D2C8J-H872K-2YT43
slmgr /skms zh.us.to
slmgr /ato
</code></pre>
<h3 id="修改窗口颜色："><a href="#修改窗口颜色：" class="headerlink" title="修改窗口颜色："></a>修改窗口颜色：</h3><pre class=" language-bash"><code class="language-bash">HKEY_CURRENT_USER\Control Panel\Colors
Window 改为 204 232 207
HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Themes\DefaultColors\Standard
Window的值为 <span class="token variable"><span class="token variable">`</span>cce8cf<span class="token variable">`</span></span> 其实就是 204 232 207的16进制数
</code></pre>
<p><img src="/static/1.png" alt="颜色图片"></p>
<h3 id="删除自带应用"><a href="#删除自带应用" class="headerlink" title="删除自带应用"></a>删除自带应用</h3><pre class=" language-bash"><code class="language-bash">Get-AppxPackage -AllUsers <span class="token operator">|</span> Remove-AppxPackage
</code></pre>
<h3 id="Win10离线安装-NET-Framework-3-5"><a href="#Win10离线安装-NET-Framework-3-5" class="headerlink" title="Win10离线安装.NET Framework 3.5"></a>Win10离线安装.NET Framework 3.5</h3><pre class=" language-bash"><code class="language-bash">dism.exe /online /enable-feature /featurename:netfx3 /Source:L:\sources\sxs
</code></pre>
<h3 id="Centos7添加启动项代码"><a href="#Centos7添加启动项代码" class="headerlink" title="Centos7添加启动项代码"></a>Centos7添加启动项代码</h3><pre class=" language-bash"><code class="language-bash">title CentOS7 
kernel <span class="token punctuation">(</span>hd0,7<span class="token punctuation">)</span>/isolinux/vmlinuz linux repo<span class="token operator">=</span>hd:/dev/sda8:/
initrd <span class="token punctuation">(</span>hd0,7<span class="token punctuation">)</span>/isolinux/initrd.img
</code></pre>
]]></content>
      
        <categories>
            
            <category> OS </category>
            
        </categories>
        
        
        <tags>
            
            <tag> windows </tag>
            
            <tag> centos7 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Scala数组操作]]></title>
      <url>/2016/06/04/Scala%E6%95%B0%E7%BB%84%E6%93%8D%E4%BD%9C/</url>
      <content type="html"><![CDATA[<pre class=" language-scala"><code class="language-scala"><span class="token comment" spellcheck="true">/**
 * 数组操作
 */</span>
<span class="token keyword">object</span> Test <span class="token punctuation">{</span>

  <span class="token keyword">def</span> main<span class="token punctuation">(</span>args<span class="token operator">:</span> Array<span class="token punctuation">[</span><span class="token builtin">String</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Unit</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> num <span class="token operator">=</span> <span class="token keyword">new</span> Array<span class="token punctuation">[</span><span class="token builtin">Int</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>
    <span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token keyword">new</span> Array<span class="token punctuation">[</span><span class="token builtin">String</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>n <span class="token keyword">&lt;-</span> num<span class="token punctuation">)</span> print<span class="token punctuation">(</span>n <span class="token operator">+</span> <span class="token string">","</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>s <span class="token keyword">&lt;-</span> str<span class="token punctuation">)</span> print<span class="token punctuation">(</span>s <span class="token operator">+</span> <span class="token string">","</span><span class="token punctuation">)</span>

    <span class="token keyword">var</span> arr <span class="token operator">=</span> Array<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token string">"serical"</span><span class="token punctuation">)</span>
    arr<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">"serical"</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>a <span class="token keyword">&lt;-</span> arr<span class="token punctuation">)</span> print<span class="token punctuation">(</span>a <span class="token operator">+</span> <span class="token string">","</span><span class="token punctuation">)</span>

    println
    <span class="token keyword">var</span> ab <span class="token operator">=</span> <span class="token keyword">new</span> ArrayBuffer<span class="token punctuation">[</span><span class="token builtin">Int</span><span class="token punctuation">]</span>
    ab <span class="token operator">+=</span> <span class="token number">1</span>
    ab <span class="token operator">+=</span> <span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span>
    ab <span class="token operator">++</span><span class="token operator">=</span> Array<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>a <span class="token keyword">&lt;-</span> ab<span class="token punctuation">)</span> print<span class="token punctuation">(</span>a <span class="token operator">+</span> <span class="token string">","</span><span class="token punctuation">)</span>

    <span class="token comment" spellcheck="true">// 移除最后3个</span>
    ab<span class="token punctuation">.</span>trimEnd<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>
    println
    <span class="token keyword">for</span> <span class="token punctuation">(</span>a <span class="token keyword">&lt;-</span> ab<span class="token punctuation">)</span> print<span class="token punctuation">(</span>a <span class="token operator">+</span> <span class="token string">","</span><span class="token punctuation">)</span>
    <span class="token comment" spellcheck="true">// 移除前1个</span>
    ab<span class="token punctuation">.</span>trimStart<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
    println
    <span class="token keyword">for</span> <span class="token punctuation">(</span>a <span class="token keyword">&lt;-</span> ab<span class="token punctuation">)</span> print<span class="token punctuation">(</span>a <span class="token operator">+</span> <span class="token string">","</span><span class="token punctuation">)</span>
    <span class="token comment" spellcheck="true">// 0的位置插入2</span>
    ab<span class="token punctuation">.</span>insert<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>
    println
    <span class="token keyword">for</span> <span class="token punctuation">(</span>a <span class="token keyword">&lt;-</span> ab<span class="token punctuation">)</span> print<span class="token punctuation">(</span>a <span class="token operator">+</span> <span class="token string">","</span><span class="token punctuation">)</span>
    <span class="token comment" spellcheck="true">// 1位置插入3,4,5</span>
    ab<span class="token punctuation">.</span>insert<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span>
    println
    <span class="token keyword">for</span> <span class="token punctuation">(</span>a <span class="token keyword">&lt;-</span> ab<span class="token punctuation">)</span> print<span class="token punctuation">(</span>a <span class="token operator">+</span> <span class="token string">","</span><span class="token punctuation">)</span>
    <span class="token comment" spellcheck="true">// 移除位置为0的</span>
    ab<span class="token punctuation">.</span>remove<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
    println
    <span class="token keyword">for</span> <span class="token punctuation">(</span>a <span class="token keyword">&lt;-</span> ab<span class="token punctuation">)</span> print<span class="token punctuation">(</span>a <span class="token operator">+</span> <span class="token string">","</span><span class="token punctuation">)</span>
    <span class="token comment" spellcheck="true">// 移除0位置开始的2个</span>
    ab<span class="token punctuation">.</span>remove<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>
    println
    <span class="token keyword">for</span> <span class="token punctuation">(</span>a <span class="token keyword">&lt;-</span> ab<span class="token punctuation">.</span>toArray<span class="token punctuation">)</span> print<span class="token punctuation">(</span>a <span class="token operator">+</span> <span class="token string">","</span><span class="token punctuation">)</span>

    println
    <span class="token keyword">val</span> array <span class="token operator">=</span> Array<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span>
    <span class="token comment" spellcheck="true">// yield，返回一个新的数组</span>
    <span class="token keyword">val</span> a1 <span class="token operator">=</span> <span class="token keyword">for</span> <span class="token punctuation">(</span>a <span class="token keyword">&lt;-</span> array<span class="token punctuation">)</span> <span class="token keyword">yield</span> a <span class="token operator">*</span> <span class="token number">2</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>a <span class="token keyword">&lt;-</span> a1<span class="token punctuation">)</span> print<span class="token punctuation">(</span>a <span class="token operator">+</span> <span class="token string">","</span><span class="token punctuation">)</span>
    <span class="token comment" spellcheck="true">// 返回满足条件元素组成一个新的数组</span>
    <span class="token keyword">val</span> a2 <span class="token operator">=</span> <span class="token keyword">for</span> <span class="token punctuation">(</span>a <span class="token keyword">&lt;-</span> array <span class="token keyword">if</span> a <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">yield</span> a <span class="token operator">*</span> <span class="token number">2</span>
    println
    <span class="token keyword">for</span> <span class="token punctuation">(</span>a <span class="token keyword">&lt;-</span> a2<span class="token punctuation">)</span> print<span class="token punctuation">(</span>a <span class="token operator">+</span> <span class="token string">","</span><span class="token punctuation">)</span>
    <span class="token comment" spellcheck="true">// var a3 = array.filter(i => i % 2 == 0).map(_ * 2)</span>
    <span class="token keyword">var</span> a3 <span class="token operator">=</span> array<span class="token punctuation">.</span>filter<span class="token punctuation">(</span>_ <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span>map<span class="token punctuation">(</span>_ <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>a <span class="token keyword">&lt;-</span> a3<span class="token punctuation">)</span> print<span class="token punctuation">(</span>a <span class="token operator">+</span> <span class="token string">","</span><span class="token punctuation">)</span>

    <span class="token comment" spellcheck="true">// 排序，返回排序后的值</span>
    println
    <span class="token keyword">for</span> <span class="token punctuation">(</span>a <span class="token keyword">&lt;-</span> Array<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span>sorted<span class="token punctuation">)</span> print<span class="token punctuation">(</span>a <span class="token operator">+</span> <span class="token string">","</span><span class="token punctuation">)</span>

    <span class="token comment" spellcheck="true">// quickSort返回为Units</span>
    println
    <span class="token keyword">val</span> a4 <span class="token operator">=</span> Array<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>
    Sorting<span class="token punctuation">.</span>quickSort<span class="token punctuation">(</span>a4<span class="token punctuation">)</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>a <span class="token keyword">&lt;-</span> a4<span class="token punctuation">)</span> print<span class="token punctuation">(</span>a <span class="token operator">+</span> <span class="token string">","</span><span class="token punctuation">)</span>

    <span class="token comment" spellcheck="true">// 求max</span>
    println
    println<span class="token punctuation">(</span>Array<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">.</span>sum<span class="token punctuation">)</span>
    <span class="token comment" spellcheck="true">// 字符串max</span>
    println<span class="token punctuation">(</span>Array<span class="token punctuation">(</span><span class="token string">"a"</span><span class="token punctuation">,</span> <span class="token string">"bbb"</span><span class="token punctuation">,</span> <span class="token string">"ccc"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>max<span class="token punctuation">)</span>

    <span class="token comment" spellcheck="true">// 连接元素</span>
    <span class="token keyword">var</span> a5 <span class="token operator">=</span> Array<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span>
    println<span class="token punctuation">(</span>a5<span class="token punctuation">.</span>mkString<span class="token punctuation">)</span>
    println<span class="token punctuation">(</span>a5<span class="token punctuation">.</span>mkString<span class="token punctuation">(</span><span class="token string">"and"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    println<span class="token punctuation">(</span>a5<span class="token punctuation">.</span>mkString<span class="token punctuation">(</span><span class="token string">"&lt;"</span><span class="token punctuation">,</span> <span class="token string">","</span><span class="token punctuation">,</span> <span class="token string">">"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

    <span class="token comment" spellcheck="true">// 3行4列</span>
    <span class="token keyword">var</span> matrix <span class="token operator">=</span> Array<span class="token punctuation">.</span>ofDim<span class="token punctuation">[</span><span class="token builtin">Int</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span>
    matrix<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">2</span>
    println<span class="token punctuation">(</span>matrix<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

    <span class="token comment" spellcheck="true">// 可变数组</span>
    <span class="token keyword">var</span> a6 <span class="token operator">=</span> <span class="token keyword">new</span> Array<span class="token punctuation">[</span>Array<span class="token punctuation">[</span><span class="token builtin">Int</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token keyword">&lt;-</span> <span class="token number">0</span> until a6<span class="token punctuation">.</span>length<span class="token punctuation">)</span>
      a6<span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token keyword">new</span> Array<span class="token punctuation">[</span><span class="token builtin">Int</span><span class="token punctuation">]</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre>
]]></content>
      
        <categories>
            
            <category> Scala </category>
            
        </categories>
        
        
        <tags>
            
            <tag> scala </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Scala懒加载]]></title>
      <url>/2016/06/03/Scala%E6%87%92%E5%8A%A0%E8%BD%BD/</url>
      <content type="html"><![CDATA[<pre class=" language-scala"><code class="language-scala"><span class="token comment" spellcheck="true">/**
 * 懒加载
 */</span>
<span class="token keyword">object</span> Test5 <span class="token punctuation">{</span>

  <span class="token keyword">def</span> main<span class="token punctuation">(</span>args<span class="token operator">:</span> Array<span class="token punctuation">[</span><span class="token builtin">String</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Unit</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token keyword">lazy</span> <span class="token keyword">val</span> file <span class="token operator">=</span> Source<span class="token punctuation">.</span>fromFile<span class="token punctuation">(</span><span class="token string">"d://jd-gui.cfg"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    println<span class="token punctuation">(</span><span class="token string">"a"</span><span class="token punctuation">)</span>
    <span class="token comment" spellcheck="true">// 延迟加载，加了lazy，在此行之前是正常的，使用的时候才进行实例化,报错还是报错</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token keyword">&lt;-</span> file<span class="token punctuation">.</span>getLines<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> println<span class="token punctuation">(</span>i<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre>
]]></content>
      
        <categories>
            
            <category> Scala </category>
            
        </categories>
        
        
        <tags>
            
            <tag> scala </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Scala函数定义]]></title>
      <url>/2016/06/02/Scala%E5%87%BD%E6%95%B0%E5%AE%9A%E4%B9%89/</url>
      <content type="html"><![CDATA[<pre class=" language-scala"><code class="language-scala"><span class="token comment" spellcheck="true">/**
 * 函数定义
 */</span>
<span class="token keyword">object</span> Test4 <span class="token punctuation">{</span>

  <span class="token keyword">def</span> main<span class="token punctuation">(</span>args<span class="token operator">:</span> Array<span class="token punctuation">[</span><span class="token builtin">String</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Unit</span> <span class="token operator">=</span> <span class="token punctuation">{</span>

    <span class="token comment" spellcheck="true">//for (i &lt;- 1 to 2; j &lt;- 1 to 3) print(i * j + " ")</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token keyword">&lt;-</span> <span class="token number">1</span> to <span class="token number">2</span><span class="token punctuation">;</span> j <span class="token keyword">&lt;-</span> <span class="token number">1</span> to <span class="token number">4</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> j<span class="token punctuation">)</span><span class="token punctuation">)</span> print<span class="token punctuation">(</span>i<span class="token punctuation">,</span> j<span class="token punctuation">)</span>

    println
    <span class="token comment" spellcheck="true">// 普通的不用指定返回类型</span>
    <span class="token keyword">def</span> addNum<span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">Int</span><span class="token punctuation">)</span> <span class="token operator">=</span> x <span class="token operator">+</span> <span class="token number">100</span>
    <span class="token keyword">val</span> add <span class="token operator">=</span> <span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">Int</span><span class="token punctuation">)</span> <span class="token keyword">=></span> x <span class="token operator">+</span> <span class="token number">20</span>
    println<span class="token punctuation">(</span>addNum<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    println<span class="token punctuation">(</span>add<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

    <span class="token comment" spellcheck="true">// 递归需要指定返回类型</span>
    <span class="token keyword">def</span> fac<span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">Int</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Int</span> <span class="token operator">=</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>x <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token number">1</span> <span class="token keyword">else</span> x <span class="token operator">*</span> fac<span class="token punctuation">(</span>x <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span>
    println<span class="token punctuation">(</span>fac<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

    <span class="token comment" spellcheck="true">// 函数默认值</span>
    <span class="token keyword">def</span> concat<span class="token punctuation">(</span>content<span class="token operator">:</span> <span class="token builtin">String</span><span class="token punctuation">,</span> prefix<span class="token operator">:</span> <span class="token builtin">String</span> <span class="token operator">=</span> <span class="token string">",你好棒"</span><span class="token punctuation">)</span> <span class="token operator">=</span> content <span class="token operator">+</span> prefix
    println<span class="token punctuation">(</span>concat<span class="token punctuation">(</span><span class="token string">"Se vanter bleu"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    println<span class="token punctuation">(</span>concat<span class="token punctuation">(</span><span class="token string">"Se vanter bleu"</span><span class="token punctuation">,</span> <span class="token string">",你好帅"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

    <span class="token comment" spellcheck="true">// 可变参数</span>
    <span class="token keyword">def</span> adds<span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">Int</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
      <span class="token keyword">var</span> result <span class="token operator">=</span> <span class="token number">0</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token keyword">&lt;-</span> x<span class="token punctuation">)</span>
        result <span class="token operator">+=</span> i
      result
    <span class="token punctuation">}</span>
    println<span class="token punctuation">(</span>adds<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre>
]]></content>
      
        <categories>
            
            <category> Scala </category>
            
        </categories>
        
        
        <tags>
            
            <tag> scala </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Oracle trunc用法]]></title>
      <url>/2016/05/28/Oracle%20trunc%E7%94%A8%E6%B3%95/</url>
      <content type="html"><![CDATA[<pre class=" language-sql"><code class="language-sql">
<span class="token comment" spellcheck="true">-- 两个日期之间的月数</span>
<span class="token keyword">SELECT</span> 
    <span class="token function">ROUND</span><span class="token punctuation">(</span>
        MONTHS_BETWEEN<span class="token punctuation">(</span>
            TO_DATE<span class="token punctuation">(</span><span class="token string">'2015-03-31'</span><span class="token punctuation">,</span> <span class="token string">'YYYY-MM-DD'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> 
            TO_DATE<span class="token punctuation">(</span><span class="token string">'2015-01-01'</span><span class="token punctuation">,</span> <span class="token string">'YYYY-MM-DD'</span><span class="token punctuation">)</span>
        <span class="token punctuation">)</span>
    <span class="token punctuation">)</span> <span class="token keyword">FROM</span> DUAL<span class="token punctuation">;</span>

<span class="token comment" spellcheck="true">-- 两个日期之间的天数</span>
<span class="token keyword">SELECT</span> TO_DATE<span class="token punctuation">(</span><span class="token string">'2015-03-31'</span><span class="token punctuation">,</span> <span class="token string">'YYYY-MM-DD'</span><span class="token punctuation">)</span><span class="token operator">-</span>TO_DATE<span class="token punctuation">(</span><span class="token string">'2015-03-29'</span><span class="token punctuation">,</span> <span class="token string">'YYYY-MM-DD'</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> DUAL<span class="token punctuation">;</span>

<span class="token comment" spellcheck="true">--显示当前时间</span>
<span class="token keyword">select</span> to_char<span class="token punctuation">(</span>sysdate<span class="token punctuation">,</span><span class="token string">'yyyy-mm-dd hh24:mi:ss'</span><span class="token punctuation">)</span> <span class="token keyword">from</span> dual<span class="token punctuation">;</span>  

<span class="token comment" spellcheck="true">--截取到年（本年的第一天）</span>
<span class="token keyword">select</span> trunc<span class="token punctuation">(</span>sysdate<span class="token punctuation">,</span><span class="token string">'year'</span><span class="token punctuation">)</span> <span class="token keyword">from</span> dual<span class="token punctuation">;</span> 

<span class="token comment" spellcheck="true">--截取到季度（本季度的第一天）</span>
<span class="token keyword">select</span> trunc<span class="token punctuation">(</span>sysdate<span class="token punctuation">,</span><span class="token string">'q'</span><span class="token punctuation">)</span> <span class="token keyword">from</span> dual<span class="token punctuation">;</span> 

<span class="token comment" spellcheck="true">--截取到月（本月的第一天）</span>
<span class="token keyword">select</span> trunc<span class="token punctuation">(</span>sysdate<span class="token punctuation">,</span><span class="token string">'month'</span><span class="token punctuation">)</span> <span class="token keyword">from</span> dual<span class="token punctuation">;</span> 

<span class="token comment" spellcheck="true">--本月最后一天</span>
<span class="token keyword">SELECT</span> TRUNC<span class="token punctuation">(</span>LAST_DAY<span class="token punctuation">(</span>SYSDATE<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> DUAL<span class="token punctuation">;</span> 

<span class="token comment" spellcheck="true">--空</span>
<span class="token keyword">select</span> trunc<span class="token punctuation">(</span>sysdate<span class="token punctuation">,</span><span class="token string">''</span><span class="token punctuation">)</span> <span class="token keyword">from</span> dual<span class="token punctuation">;</span> 

<span class="token comment" spellcheck="true">--默认截取到日（当日的零点零分零秒）</span>
<span class="token keyword">select</span> to_char<span class="token punctuation">(</span>trunc<span class="token punctuation">(</span>sysdate<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'yyyymmdd hh24:mi:ss'</span><span class="token punctuation">)</span> <span class="token keyword">from</span> dual<span class="token punctuation">;</span> 

<span class="token comment" spellcheck="true">-- 离当前时间最近的周四，若当天为周四则返回当天，否则返回上周四</span>
<span class="token keyword">select</span> trunc<span class="token punctuation">(</span>sysdate<span class="token number">-1</span><span class="token punctuation">,</span><span class="token string">'w'</span><span class="token punctuation">)</span> <span class="token keyword">from</span> dual<span class="token punctuation">;</span>  

<span class="token comment" spellcheck="true">--截取到上周末（上周周六）</span>
<span class="token keyword">select</span> trunc<span class="token punctuation">(</span>sysdate<span class="token punctuation">,</span><span class="token string">'ww'</span><span class="token punctuation">)</span> <span class="token keyword">from</span> dual<span class="token punctuation">;</span>  

<span class="token comment" spellcheck="true">--截取到周（本周第一天，即上周日）</span>
<span class="token keyword">select</span> trunc<span class="token punctuation">(</span>sysdate<span class="token punctuation">,</span><span class="token string">'day'</span><span class="token punctuation">)</span> <span class="token keyword">from</span> dual<span class="token punctuation">;</span> 

<span class="token comment" spellcheck="true">--本周第2天，即本周一</span>
<span class="token keyword">select</span> trunc<span class="token punctuation">(</span>sysdate<span class="token punctuation">,</span><span class="token string">'iw'</span><span class="token punctuation">)</span> <span class="token keyword">from</span> dual<span class="token punctuation">;</span> 

<span class="token comment" spellcheck="true">--截取到日（当日的零点零分零秒）</span>
<span class="token keyword">select</span> to_char<span class="token punctuation">(</span>trunc<span class="token punctuation">(</span>sysdate<span class="token punctuation">,</span><span class="token string">'dd'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'yyyymmdd hh24:mi:ss'</span><span class="token punctuation">)</span> <span class="token keyword">from</span> dual<span class="token punctuation">;</span>

<span class="token comment" spellcheck="true">--截取到小时（当前小时，零分零秒）</span>
<span class="token keyword">select</span> trunc<span class="token punctuation">(</span>sysdate<span class="token punctuation">,</span><span class="token string">'hh24'</span><span class="token punctuation">)</span> <span class="token keyword">from</span> dual<span class="token punctuation">;</span>  

<span class="token comment" spellcheck="true">--截取到分（当前分，零秒）</span>
<span class="token keyword">select</span> trunc<span class="token punctuation">(</span>sysdate<span class="token punctuation">,</span><span class="token string">'mi'</span><span class="token punctuation">)</span> <span class="token keyword">from</span> dual<span class="token punctuation">;</span> 

<span class="token comment" spellcheck="true">--报错，没有精确到秒的格式</span>
<span class="token keyword">select</span> trunc<span class="token punctuation">(</span>sysdate<span class="token punctuation">,</span><span class="token string">'ss'</span><span class="token punctuation">)</span> <span class="token keyword">from</span> dual <span class="token punctuation">;</span>

<span class="token comment" spellcheck="true">--Oracle英文日期转换，指定nls_date_language参数</span>
<span class="token keyword">select</span> to_date<span class="token punctuation">(</span><span class="token string">'01-sep-2009'</span><span class="token punctuation">,</span><span class="token string">'dd-mon-yyyy'</span><span class="token punctuation">,</span><span class="token string">'nls_date_language=American'</span><span class="token punctuation">)</span> <span class="token keyword">from</span> dual<span class="token punctuation">;</span>
</code></pre>
]]></content>
      
        <categories>
            
            <category> Oracle </category>
            
        </categories>
        
        
        <tags>
            
            <tag> oracle </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Oracle PLSQL配置]]></title>
      <url>/2016/05/26/Oracle%20PLSQL%E9%85%8D%E7%BD%AE/</url>
      <content type="html"><![CDATA[<h3 id="一、增加环境变量"><a href="#一、增加环境变量" class="headerlink" title="一、增加环境变量"></a>一、增加环境变量</h3><pre class=" language-bash"><code class="language-bash">TNS_ADMIN <span class="token operator">=</span> D:\app\serical\product\11.2.0\dbhome_1\NETWORK\ADMIN
NLS_LANG <span class="token operator">=</span> SIMPLIFIED CHINESE_CHINA.ZHS16GBK
</code></pre>
<h3 id="二、修改plsql中的oci-dll地址"><a href="#二、修改plsql中的oci-dll地址" class="headerlink" title="二、修改plsql中的oci.dll地址"></a>二、修改plsql中的oci.dll地址</h3><pre class=" language-bash"><code class="language-bash">D:\app\instantclient_11_2\oci.dll
</code></pre>
<h3 id="三、Oracle局域网访问"><a href="#三、Oracle局域网访问" class="headerlink" title="三、Oracle局域网访问"></a>三、Oracle局域网访问</h3><p>1、修改<code>listener.ora</code>中的<code>HOST</code>为计算机全名</p>
<pre class=" language-bash"><code class="language-bash">SID_LIST_LISTENER <span class="token operator">=</span>
  <span class="token punctuation">(</span>SID_LIST <span class="token operator">=</span>
    <span class="token punctuation">(</span>SID_DESC <span class="token operator">=</span>
      <span class="token punctuation">(</span>SID_NAME <span class="token operator">=</span> CLRExtProc<span class="token punctuation">)</span>
      <span class="token punctuation">(</span>ORACLE_HOME <span class="token operator">=</span> C:\app\Administrator\product\11.2.0\dbhome_1<span class="token punctuation">)</span>
      <span class="token punctuation">(</span>PROGRAM <span class="token operator">=</span> extproc<span class="token punctuation">)</span>
      <span class="token punctuation">(</span>ENVS <span class="token operator">=</span> <span class="token string">"EXTPROC_DLLS=ONLY:C:\app\Administrator\product\11.2.0\dbhome_1\bin\oraclr11.dll"</span><span class="token punctuation">)</span>
    <span class="token punctuation">)</span>
  <span class="token punctuation">)</span>

LISTENER <span class="token operator">=</span>
  <span class="token punctuation">(</span>DESCRIPTION_LIST <span class="token operator">=</span>
    <span class="token punctuation">(</span>DESCRIPTION <span class="token operator">=</span>
      <span class="token punctuation">(</span>ADDRESS <span class="token operator">=</span> <span class="token punctuation">(</span>PROTOCOL <span class="token operator">=</span> IPC<span class="token punctuation">)</span><span class="token punctuation">(</span>KEY <span class="token operator">=</span> EXTPROC1521<span class="token punctuation">))</span>
      <span class="token punctuation">(</span>ADDRESS <span class="token operator">=</span> <span class="token punctuation">(</span>PROTOCOL <span class="token operator">=</span> TCP<span class="token punctuation">)</span><span class="token punctuation">(</span>HOST <span class="token operator">=</span> WIN-HE098SDJBMO<span class="token punctuation">)</span><span class="token punctuation">(</span>PORT <span class="token operator">=</span> 1521<span class="token punctuation">))</span>
    <span class="token punctuation">)</span>
  <span class="token punctuation">)</span>

ADR_BASE_LISTENER <span class="token operator">=</span> C:\app\Administrator
</code></pre>
<p>2、修改<code>tnsnames.ora</code>中的<code>HOST</code>为计算机全名</p>
<pre class=" language-bash"><code class="language-bash">LISTENER_ORCL <span class="token operator">=</span>
  <span class="token punctuation">(</span>ADDRESS <span class="token operator">=</span> <span class="token punctuation">(</span>PROTOCOL <span class="token operator">=</span> TCP<span class="token punctuation">)</span><span class="token punctuation">(</span>HOST <span class="token operator">=</span> WIN-HE098SDJBMO<span class="token punctuation">)</span><span class="token punctuation">(</span>PORT <span class="token operator">=</span> 1521<span class="token punctuation">))</span>

ORACLR_CONNECTION_DATA <span class="token operator">=</span>
  <span class="token punctuation">(</span>DESCRIPTION <span class="token operator">=</span>
    <span class="token punctuation">(</span>ADDRESS_LIST <span class="token operator">=</span>
      <span class="token punctuation">(</span>ADDRESS <span class="token operator">=</span> <span class="token punctuation">(</span>PROTOCOL <span class="token operator">=</span> IPC<span class="token punctuation">)</span><span class="token punctuation">(</span>KEY <span class="token operator">=</span> EXTPROC1521<span class="token punctuation">))</span>
    <span class="token punctuation">)</span>
    <span class="token punctuation">(</span>CONNECT_DATA <span class="token operator">=</span>
      <span class="token punctuation">(</span>SID <span class="token operator">=</span> CLRExtProc<span class="token punctuation">)</span>
      <span class="token punctuation">(</span>PRESENTATION <span class="token operator">=</span> RO<span class="token punctuation">)</span>
    <span class="token punctuation">)</span>
  <span class="token punctuation">)</span>

ORCL <span class="token operator">=</span>
  <span class="token punctuation">(</span>DESCRIPTION <span class="token operator">=</span>
    <span class="token punctuation">(</span>ADDRESS <span class="token operator">=</span> <span class="token punctuation">(</span>PROTOCOL <span class="token operator">=</span> TCP<span class="token punctuation">)</span><span class="token punctuation">(</span>HOST <span class="token operator">=</span> WIN-HE098SDJBMO<span class="token punctuation">)</span><span class="token punctuation">(</span>PORT <span class="token operator">=</span> 1521<span class="token punctuation">))</span>
    <span class="token punctuation">(</span>CONNECT_DATA <span class="token operator">=</span>
      <span class="token punctuation">(</span>SERVER <span class="token operator">=</span> DEDICATED<span class="token punctuation">)</span>
      <span class="token punctuation">(</span>SERVICE_NAME <span class="token operator">=</span> orcl<span class="token punctuation">)</span>
    <span class="token punctuation">)</span>
  <span class="token punctuation">)</span>
</code></pre>
]]></content>
      
        <categories>
            
            <category> Oracle </category>
            
        </categories>
        
        
        <tags>
            
            <tag> oracle </tag>
            
            <tag> plsql </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[PowerDesigner反转数据库]]></title>
      <url>/2016/05/26/PowerDesigner%E5%8F%8D%E8%BD%AC%E6%95%B0%E6%8D%AE%E5%BA%93/</url>
      <content type="html"><![CDATA[<h3 id="问题一：初始化Java虚拟机失败"><a href="#问题一：初始化Java虚拟机失败" class="headerlink" title="问题一：初始化Java虚拟机失败"></a>问题一：初始化Java虚拟机失败</h3><pre><code>安装一个32位的JDK
</code></pre><h3 id="问题二：加载驱动类失败"><a href="#问题二：加载驱动类失败" class="headerlink" title="问题二：加载驱动类失败"></a>问题二：加载驱动类失败</h3><pre><code>把JAR包放到安装根目录下面
</code></pre><p>使用反转，配置连接</p>
<p><img src="/static/26.png" alt=""></p>
<p>反转工程</p>
<p><img src="/static/27.png" alt=""></p>
<p>选择之前配置的连接，确定然后选择需要反转的表结构</p>
<p><img src="/static/28.png" alt=""></p>
]]></content>
      
        <categories>
            
            <category> PowerDesigner </category>
            
        </categories>
        
        
        <tags>
            
            <tag> powerdesigner </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Oracle高效删除数据]]></title>
      <url>/2016/05/17/Oracle%E9%AB%98%E6%95%88%E5%88%A0%E9%99%A4%E6%95%B0%E6%8D%AE/</url>
      <content type="html"><![CDATA[<h3 id="方式一"><a href="#方式一" class="headerlink" title="方式一"></a>方式一</h3><pre class=" language-sql"><code class="language-sql"><span class="token keyword">DELETE</span> <span class="token keyword">FROM</span> TABLENAME T 
<span class="token keyword">WHERE</span> T<span class="token punctuation">.</span>ROWID <span class="token operator">NOT</span> <span class="token operator">IN</span><span class="token punctuation">(</span>
<span class="token keyword">SELECT</span> <span class="token function">MAX</span><span class="token punctuation">(</span>B<span class="token punctuation">.</span>ROWID<span class="token punctuation">)</span> <span class="token keyword">FROM</span> TABLENAME B 
<span class="token keyword">GROUP</span> <span class="token keyword">BY</span> B<span class="token punctuation">.</span>COL1<span class="token punctuation">,</span> B<span class="token punctuation">.</span>COL2 <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token punctuation">)</span>
</code></pre>
<h3 id="方式二"><a href="#方式二" class="headerlink" title="方式二"></a>方式二</h3><pre class=" language-sql"><code class="language-sql"><span class="token keyword">DELETE</span> <span class="token keyword">FROM</span> TABLENAME T
<span class="token keyword">WHERE</span> T<span class="token punctuation">.</span>ROWID <span class="token operator">&lt;></span> <span class="token punctuation">(</span>
<span class="token keyword">SELECT</span> <span class="token function">MAX</span><span class="token punctuation">(</span>B<span class="token punctuation">.</span>ROWID<span class="token punctuation">)</span> <span class="token keyword">FROM</span> TABLENAME B 
<span class="token keyword">WHERE</span> T<span class="token punctuation">.</span>COL1 <span class="token operator">=</span> B<span class="token punctuation">.</span>COL1 
<span class="token operator">AND</span> T<span class="token punctuation">.</span>COL2 <span class="token operator">=</span> B<span class="token punctuation">.</span>COL2
<span class="token punctuation">)</span>
</code></pre>
<h3 id="方式二效率明显高于方式一"><a href="#方式二效率明显高于方式一" class="headerlink" title="方式二效率明显高于方式一"></a>方式二效率明显高于方式一</h3>]]></content>
      
        <categories>
            
            <category> Oracle </category>
            
        </categories>
        
        
        <tags>
            
            <tag> oracle </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Redis备份与恢复]]></title>
      <url>/2016/05/09/Redis%E5%A4%87%E4%BB%BD%E4%B8%8E%E6%81%A2%E5%A4%8D/</url>
      <content type="html"><![CDATA[<h3 id="备份"><a href="#备份" class="headerlink" title="备份"></a>备份</h3><p>查找redis安装目录，即备份文件目录</p>
<pre class=" language-bash"><code class="language-bash">127.0.0.1:6379<span class="token operator">></span> config get <span class="token function">dir</span>
1<span class="token punctuation">)</span> <span class="token string">"dir"</span>
2<span class="token punctuation">)</span> <span class="token string">"/var/lib/redis"</span>
</code></pre>
<p>手动执行save命令</p>
<pre class=" language-bash"><code class="language-bash">127.0.0.1:6379<span class="token operator">></span> save
OK
</code></pre>
<p>可以看到第一步目录下有个dump.rdb</p>
<pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@localhost redis<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ls</span>
dump.rdb
</code></pre>
<h3 id="恢复"><a href="#恢复" class="headerlink" title="恢复"></a>恢复</h3><p>然后就发现了大问题，<code>备份</code>服务器上的只采用了<code>RDB</code>备份方式没采用<code>AOF</code>方式，但<code>恢复</code>服务器则采用了<br><code>RDB+AOF</code>方式，恢复的时候发现是<code>AOF</code>方式优先，但由于备份并没有采用<code>AOF</code>方式导致没有<br><code>appendonly.aof</code>备份文件，只能通过<code>RDB</code>方式恢复了</p>
<ol>
<li><p>第一次恢复<br>把<code>dump.rdb</code>复制到恢复服务器根目录，然后重启<code>Redis</code>，然后查看并没有恢复，原因是<code>appendonly yes</code>。</p>
</li>
<li><p>第二次恢复<br>关闭<code>AOF</code>即<code>appendonly no</code>，然后重启<code>Redis</code>，然后查看并没有恢复，原因是第一次重启后<code>dump.rdb</code>被覆盖了。</p>
</li>
<li><p>第三次恢复<br>重新把<code>dump.rdb</code>复制到恢复服务器根目录，然后重启<code>Redis</code>，数据已经恢复。<br>重新开启RDB+AOF备份方案（appendonly yes）<br>重启<code>Redis</code>后发现，刚刚恢复好的数据又没了<code>:(</code>，原因是优先<code>AOF</code>恢复，而<code>appendonly.aof</code>文件并没有改<br>变，所以<code>Redis</code>又恢复到了以前的状态。</p>
</li>
<li><p>回到第三次恢复状态<br>关闭<code>AOF</code>即<code>appendonly no</code>，重新把<code>dump.rdb</code>复制到恢复服务器根目录，然后重启<code>Redis</code>，数据已经恢复。</p>
</li>
</ol>
<p>重写appendonly.aof为当前数据的备份</p>
<pre class=" language-bash"><code class="language-bash">127.0.0.1:6379<span class="token operator">></span> bgrewriteaof
Background append only <span class="token function">file</span> rewriting started
</code></pre>
<p><strong>最后严重警告：千万不要在只开启了RDB方式途中开启AOF方式，不然数据库会被清空，因为开启AOF时appendonly.aof是空的，优先AOF恢复，所以就被清空啦。我是在恢复好后，准备备份服务器也开启RDB+AOF方式，然后就悲剧了，不过还好采用AOF方式恢复了。<br>PS：AOF恢复就是把appendonly.aof复制到config get dir目录下，重启数据库就OK啦。</strong></p>
]]></content>
      
        <categories>
            
            <category> Redis </category>
            
        </categories>
        
        
        <tags>
            
            <tag> redis </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[NodeJs连接Redis]]></title>
      <url>/2016/05/07/NodeJs%E8%BF%9E%E6%8E%A5Redis/</url>
      <content type="html"><![CDATA[<h3 id="允许局域网访问"><a href="#允许局域网访问" class="headerlink" title="允许局域网访问"></a>允许局域网访问</h3><p>修改配置文件<code>redis.conf</code>:</p>
<pre class=" language-bash"><code class="language-bash">vim /etc/redis.conf 
<span class="token comment" spellcheck="true">#查找bind 127.0.0.1，将其注释掉</span>
</code></pre>
<h3 id="设置密码"><a href="#设置密码" class="headerlink" title="设置密码"></a>设置密码</h3><p>修改配置文件<code>redis.conf</code>:</p>
<pre class=" language-bash"><code class="language-bash">vim /etc/redis.conf 
<span class="token comment" spellcheck="true">#查找requirepass，将foobared改为自己的密码，重启redis</span>
systemctl restart redis.service
</code></pre>
<h3 id="NodeJs连接Redis方式一"><a href="#NodeJs连接Redis方式一" class="headerlink" title="NodeJs连接Redis方式一"></a>NodeJs连接Redis方式一</h3><p>通过<code>createClient</code>方法第三个参数，<code>auth_pass</code>指定密码</p>
<pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">/**
 * Created by serical on 2015/11/30.
 */</span>
<span class="token keyword">var</span> redis <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"redis"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

REDIS_PORT <span class="token operator">=</span> <span class="token number">6379</span><span class="token punctuation">;</span>
REDIS_HOST <span class="token operator">=</span> <span class="token string">'192.168.254.117'</span><span class="token punctuation">;</span>
REDIS_PASS <span class="token operator">=</span> <span class="token string">'xxx'</span><span class="token punctuation">;</span>
REDIS_OPTS <span class="token operator">=</span> <span class="token punctuation">{</span>auth_pass <span class="token punctuation">:</span> REDIS_PASS<span class="token punctuation">}</span><span class="token punctuation">;</span>

client <span class="token operator">=</span> redis<span class="token punctuation">.</span><span class="token function">createClient</span><span class="token punctuation">(</span>REDIS_PORT<span class="token punctuation">,</span> REDIS_HOST<span class="token punctuation">,</span> REDIS_OPTS<span class="token punctuation">)</span><span class="token punctuation">;</span>

client<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">"error"</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
   console<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">'error : '</span> <span class="token operator">+</span> err<span class="token punctuation">.</span>stack<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

client<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">"ready"</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">'log: ready'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre>
<h3 id="NodeJs连接Redis方式二"><a href="#NodeJs连接Redis方式二" class="headerlink" title="NodeJs连接Redis方式二"></a>NodeJs连接Redis方式二</h3><p>通过client的auth方法进行密码认证</p>
<pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">/**
 * Created by serical on 2015/11/30.
 */</span>
<span class="token keyword">var</span> redis <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"redis"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

REDIS_PORT <span class="token operator">=</span> <span class="token number">6379</span><span class="token punctuation">;</span>
REDIS_HOST <span class="token operator">=</span> <span class="token string">'192.168.254.117'</span><span class="token punctuation">;</span>
REDIS_PASS <span class="token operator">=</span> <span class="token string">'xxx'</span><span class="token punctuation">;</span>
REDIS_OPTS <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

client <span class="token operator">=</span> redis<span class="token punctuation">.</span><span class="token function">createClient</span><span class="token punctuation">(</span>REDIS_PORT<span class="token punctuation">,</span> REDIS_HOST<span class="token punctuation">,</span> REDIS_OPTS<span class="token punctuation">)</span><span class="token punctuation">;</span>
client<span class="token punctuation">.</span><span class="token function">auth</span><span class="token punctuation">(</span>REDIS_PASS<span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   console<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">'ok'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre>
]]></content>
      
        <categories>
            
            <category> Nodejs </category>
            
        </categories>
        
        
        <tags>
            
            <tag> nodejs </tag>
            
            <tag> redis </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Oracle 11g exp空表]]></title>
      <url>/2016/04/23/Oracle%2011g%20exp%E7%A9%BA%E8%A1%A8/</url>
      <content type="html"><![CDATA[<h3 id="1、知识说明"><a href="#1、知识说明" class="headerlink" title="1、知识说明"></a>1、知识说明</h3><p>Oracle 11g中推出的“延迟段创建”（<code>Deferred Segment Creation</code>）特性，以及当我们使用这种特性时，需要注意的问题。</p>
<p><code>Deferred Segment Creation</code><br>在Oracle中，“表空间（<code>Tablespace</code>）、段（<code>Segment</code>）、分区（<code>Extent</code>）和块（<code>Block</code>）”是逻辑存储结构的四个层次。<br>对数据表而言，通常是由一个或者多个段对象（分区表）<code>Segment</code>组成。也就是说，在数据表创建的时刻，Oracle会创建一个数据段<code>Segment</code>对象与之对应。<br>当<code>Segment</code>创建之后，Oracle空间管理机制会根据需要分配至少一个<code>extent</code>作为初始化。每个<code>extent</code>的大小需要根据不同<code>tablespace</code>进行配置。<br>但是在11g之前，数据表的创建同时，就发生了空间<code>Segment</code>分配的过程。但是在Oracle 11g中，引入了<code>Deferred Segment Creation</code>特性。<br>首先我们创建一个数据表<code>justForTest</code>，来观察数据库是否为此表分配<code>segment</code>。</p>
<pre class=" language-sql"><code class="language-sql">SQL<span class="token operator">></span> <span class="token keyword">create</span> <span class="token keyword">table</span> justForTest<span class="token punctuation">(</span>test1 varchar2<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">Table</span> created
</code></pre>
<p>但是，对应的段<code>segment</code>对象，却没有创建出来，如下：</p>
<pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span> segment_name<span class="token punctuation">,</span> BYTES<span class="token punctuation">,</span> BLOCKS<span class="token punctuation">,</span> EXTENTS  <span class="token keyword">from</span> user_segments <span class="token keyword">where</span> segment_name<span class="token operator">=</span><span class="token string">'JUSTFORTEST'</span><span class="token punctuation">;</span>
SEGMENT_NAME    BYTES       BLOCKS    EXTENTS
<span class="token comment" spellcheck="true">------------ ---------- ---------- ----------</span>
</code></pre>
<p>这就是在Oracle 11g中引入的延迟段生成。一个数据表，如果刚刚创建出来的时候没有数据加入。Oracle是不会为这个对象创建相应的段结构，也就不会分配对应的空间。<br>使用<code>dbms_metadata</code>抽取出数据表的DDL语句，可以发现端倪，如下：</p>
<pre class=" language-sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token string">"test"</span><span class="token punctuation">.</span><span class="token string">"JUSTFORTEST"</span> 
   <span class="token punctuation">(</span>    <span class="token string">"TEST1"</span> VARCHAR2<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
   <span class="token punctuation">)</span> SEGMENT CREATION DEFERRED 
  PCTFREE <span class="token number">10</span> PCTUSED <span class="token number">40</span> INITRANS <span class="token number">1</span> MAXTRANS <span class="token number">255</span> NOCOMPRESS LOGGING
  <span class="token keyword">TABLESPACE</span> <span class="token string">"testNS"</span><span class="token punctuation">;</span>
</code></pre>
<p>使用DDL语句可以获取到创建数据表的所有语句参数，包括默认参数。其中，我们发现了一个在过去版本中没有参数“<code>SEGMENT CREATION DEFERRED</code>”，<br>该参数就表示在数据表创建中使用延迟段生成。</p>
<p>那么，在什么时点上Oracle才会创建对象呢？只要插入一条数据到数据表中，无论是否commit，都会伴随着Oracle对数据表段的创建操作。</p>
<pre class=" language-sql"><code class="language-sql">SQL<span class="token operator">></span> <span class="token keyword">insert</span> <span class="token keyword">into</span> justForTest <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'1'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token number">1</span> <span class="token keyword">row</span> inserted
SQL<span class="token operator">></span> <span class="token keyword">select</span> segment_name<span class="token punctuation">,</span> BYTES<span class="token punctuation">,</span> BLOCKS<span class="token punctuation">,</span> EXTENTS  <span class="token keyword">from</span> user_segments 
        <span class="token keyword">where</span> segment_name<span class="token operator">=</span><span class="token string">'JUSTFORTEST'</span><span class="token punctuation">;</span>
SEGMENT_NAME    BYTES       BLOCKS    EXTENTS
<span class="token comment" spellcheck="true">------------ ---------- ---------- ----------</span>
JUSTFORTEST     <span class="token number">65536</span>          <span class="token number">8</span>        <span class="token number">1</span>
</code></pre>
<p>Oracle推出<code>Deferred Segment Creation</code>的出发点很单纯，就是出于对象空间节省的目的。如果一个空表从来就没有使用过，创建<code>segment</code>对象，<br>分配空间是“不合算”的，所以提出推迟段创建的时间点。</p>
<h3 id="2、永久解决方案，但对之前已存在表无效"><a href="#2、永久解决方案，但对之前已存在表无效" class="headerlink" title="2、永久解决方案，但对之前已存在表无效"></a>2、永久解决方案，但对之前已存在表无效</h3><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 为true表示使用延迟创建segment</span>
SQL<span class="token operator">></span> <span class="token keyword">SHOW</span> PARAMETER DEFERRED_SEGMENT_CREATION
NAME                                 <span class="token keyword">TYPE</span>        <span class="token keyword">VALUE</span>
<span class="token comment" spellcheck="true">------------------------------------ ----------- ------------------------------</span>
deferred_segment_creation            <span class="token keyword">boolean</span>     <span class="token boolean">TRUE</span>
<span class="token comment" spellcheck="true">-- 修改为false，以后创建表就不会使用延迟创建</span>
SQL<span class="token operator">></span> <span class="token keyword">ALTER</span> SYSTEM <span class="token keyword">SET</span> DEFERRED_SEGMENT_CREATION <span class="token operator">=</span> <span class="token boolean">FALSE</span><span class="token punctuation">;</span>
System altered
</code></pre>
<h3 id="3、兼容以前创建的表"><a href="#3、兼容以前创建的表" class="headerlink" title="3、兼容以前创建的表"></a>3、兼容以前创建的表</h3><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 查询需要手动分配segment的table</span>
<span class="token keyword">SELECT</span> <span class="token string">'ALTER TABLE '</span><span class="token operator">||</span>T<span class="token punctuation">.</span>TABLE_NAME<span class="token operator">||</span><span class="token string">' ALLOCATE EXTENT;'</span> <span class="token keyword">FROM</span> USER_TABLES T 
        <span class="token keyword">WHERE</span> T<span class="token punctuation">.</span>SEGMENT_CREATED <span class="token operator">=</span> <span class="token string">'NO'</span> <span class="token operator">OR</span> T<span class="token punctuation">.</span>NUM_ROWS <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">-- 执行查询出的语句，即完成手动分配segment</span>
<span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> XXXX ALLOCATE EXTENT<span class="token punctuation">;</span>
</code></pre>
]]></content>
      
        <categories>
            
            <category> Oracle </category>
            
        </categories>
        
        
        <tags>
            
            <tag> oracle </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Linux更改文件权限]]></title>
      <url>/2016/04/19/Linux%E6%9B%B4%E6%94%B9%E6%96%87%E4%BB%B6%E6%9D%83%E9%99%90/</url>
      <content type="html"><![CDATA[<h3 id="使用方式-chmod-cfvR-–help-–version-mode-file…"><a href="#使用方式-chmod-cfvR-–help-–version-mode-file…" class="headerlink" title="使用方式 : chmod [-cfvR] [–help] [–version] mode file…"></a>使用方式 : chmod [-cfvR] [–help] [–version] mode file…</h3><h3 id="说明"><a href="#说明" class="headerlink" title="说明 :"></a>说明 :</h3><p>Linux/Unix 的档案存取权限分为三级 : 档案拥有者、群组、其他。利用 chmod 可以藉以控制档案如何被他人所存取。 mode : 权限设定字串，格式如下 : [ugoa…][[+-=][rwxX]…][,…]，其中: </p>
<ul>
<li>u 表示该档案的拥有者， </li>
<li>g 表示与该档案的拥有者属于同一个群体(group)者， </li>
<li>o 表示其他以外的人， </li>
<li>a 表示这三者皆是。 </li>
<li><ul>
<li>表示增加权限、 </li>
</ul>
</li>
<li><ul>
<li>表示取消权限、 </li>
</ul>
</li>
<li>= 表示唯一设定权限。 </li>
<li>r 表示可读取， </li>
<li>w 表示可写入， </li>
<li>x 表示可执行， </li>
<li>X 表示只有当该档案是个子目录或者该档案已经被设定过为可执行。 </li>
<li>-c : 若该档案权限确实已经更改，才显示其更改动作 </li>
<li>-f : 若该档案权限无法被更改也不要显示错误讯息 </li>
<li>-v : 显示权限变更的详细资料 </li>
<li>-R : 对目前目录下的所有档案与子目录进行相同的权限变更(即以递回的方式逐个变更) </li>
<li>–help : 显示辅助说明 </li>
<li>–version : 显示版本</li>
</ul>
<h3 id="使用例子"><a href="#使用例子" class="headerlink" title="使用例子"></a>使用例子</h3><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@serical01 test<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ll -R</span>
.:
total 8
-rw-r--r--. 1 root root   14 Jul  8 20:58 a
drwxr-xr-x. 2 root root 4096 Jul  8 21:01 t
./t:
total 4
-rw-r--r--. 1 root root 40 Jul  8 21:01 b
</code></pre>
<h3 id="给当前路径所有文件及目录递归的拥有者加上x（执行）权限"><a href="#给当前路径所有文件及目录递归的拥有者加上x（执行）权限" class="headerlink" title="给当前路径所有文件及目录递归的拥有者加上x（执行）权限"></a>给当前路径所有文件及目录递归的拥有者加上x（执行）权限</h3><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@serical01 test<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># chmod u+x -R *</span>
<span class="token punctuation">[</span>root@serical01 test<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ll -R</span>
.:
total 8
-rwxr--r--. 1 root root   14 Jul  8 20:58 a
drwxr-xr-x. 2 root root 4096 Jul  8 21:01 t
./t:
total 4
-rwxr--r--. 1 root root 40 Jul  8 21:01 b
</code></pre>
<h3 id="拥有者去掉r权限，所属组加上w权限，其他赋予rwx权限"><a href="#拥有者去掉r权限，所属组加上w权限，其他赋予rwx权限" class="headerlink" title="拥有者去掉r权限，所属组加上w权限，其他赋予rwx权限"></a>拥有者去掉r权限，所属组加上w权限，其他赋予rwx权限</h3><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@serical01 test<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># chmod u-r,g+w,o=rwx -R *</span>
<span class="token punctuation">[</span>root@serical01 test<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ll -R</span>
.:
total 8
--wxrw-rwx. 1 root root   14 Jul  8 20:58 a
d-wxrwxrwx. 2 root root 4096 Jul  8 21:01 t
./t:
total 4
--wxrw-rwx. 1 root root 40 Jul  8 21:01 b
</code></pre>
<h3 id="数字表示形式r（4）w（2）x（1），表示u-rwx-g-rx-o-rx"><a href="#数字表示形式r（4）w（2）x（1），表示u-rwx-g-rx-o-rx" class="headerlink" title="数字表示形式r（4）w（2）x（1），表示u=rwx,g=rx,o=rx"></a>数字表示形式r（4）w（2）x（1），表示u=rwx,g=rx,o=rx</h3><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@serical01 test<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># chmod 755 -R *</span>
<span class="token punctuation">[</span>root@serical01 test<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ll -R</span>
.:
total 8
-rwxr-xr-x. 1 root root   14 Jul  8 20:58 a
drwxr-xr-x. 2 root root 4096 Jul  8 21:01 t
./t:
total 4
-rwxr-xr-x. 1 root root 40 Jul  8 21:01 b
</code></pre>
]]></content>
      
        <categories>
            
            <category> Linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> linux </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Oracle递归查询]]></title>
      <url>/2016/04/01/Oracle%E9%80%92%E5%BD%92%E6%9F%A5%E8%AF%A2/</url>
      <content type="html"><![CDATA[<h3 id="Oracle递归查询"><a href="#Oracle递归查询" class="headerlink" title="Oracle递归查询"></a>Oracle递归查询</h3><p><strong>基本语法</strong></p>
<pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token keyword">FROM</span> TABLENAME
<span class="token keyword">START</span> <span class="token keyword">BY</span> COND1
<span class="token keyword">CONNECT</span> <span class="token keyword">BY</span> COND2
<span class="token keyword">WHERE</span> COND3
</code></pre>
<p><strong>其中：</strong></p>
<ul>
<li>COND1是根结点的限定语句，当然可以放宽限定条件，以取得多个根结点，实际就是多棵树。</li>
<li>COND2是连接条件，其中用PRIOR表示上一条记录，比如CONNECT BY PRIOR ID=PID就是说上一条记录的ID是本条记录的PID，即本记录的父亲是上一条记录。</li>
<li>COND3是过滤条件，用于对返回的所有记录进行过滤。</li>
<li>PRIOR和START WITH关键字是可选项。</li>
<li>PRIOR运算符必须放置在连接关系的两列中某一个的前面。对于节点间的父子关系，PRIOR运算符在一侧表示父节点，在另一侧表示子节点，从而确定查找树结构是的顺序是自顶向下还是自底向上。在连接关系中，除了可以使用列名外，还允许使用列表达式。</li>
<li>START WITH子句为可选项，用来标识哪个节点作为查找树型结构的根节点。若该子句被省略，则表示所有满足查询条件的行作为根节点。</li>
</ul>
<pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 测试表数据</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> TTT T<span class="token punctuation">;</span>
</code></pre>
<p><img src="/static/2.png" alt=""></p>
<pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 递归查询PID=1记录的父节点</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> TTT T
<span class="token keyword">START</span> <span class="token keyword">WITH</span> T<span class="token punctuation">.</span>PID <span class="token operator">=</span> <span class="token number">1</span>
<span class="token keyword">CONNECT</span> <span class="token keyword">BY</span> PRIOR T<span class="token punctuation">.</span>PID <span class="token operator">=</span> T<span class="token punctuation">.</span>ID
<span class="token keyword">ORDER</span> <span class="token keyword">BY</span> T<span class="token punctuation">.</span>ID<span class="token punctuation">;</span>
</code></pre>
<p><img src="/static/3.png" alt=""></p>
<pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 递归查询PID=1记录的子节点</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> TTT T
<span class="token keyword">START</span> <span class="token keyword">WITH</span> T<span class="token punctuation">.</span>PID <span class="token operator">=</span> <span class="token number">1</span>
<span class="token keyword">CONNECT</span> <span class="token keyword">BY</span> T<span class="token punctuation">.</span>PID <span class="token operator">=</span> PRIOR T<span class="token punctuation">.</span>ID
<span class="token keyword">ORDER</span> <span class="token keyword">BY</span> T<span class="token punctuation">.</span>ID
</code></pre>
<p><img src="/static/4.png" alt=""></p>
<p>注意点<br>PRIOR XXX表示的是满足START WITH条件记录的XXX字段，通过ID或者PID来控制在查询子节点还是父节点。</p>
<p>会查询出多条，比如查询父节点那条SQL，PID=1的有两条，而满足PRIOR PID=ID的也有两条，所有会出现两条PID为NULL的根节点</p>
<p><a href="http://www.ecdoer.com/post/oracle-connect-by.html" target="_blank" rel="external">http://www.ecdoer.com/post/oracle-connect-by.html</a></p>
]]></content>
      
        <categories>
            
            <category> Oracle </category>
            
        </categories>
        
        
        <tags>
            
            <tag> oracle </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Oracle数据泵导出导入]]></title>
      <url>/2016/03/19/Oracle%E6%95%B0%E6%8D%AE%E6%B3%B5%E5%AF%BC%E5%87%BA%E5%AF%BC%E5%85%A5/</url>
      <content type="html"><![CDATA[<h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 创建DIRECTORY</span>
<span class="token keyword">CREATE</span> DIRECTORY DMP_DIR <span class="token keyword">AS</span> <span class="token string">'D:\app\expdp_dir'</span>
<span class="token comment" spellcheck="true">-- 授权</span>
<span class="token keyword">GRANT</span> <span class="token keyword">READ</span><span class="token punctuation">,</span> <span class="token keyword">WRITE</span> <span class="token keyword">ON</span> DIRECTORY DMP_DIR <span class="token keyword">TO</span> SERICAL<span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">-- 查询DIRECTORY</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> ALL_DIRECTORIES A <span class="token keyword">WHERE</span> DIRECTORY_NAME <span class="token operator">=</span> <span class="token string">'DMP_DIR'</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">-- 删除DIRECTORY</span>
<span class="token keyword">DROP</span> DIRECTORY DMP_DIR <span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">-- 用户DIRECTORY权限</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> USER_TAB_PRIVS<span class="token punctuation">;</span>
</code></pre>
<h3 id="expdp导出"><a href="#expdp导出" class="headerlink" title="expdp导出"></a>expdp导出</h3><pre class=" language-bash"><code class="language-bash">expdp serical/123456 directory<span class="token operator">=</span>dmp_dir dumpfile<span class="token operator">=</span>test.dmp logfile<span class="token operator">=</span>test.log

连接到: Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options
启动 <span class="token string">"SERICAL"</span><span class="token keyword">.</span><span class="token string">"SYS_EXPORT_SCHEMA_01"</span><span class="token keyword">:</span>  serical/******** directory<span class="token operator">=</span>dmp_dir dumpfile<span class="token operator">=</span>test.dmp 
logfile<span class="token operator">=</span>test.log
正在使用 BLOCKS 方法进行估计<span class="token punctuation">..</span>.
处理对象类型 SCHEMA_EXPORT/TABLE/TABLE_DATA
使用 BLOCKS 方法的总估计: 0 KB
处理对象类型 SCHEMA_EXPORT/USER
处理对象类型 SCHEMA_EXPORT/SYSTEM_GRANT
处理对象类型 SCHEMA_EXPORT/ROLE_GRANT
处理对象类型 SCHEMA_EXPORT/DEFAULT_ROLE
处理对象类型 SCHEMA_EXPORT/PRE_SCHEMA/PROCACT_SCHEMA
处理对象类型 SCHEMA_EXPORT/TABLE/TABLE
处理对象类型 SCHEMA_EXPORT/TABLE/INDEX/INDEX
处理对象类型 SCHEMA_EXPORT/TABLE/CONSTRAINT/CONSTRAINT
处理对象类型 SCHEMA_EXPORT/TABLE/INDEX/STATISTICS/INDEX_STATISTICS
处理对象类型 SCHEMA_EXPORT/TABLE/COMMENT
<span class="token keyword">.</span> <span class="token keyword">.</span> 导出了 <span class="token string">"SERICAL"</span><span class="token keyword">.</span><span class="token string">"TEST"</span>                              5.445 KB       2 行
已成功加载/卸载了主表 <span class="token string">"SERICAL"</span><span class="token keyword">.</span><span class="token string">"SYS_EXPORT_SCHEMA_01"</span>
******************************************************************************
SERICAL.SYS_EXPORT_SCHEMA_01 的转储文件集为:
  D:\APP\EXPDP_DIR\TEST.DMP
作业 <span class="token string">"SERICAL"</span><span class="token keyword">.</span><span class="token string">"SYS_EXPORT_SCHEMA_01"</span> 已于 14:56:18 成功完成
</code></pre>
<p><strong>NLOGFILE=Y表示不生成日志文件</strong></p>
<h3 id="impdp导入"><a href="#impdp导入" class="headerlink" title="impdp导入"></a>impdp导入</h3><pre class=" language-bash"><code class="language-bash">impdp serical/123456 directory<span class="token operator">=</span>dmp_dir dumpfile<span class="token operator">=</span>test.dmp nologfile<span class="token operator">=</span>y full<span class="token operator">=</span>y

连接到: Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options
已成功加载/卸载了主表 <span class="token string">"SERICAL"</span><span class="token keyword">.</span><span class="token string">"SYS_IMPORT_FULL_01"</span>
启动 <span class="token string">"SERICAL"</span><span class="token keyword">.</span><span class="token string">"SYS_IMPORT_FULL_01"</span><span class="token keyword">:</span>  serical/******** directory<span class="token operator">=</span>dmp_dir 
dumpfile<span class="token operator">=</span>test.dmp nologfile<span class="token operator">=</span>y full
处理对象类型 SCHEMA_EXPORT/USER
ORA-31684: 对象类型 USER:<span class="token string">"SERICAL"</span> 已存在
处理对象类型 SCHEMA_EXPORT/SYSTEM_GRANT
处理对象类型 SCHEMA_EXPORT/ROLE_GRANT
处理对象类型 SCHEMA_EXPORT/DEFAULT_ROLE
处理对象类型 SCHEMA_EXPORT/PRE_SCHEMA/PROCACT_SCHEMA
处理对象类型 SCHEMA_EXPORT/TABLE/TABLE
处理对象类型 SCHEMA_EXPORT/TABLE/TABLE_DATA
<span class="token keyword">.</span> <span class="token keyword">.</span> 导入了 <span class="token string">"SERICAL"</span><span class="token keyword">.</span><span class="token string">"TEST"</span>                            5.445 KB       2 行
作业 <span class="token string">"SERICAL"</span><span class="token keyword">.</span><span class="token string">"SYS_IMPORT_FULL_01"</span> 已经完成, 但是有 1 个错误 <span class="token punctuation">(</span>于 16:08:55 完成<span class="token punctuation">)</span>
</code></pre>
<h3 id="user-serical-不存在时直接导入"><a href="#user-serical-不存在时直接导入" class="headerlink" title="user(serical)不存在时直接导入"></a>user(serical)不存在时直接导入</h3><pre class=" language-bash"><code class="language-bash">impdp system/123456 directory<span class="token operator">=</span>dmp_dir dumpfile<span class="token operator">=</span>test.dmp nologfile<span class="token operator">=</span>y 
remap_schema<span class="token operator">=</span>serical:serical full<span class="token operator">=</span>y

连接到: Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options
已成功加载/卸载了主表 <span class="token string">"SYSTEM"</span><span class="token keyword">.</span><span class="token string">"SYS_IMPORT_FULL_01"</span>
启动 <span class="token string">"SYSTEM"</span><span class="token keyword">.</span><span class="token string">"SYS_IMPORT_FULL_01"</span><span class="token keyword">:</span>  system/******** directory<span class="token operator">=</span>dmp_dir dumpfile<span class="token operator">=</span>test.dmp 
nologfile<span class="token operator">=</span>y remap_schema<span class="token operator">=</span>serical:serical full<span class="token operator">=</span>y
处理对象类型 SCHEMA_EXPORT/USER
处理对象类型 SCHEMA_EXPORT/SYSTEM_GRANT
处理对象类型 SCHEMA_EXPORT/ROLE_GRANT
处理对象类型 SCHEMA_EXPORT/DEFAULT_ROLE
处理对象类型 SCHEMA_EXPORT/PRE_SCHEMA/PROCACT_SCHEMA
处理对象类型 SCHEMA_EXPORT/TABLE/TABLE
处理对象类型 SCHEMA_EXPORT/TABLE/TABLE_DATA
<span class="token keyword">.</span> <span class="token keyword">.</span> 导入了 <span class="token string">"SERICAL"</span><span class="token keyword">.</span><span class="token string">"TEST"</span>                            5.445 KB       2 行
作业 <span class="token string">"SYSTEM"</span><span class="token keyword">.</span><span class="token string">"SYS_IMPORT_FULL_01"</span> 已于 16:15:16 成功完成
</code></pre>
<p><strong>导入完成后即可使用serical用户登录，查看数据</strong><br><strong>Oracle官方文档说明</strong><br><a href="http://docs.oracle.com/cd/B19306_01/server.102/b14215/dp_export.htm" target="_blank" rel="external">expdp</a><br><a href="http://docs.oracle.com/cd/B19306_01/server.102/b14215/dp_import.htm" target="_blank" rel="external">impdp</a></p>
]]></content>
      
        <categories>
            
            <category> Oracle </category>
            
        </categories>
        
        
        <tags>
            
            <tag> oracle </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[OPENSUSE42.1配置]]></title>
      <url>/2016/02/19/OPENSUSE42.1%E9%85%8D%E7%BD%AE/</url>
      <content type="html"><![CDATA[<h3 id="换国内源"><a href="#换国内源" class="headerlink" title="换国内源"></a>换国内源</h3><p>禁用官方源和DVD源</p>
<pre class=" language-bash"><code class="language-bash">zypper -mr -d openSUSE-42.1-0
zypper -mr -d repo-oss
zypper -mr -d repo-update
zypper -mr -d repo-update-non-oss
</code></pre>
<h3 id="切换为科大源"><a href="#切换为科大源" class="headerlink" title="切换为科大源"></a>切换为科大源</h3><p><a href="https://lug.ustc.edu.cn/wiki/mirrors/help/opensuse" target="_blank" rel="external">https://lug.ustc.edu.cn/wiki/mirrors/help/opensuse</a></p>
<pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> zypper ar -fc https://mirrors.ustc.edu.cn/opensuse/distribution/leap/42.1/repo/oss USTC:42.1:OSS
<span class="token function">sudo</span> zypper ar -fc https://mirrors.ustc.edu.cn/opensuse/distribution/leap/42.1/repo/non-oss USTC:42.1:NON-OSS
<span class="token function">sudo</span> zypper ar -fc https://mirrors.ustc.edu.cn/opensuse/update/leap/42.1/oss USTC:42.1:UPDATE-OSS
<span class="token function">sudo</span> zypper ar -fc https://mirrors.ustc.edu.cn/opensuse/update/leap/42.1/non-oss USTC:42.1:UPDATE-NON-OSS
</code></pre>
<h3 id="更新系统"><a href="#更新系统" class="headerlink" title="更新系统"></a>更新系统</h3><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> zypper update
</code></pre>
<h3 id="切换JDK版本"><a href="#切换JDK版本" class="headerlink" title="切换JDK版本"></a>切换JDK版本</h3><p>由于<code>suse</code>自带安装<code>openjdk</code>，删除比较麻烦，这里选择切换JDK版本，JDK安装和普通linux一样，解压然后修改<code>/etc/profile</code>,<br>然后需要<code>update-alternatives</code>命令，安装<code>java</code>,<code>javac</code></p>
<p>安装java</p>
<pre class=" language-bash"><code class="language-bash">update-alternatives --install /usr/bin/java java /usr/java/jdk1.7.0_67/bin/java 90
<span class="token comment" spellcheck="true">#安装javac</span>
update-alternatives --install /usr/bin/javac javac /usr/java/jdk1.7.0_67/bin/javac 90
</code></pre>
<p>设置java命令版本</p>
<pre class=" language-bash"><code class="language-bash">update-alternatives --config java
There are 3 choices <span class="token keyword">for</span> the alternative java <span class="token punctuation">(</span>providing /usr/bin/java<span class="token punctuation">)</span>.

  Selection    Path                                       Priority   Status
------------------------------------------------------------
* 0            /usr/lib64/jvm/jre-1.8.0-openjdk/bin/java   1805      auto mode
  1            /usr/java/jdk1.7.0_67/bin/java              90        manual mode
  2            /usr/lib64/jvm/jre-1.7.0-openjdk/bin/java   1705      manual mode
  3            /usr/lib64/jvm/jre-1.8.0-openjdk/bin/java   1805      manual mode

Press enter to keep the current choice<span class="token punctuation">[</span>*<span class="token punctuation">]</span>, or <span class="token function">type</span> selection number:
</code></pre>
<p>这里有几个版本选择，默认选中的是第一个，可以看到是openjdk，查看链接，最终指向的是openjdk的java命令</p>
<pre class=" language-bash"><code class="language-bash">ll /usr/bin/java
lrwxrwxrwx 1 root root 22 11月 28 21:52 /usr/bin/java -<span class="token operator">></span> /etc/alternatives/java
 ll /etc/alternatives/java
lrwxrwxrwx 1 root root 41 12月  7 16:01 /etc/alternatives/java -<span class="token operator">></span> /usr/lib64/jvm/jre-1.8.0-openjdk/bin/java
</code></pre>
<p>这里选择第二个也就是Selection为1的</p>
<pre class=" language-bash"><code class="language-bash">update-alternatives --config java
There are 3 choices <span class="token keyword">for</span> the alternative java <span class="token punctuation">(</span>providing /usr/bin/java<span class="token punctuation">)</span>.

  Selection    Path                                       Priority   Status
------------------------------------------------------------
  0            /usr/lib64/jvm/jre-1.8.0-openjdk/bin/java   1805      auto mode
* 1            /usr/java/jdk1.7.0_67/bin/java              90        manual mode
  2            /usr/lib64/jvm/jre-1.7.0-openjdk/bin/java   1705      manual mode
  3            /usr/lib64/jvm/jre-1.8.0-openjdk/bin/java   1805      manual mode

Press enter to keep the current choice<span class="token punctuation">[</span>*<span class="token punctuation">]</span>, or <span class="token function">type</span> selection number:
</code></pre>
<p>再查看链接，可以看到最终指向了自己安装的jdk</p>
<pre class=" language-bash"><code class="language-bash">ll /usr/bin/java
lrwxrwxrwx 1 root root 22 11月 28 21:52 /usr/bin/java -<span class="token operator">></span> /etc/alternatives/java
ll /etc/alternatives/java
lrwxrwxrwx 1 root root 30 12月  7 16:10 /etc/alternatives/java -<span class="token operator">></span> /usr/java/jdk1.7.0_67/bin/java
</code></pre>
<h3 id="SQL-DEVELOPER"><a href="#SQL-DEVELOPER" class="headerlink" title="SQL DEVELOPER"></a>SQL DEVELOPER</h3><p>图标启动不了，修改</p>
<pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#SetJavaHome，为有效JDK路径即可</span>
vim .sqldeveloper/4.1.0/product.conf
</code></pre>
]]></content>
      
        <categories>
            
            <category> OpenSUSE </category>
            
        </categories>
        
        
        <tags>
            
            <tag> linux </tag>
            
            <tag> opensuse </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Oracle取整]]></title>
      <url>/2016/02/12/Oracle%E5%8F%96%E6%95%B4/</url>
      <content type="html"><![CDATA[<pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">--1.取整(大)  　　    </span>
<span class="token keyword">select</span> ceil<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1.501</span><span class="token punctuation">)</span><span class="token punctuation">,</span> ceil<span class="token punctuation">(</span><span class="token number">1.501</span><span class="token punctuation">)</span> <span class="token keyword">from</span> dual<span class="token punctuation">;</span>


<span class="token comment" spellcheck="true">--2.取整（小） 　　</span>
<span class="token keyword">select</span> floor<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1.501</span><span class="token punctuation">)</span><span class="token punctuation">,</span> floor<span class="token punctuation">(</span><span class="token number">1.501</span><span class="token punctuation">)</span> <span class="token keyword">from</span> dual<span class="token punctuation">;</span>

<span class="token comment" spellcheck="true">--3.取整（截取）　 </span>
<span class="token keyword">select</span> trunc<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1.502</span><span class="token punctuation">)</span><span class="token punctuation">,</span> trunc<span class="token punctuation">(</span><span class="token number">1.502</span><span class="token punctuation">)</span> <span class="token keyword">from</span> dual<span class="token punctuation">;</span>      

<span class="token comment" spellcheck="true">--4.取整(舍入)           </span>
<span class="token keyword">select</span> <span class="token function">round</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1.501</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">round</span><span class="token punctuation">(</span><span class="token number">1.501</span><span class="token punctuation">)</span> <span class="token keyword">from</span> dual<span class="token punctuation">;</span>
</code></pre>
]]></content>
      
        <categories>
            
            <category> Oracle </category>
            
        </categories>
        
        
        <tags>
            
            <tag> oracle </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Express不是内部或者外部命令]]></title>
      <url>/2016/02/01/Express%E4%B8%8D%E6%98%AF%E5%86%85%E9%83%A8%E6%88%96%E8%80%85%E5%A4%96%E9%83%A8%E5%91%BD%E4%BB%A4/</url>
      <content type="html"><![CDATA[<pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#全局安装express</span>
C:\Users\serical<span class="token operator">></span>npm <span class="token function">install</span> -g express
<span class="token comment" spellcheck="true">#使用express -V，不是内部或着外部命令</span>
<span class="token comment" spellcheck="true">#最新express4.0版本中将命令工具分家出来了(项目地址:https://github.com/expressjs/generator),</span>
<span class="token comment" spellcheck="true">#所以我们还需要安装一个命令工具,命令如下:</span>
C:\Users\serical<span class="token operator">></span>npm <span class="token function">install</span> -g express-generator
<span class="token comment" spellcheck="true">#使用express -V，这个时候可以用了</span>
C:\Users\serical<span class="token operator">></span>express -V
4.13.0
</code></pre>
]]></content>
      
        <categories>
            
            <category> Nodejs </category>
            
        </categories>
        
        
        <tags>
            
            <tag> windows </tag>
            
            <tag> nodejs </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
